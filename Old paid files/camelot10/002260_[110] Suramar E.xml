<?xml version="1.0" encoding="utf-16"?>
<EasyQuestProfile xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <QuestsSorted>
    <QuestsSorted Action="RunCode" NameClass="// Map ID = Suramar  //  &#xD;&#xA;robotManager.Helpful.Var.SetVar(&quot;WorldQuestCurrentMapId&quot;, 1033);" />
    <QuestsSorted Action="WriteLog" NameClass="Suramar NE-SE-(E)-N-NW-C-S-SW-W profile start" />
    <QuestsSorted Action="Pulse" NameClass="TravelToSuramar" />
    <QuestsSorted Action="None" NameClass="=== E === " />
    <QuestsSorted Action="Pulse" NameClass="ContaintheirAdvance" />
    <QuestsSorted Action="Pulse" NameClass="SlabofBaconCooking" />
    <QuestsSorted Action="Pulse" NameClass="ClawsforAlarm" />
    <QuestsSorted Action="RunCode" NameClass="/* ENABLE SKINNING */ wManager.wManagerSetting.CurrentSetting.SkinNinja = true;&#xA; wManager.wManagerSetting.CurrentSetting.SkinMobs = true;" />
    <QuestsSorted Action="Pulse" NameClass="RockHardCrabChitinSkinning" />
    <QuestsSorted Action="RunCode" NameClass="WorldQuest.SetDefaultSettings();" />
    <QuestsSorted Action="RunCode" NameClass="// CLAWS FOR ALARM AFTER // &#xD;&#xA;  if (ObjectManager.Me.PlayerUsingVehicle)&#xD;&#xA;   Usefuls.EjectVehicle();" />
    <QuestsSorted Action="Pulse" NameClass="UnderseaSurvey" />
    <QuestsSorted Action="RunCode" NameClass="// UnerseaSurvery After //&#xD;&#xA;&#xD;&#xA;wManager.wManagerSetting.CurrentSetting.UseGroundMount = true;&#xD;&#xA;wManager.wManagerSetting.CurrentSetting.UseFlyingMount = true;&#xD;&#xA;wManager.wManagerSetting.CurrentSetting.UseMount = true;" />
    <QuestsSorted Action="Pulse" NameClass="DANGERAzjatar" />
    <QuestsSorted Action="Pulse" NameClass="FlightMastersWhistle" />
    <QuestsSorted Action="None" NameClass="=== N === " />
    <QuestsSorted Action="WriteLog" NameClass="Suramar NE-SE-(E)-N-NW-C-S-SW-W profile complete. Loading next profile." />
    <QuestsSorted Action="LoadProfile" NameClass="camelot10\Legion world quests\Suramar\[110] Suramar N.xml" />
  </QuestsSorted>
  <NpcQuest>
    <NPCQuest Id="97140" Name="Первая чародейка Талисра" GameObject="false">
      <PickUpQuests />
      <TurnInQuests>
        <int>42421</int>
      </TurnInQuests>
      <Position X="1734.486" Y="4599.241" Z="96.28265" />
    </NPCQuest>
  </NpcQuest>
  <Npc>
    <Npc>
      <Position X="1761.358" Y="4640.597" Z="123.8659" />
      <Entry>257977</Entry>
      <Name>Mailbox</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Mailbox</Type>
      <ContinentId>Troll_Raid</ContinentId>
    </Npc>
    <Npc>
      <Position X="794.6371" Y="5185.601" Z="37.39329" />
      <Entry>98969</Entry>
      <Name>Stalriss Dawnrunner</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Vendor</Type>
      <ContinentId>Troll_Raid</ContinentId>
    </Npc>
    <Npc>
      <Position X="794.6371" Y="5185.601" Z="37.39329" />
      <Entry>98969</Entry>
      <Name>Stalriss Dawnrunner</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Repair</Type>
      <ContinentId>Troll_Raid</ContinentId>
    </Npc>
  </Npc>
  <Blackspots>
    <Blackspot X="2094.86841" Y="4027.04565" Z="219.471191" Radius="30" />
    <Blackspot X="1487.42529" Y="4546.066" Z="123.546295" Radius="21" />
    <Blackspot X="2247.62378" Y="4221.041" Z="274.195862" Radius="22" />
    <Blackspot X="2367.89087" Y="4493.347" Z="261.013336" Radius="4.6" />
    <Blackspot X="2368.62231" Y="4496.402" Z="260.508179" Radius="4.6" />
    <Blackspot X="2368.80176" Y="4499.93945" Z="260.2146" Radius="4.6" />
    <Blackspot X="2368.91919" Y="4502.60352" Z="260.2185" Radius="4.6" />
    <Blackspot X="2368.62842" Y="4505.898" Z="260.085571" Radius="4.6" />
    <Blackspot X="2366.98022" Y="4508.839" Z="259.4887" Radius="4.6" />
    <Blackspot X="2364.26074" Y="4510.96973" Z="259.1518" Radius="4.6" />
    <Blackspot X="2360.426" Y="4513.10547" Z="257.197876" Radius="4.6" />
    <Blackspot X="2359.27783" Y="4515.341" Z="256.8019" Radius="4.6" />
    <Blackspot X="2356.66187" Y="4517.496" Z="256.402557" Radius="4.6" />
    <Blackspot X="2355.6543" Y="4518.08447" Z="256.251343" Radius="4.6" />
    <Blackspot X="2352.68359" Y="4517.76074" Z="259.414246" Radius="4.6" />
    <Blackspot X="2351.39258" Y="4517.088" Z="259.9789" Radius="4.6" />
    <Blackspot X="2349.03638" Y="4515.486" Z="256.009125" Radius="4.6" />
    <Blackspot X="2344.653" Y="4517.745" Z="256.380981" Radius="4.6" />
    <Blackspot X="2342.30249" Y="4517.477" Z="256.582916" Radius="4.6" />
    <Blackspot X="2340.84888" Y="4516.335" Z="256.103363" Radius="4.6" />
    <Blackspot X="2340.5022" Y="4516.001" Z="256.1711" Radius="4.6" />
    <Blackspot X="2339.33179" Y="4514.89746" Z="256.550079" Radius="4.6" />
    <Blackspot X="2338.095" Y="4513.797" Z="256.961975" Radius="4.6" />
    <Blackspot X="2336.94" Y="4512.79248" Z="257.350525" Radius="4.6" />
    <Blackspot X="2335.626" Y="4511.5083" Z="257.769958" Radius="4.6" />
    <Blackspot X="2334.19629" Y="4510.015" Z="258.2107" Radius="4.6" />
    <Blackspot X="2333.29761" Y="4508.942" Z="258.6263" Radius="4.6" />
    <Blackspot X="2333.258" Y="4508.32129" Z="258.79007" Radius="4.6" />
    <Blackspot X="2333.10522" Y="4506.615" Z="259.261261" Radius="4.6" />
    <Blackspot X="2333.0376" Y="4504.545" Z="259.778168" Radius="4.6" />
    <Blackspot X="2332.79785" Y="4501.687" Z="260.560669" Radius="4.6" />
    <Blackspot X="2332.79443" Y="4499.784" Z="260.904541" Radius="4.6" />
    <Blackspot X="2333.21436" Y="4498.69434" Z="260.932129" Radius="4.6" />
    <Blackspot X="2334.12769" Y="4496.40869" Z="260.963379" Radius="4.6" />
    <Blackspot X="2334.70435" Y="4494.63574" Z="261.0628" Radius="4.6" />
    <Blackspot X="2338.21362" Y="4496.459" Z="258.643677" Radius="4.6" />
    <Blackspot X="2340.31836" Y="4495.09668" Z="258.642944" Radius="4.6" />
    <Blackspot X="2340.88477" Y="4494.23975" Z="258.66745" Radius="4.6" />
    <Blackspot X="2344.00537" Y="4488.448" Z="259.610382" Radius="4.6" />
    <Blackspot X="1210.426" Y="2051.203" Z="5.53815746" Radius="50" />
  </Blackspots>
  <BlackGuids />
  <EasyQuests>
    <EasyQuest>
      <Name>+FlightMastersWhistle</Name>
      <QuestId />
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>//FLIGHT MASTERS WHISTLE START
public sealed class FlightMastersWhistle : wManager.Wow.Class.QuestClass
{
	uint whistleId = 141605;

	public FlightMastersWhistle()
	{
		Name = "+FlightMastersWhistle";
		QuestId.AddRange(new[] { 0 });
		Step = new System.Collections.Generic.List&lt;int&gt; { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
		StepAutoDetect = new[] { false, false, false, false, false, false, false, false, false, false };
		PickUpQuestOnItem = false;
		PickUpQuestOnItemID = 0;
		GossipOptionItem = 1;
		WoWClass = wManager.Wow.Enums.WoWClass.None;
		MinLevel = 0;
		MaxLevel = 999;
		RequiredQuest = 0;
	}

	public override bool CanConditions()
	{
		return WorldQuest.Whistle.Can();
	}

	public override bool IsComplete()
	{
		return !WorldQuest.Whistle.Can();
	}

	public override bool IsCompleted()
	{
		return IsComplete();
	}

	public override bool HasQuest()
	{
		return CanConditions();
	}

	public override bool Pulse()
	{
		WorldQuest.Whistle.Use();
		return true;
	}

}
//FLIGHT MASTERS WHISTLE END</Code>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>		var timeLeft = wManager.Wow.Helpers.Lua.LuaDoString&lt;double&gt;("local startTime, duration, enable = GetItemCooldown(" + 141605 + "); return startTime + duration - GetTime();");
		return !ObjectManager.Me.IsIndoors &amp;&amp; timeLeft &lt;= 0;</CanCondition>
      <IsCompleteCondition>		var timeLeft = wManager.Wow.Helpers.Lua.LuaDoString&lt;double&gt;("local startTime, duration, enable = GetItemCooldown(" + 141605 + "); return startTime + duration - GetTime();");
		return ObjectManager.Me.IsIndoors || timeLeft &gt; 0;</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>+Travel To Suramar</Name>
      <QuestId />
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.Travel.ToZone(WorldQuest.MapId.Suramar);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Claws for Alarm!</Name>
      <QuestId>
        <int>45307</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public sealed class ClawsforAlarm : WorldQuest.Murky
{
	List&lt;int&gt; _mobs = new List&lt;int&gt;() {
		100998, // http://www.wowhead.com/npc=100998/sashjtar-myrmidon
		100999, // http://www.wowhead.com/npc=100999/sashjtar-siren
	};
	List&lt;Vector3&gt; _path = new List&lt;Vector3&gt;() {
		new Vector3(1157.117f, 2098.962f, 3.359529f, "None"),
		new Vector3(1161.989f, 2102.14f, 4.233728f, "None"),
		new Vector3(1168.677f, 2106.502f, 4.692802f, "None"),
		new Vector3(1175.065f, 2111.138f, 4.448995f, "None"),
		new Vector3(1180.606f, 2116.793f, 3.797883f, "None"),
		new Vector3(1187.669f, 2119.894f, 3.879225f, "None"),
		new Vector3(1194.97f, 2119.548f, 4.74217f, "None"),
		new Vector3(1202.258f, 2115.948f, 5.089375f, "None"),
		new Vector3(1209.381f, 2112.43f, 7.377687f, "None"),
		new Vector3(1216.49f, 2108.919f, 9.825944f, "None"),
		new Vector3(1221.835f, 2106.313f, 9.975626f, "None"),
		new Vector3(1227.494f, 2104.376f, 9.65519f, "None"),
		new Vector3(1233.201f, 2102.576f, 10.65462f, "None"),
		new Vector3(1238.926f, 2100.769f, 11.23826f, "None"),
		new Vector3(1244.655f, 2098.962f, 11.98235f, "None"),
		new Vector3(1250.237f, 2096.853f, 13.79647f, "None"),
		new Vector3(1255.254f, 2093.543f, 15.56583f, "None"),
		new Vector3(1261.516f, 2088.822f, 17.03214f, "None"),
		new Vector3(1267.206f, 2085.961f, 16.91721f, "None"),
		new Vector3(1273.429f, 2083.985f, 17.14223f, "None"),
		new Vector3(1279.158f, 2082.358f, 16.98155f, "None"),
		new Vector3(1285.145f, 2084.075f, 16.9624f, "None"),
		new Vector3(1291.121f, 2089.393f, 17.16849f, "None"),
		new Vector3(1297.092f, 2094.706f, 17.85238f, "None"),
		new Vector3(1303.074f, 2100.029f, 17.84066f, "None"),
		new Vector3(1309.021f, 2105.32f, 17.76742f, "None"),
		new Vector3(1314.477f, 2111.114f, 16.8755f, "None"),
		new Vector3(1319.727f, 2117.318f, 16.89154f, "None"),
		new Vector3(1324.285f, 2123.689f, 16.89015f, "None"),
		new Vector3(1329.262f, 2127.186f, 16.87215f, "None"),
	};

	public ClawsforAlarm()
	{
		Name = "Claws for Alarm!";
		QuestId.Add(45307);
	}

	public override bool Pulse()
	{
		if (TryBecomeMurky())
			return true;

		if (TryCombat())
			return true;

		//boss
		if (!WorldQuest.Complete(this, 2))
		{
			var mobs = new List&lt;int&gt;() {
				116489, // http://www.wowhead.com/npc=116489/sashjtar-culinarian
			};
			var path = new List&lt;Vector3&gt;() {
				new Vector3(1153.674, 2043.492, 0.8947358, "None"),
			};
			TryFind(mobs, path);
			return true;
		}
		//mobs
		WorldQuest.Murky.TryFind(_mobs, _path);
		return true;
	}

	bool TryBecomeMurky()
	{
		if (ObjectManager.Me.PlayerUsingVehicle)
			return false;

		var eggId = 116538;
		var eggPosition = new Vector3(1431.409, 2106.533, 2.552323, "None");
		if (ObjectManager.Me.Position.DistanceTo(eggPosition) &gt; 20)
		{
			Log("to start");
			GoToTask.ToPosition(eggPosition);
			return true;
		}
		var egg = ObjectManager.GetObjectWoWUnit().Where(o =&gt; o.IsValid &amp;&amp; o.Entry == eggId).OrderBy(o =&gt; o.GetDistance).FirstOrDefault();
		if (egg != null)
		{
			Interact.InteractGameObject(egg.GetBaseAddress);
			Log("gather " + egg.Name);
			Thread.Sleep(3 * 1000);
		}
		return true;
	}
}

</Code>
      </QuestClass>
      <ObjectiveCount1>20</ObjectiveCount1>
      <ObjectiveCount2>10</ObjectiveCount2>
      <ObjectiveCount3>20</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Contain their Advance</Name>
      <QuestId>
        <int>44867</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="1415.998" Y="3065.773" Z="112.1201" />
          <Vector3 X="1441.304" Y="3045.318" Z="112.0131" />
          <Vector3 X="1427.517" Y="2999.604" Z="111.7716" />
          <Vector3 X="1414.597" Y="3002.152" Z="113.1037" />
          <Vector3 X="1391.217" Y="3021.03" Z="111.6216" />
        </HotSpots>
        <EntryTarget>
          <int>115690</int>
          <int>115692</int>
          <int>115755</int>
          <int>115691</int>
          <int>115724</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(this);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(this);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>DANGER: Az'jatar</Name>
      <QuestId>
        <int>44121</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(1178.118, 2155.932, 0.6914619, "None");
		var mobs = new List&lt;int&gt;() 
		{
			112759, // Az'jatar
		};
		WorldQuest.TryKillElite(campPosition, mobs);
		return true;
</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.CompleteGroup(this);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Slab of Bacon (Cooking)</Name>
      <QuestId>
        <int>41262</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="1590.089" Y="2445.165" Z="0.6804413" />
        </HotSpots>
        <EntryTarget>
          <int>103787</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.CompleteCooking(41262);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Undersea Survey</Name>
      <QuestId>
        <int>44002</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>public sealed class UnderseaSurvey : QuestClass
{
	bool needSwimUp = false;

	public UnderseaSurvey()
	{
		Name = "Undersea Survey";
		QuestId.AddRange(new[] { 44002 });
		Step = new List&lt;int&gt; { 1, 1, 1, 1, 0, 0, 0, 0, 0, 0 };
		StepAutoDetect = new[] { false, false, false, false, false, false, false, false, false, false };
		PickUpQuestOnItem = false;
		PickUpQuestOnItemID = 0;
		GossipOptionItem = 1;
		WoWClass = wManager.Wow.Enums.WoWClass.None;
		MinLevel = 0;
		MaxLevel = 999;
		RequiredQuest = 0;
	}

	public override bool CanConditions()
	{
		return WorldQuest.Can(44002);
	}

	public override bool IsComplete()
	{
		return WorldQuest.Complete(44002);
	}

	public override bool IsCompleted()
	{
		return false;
	}

	public override bool HasQuest()
	{
		return true;
	}

	List&lt;Vector3&gt; path1 = new List&lt;Vector3&gt;() {
			new Vector3(1373.158f, 2295.872f, -2.094649f, "Swimming"),
			new Vector3(1374.708f, 2294.555f, -73.22462f, "Swimming"),
		};
	List&lt;Vector3&gt; path2 = new List&lt;Vector3&gt;() {
			new Vector3(1340.555f, 2519.946f, -1.568381f, "Swimming"),
			new Vector3(1346.579f, 2522.943f, -105.1807f, "Swimming"),
		};
	List&lt;Vector3&gt; path3 = new List&lt;Vector3&gt;() {
			new Vector3(1118.17f, 2233.839f, -1.685011f, "Swimming"),
			new Vector3(1115.587f, 2236.969f, -107.5077f, "Swimming"),
		};
	List&lt;Vector3&gt; path4 = new List&lt;Vector3&gt;() {
			new Vector3(839.7327f, 2197.916f, -1.589844f, "Swimming"),
			new Vector3(837.956f, 2198.221f, -74.26735f, "Swimming"),
		};


	List&lt;int&gt; pylons = new List&lt;int&gt;()
		{
			0,
			253085,
			253087,
			253086,
			253088,
		};

	public override bool Pulse()
	{
		var paths = new List&lt;List&lt;Vector3&gt;&gt;(){
			new List&lt;Vector3&gt;(),
			path1,
			path2,
			path3,
			path4,
		};

		if (needSwimUp)
		{
			//Logging.Write("swim up");
			Move.JumpOrAscend(Move.MoveAction.PressKey, 1 * 1000); // jump 1 sec
			needSwimUp = ObjectManager.Me.BreathTimerLeft &gt; 0;
			return true;
		}

		for (int i = 1; i &lt;= 4; i++)
		{
			if (!WorldQuest.Complete(44002, i))
			{
				if (ObjectManager.Me.Position.DistanceTo(paths[i][1]) &lt; 50)
				{
					//Logging.Write("use pylon #" + i);
					if (GoToTask.ToPositionAndIntecractWithGameObject(ObjectManager.Me.Position, pylons[i]))
					{
						Thread.Sleep(2 * 1000);
						wManager.wManagerSetting.CurrentSetting.UseGroundMount = true;
						wManager.wManagerSetting.CurrentSetting.UseFlyingMount = true;
						wManager.wManagerSetting.CurrentSetting.UseMount = true;
						needSwimUp = true;
						return true;
					}
				}
				//Logging.Write("to pylon #" + i);
				if (GoToTask.ToPosition(paths[i][0]))
				{
					MountTask.DismountMount();
					wManager.wManagerSetting.CurrentSetting.UseGroundMount = false;
					wManager.wManagerSetting.CurrentSetting.UseFlyingMount = false;
					wManager.wManagerSetting.CurrentSetting.UseMount = false;
					//Logging.Write("dive to pylon #" + i);
					if (GoToTask.ToPosition(paths[i][1]))
					{
						return true;
					}
				}
				return true;
			}
		}
		return true;
	}
}</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(44002);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(44002);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Rock-Hard Crab Chitin (Skinning)</Name>
      <QuestId>
        <int>41349</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="1597.722" Y="2516.423" Z="0.4063774" />
          <Vector3 X="1574.018" Y="2489.266" Z="1.258613" />
          <Vector3 X="1556.282" Y="2458.46" Z="0.9897066" />
          <Vector3 X="1562.507" Y="2443.32" Z="0.5354056" />
          <Vector3 X="1545.282" Y="2408.138" Z="0.7335305" />
          <Vector3 X="1546.391" Y="2359.413" Z="2.551818" />
          <Vector3 X="1544.402" Y="2389.296" Z="0.9620674" />
          <Vector3 X="1530.122" Y="2339.658" Z="-0.3488468" />
          <Vector3 X="1529.07" Y="2305.181" Z="2.043934" />
          <Vector3 X="1511.483" Y="2279.589" Z="1.294912" />
          <Vector3 X="1498.959" Y="2253.125" Z="-0.8244916" />
          <Vector3 X="1493.922" Y="2217.98" Z="1.605529" />
        </HotSpots>
        <EntryTarget>
          <int>99720</int>
          <int>99504</int>
          <int>109803</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.CompleteSkinning(41349);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
  </EasyQuests>
  <Script>camelot10\Libs\WorldQuest.cs</Script>
  <OffMeshConnections />
</EasyQuestProfile>