<?xml version="1.0" encoding="utf-16"?>
<EasyQuestProfile xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <QuestsSorted>
    <QuestsSorted Action="RunCode" NameClass="// Map ID = Valsharah  //  &#xD;&#xA;robotManager.Helpful.Var.SetVar(&quot;WorldQuestCurrentMapId&quot;, 1018);" />
    <QuestsSorted Action="WriteLog" NameClass="Val'sharah SE-S-W-SW-NW-N-(NE)-C-E profile start" />
    <QuestsSorted Action="Pulse" NameClass="TravelToValsharah" />
    <QuestsSorted Action="None" NameClass=" === NE === " />
    <QuestsSorted Action="Pulse" NameClass="PoisonedWaters1" />
    <QuestsSorted Action="Pulse" NameClass="PoisonedWaters2" />
    <QuestsSorted Action="Pulse" NameClass="PoisonedWaters3" />
    <QuestsSorted Action="Pulse" NameClass="LivelyMossgillPerchFishing" />
    <QuestsSorted Action="Pulse" NameClass="TheFelandtheFawns1Invasion" />
    <QuestsSorted Action="Pulse" NameClass="TheFelandtheFawns2Invasion" />
    <QuestsSorted Action="Pulse" NameClass="WhataNightmare" />
    <QuestsSorted Action="Pulse" NameClass="TwistedAsh" />
    <QuestsSorted Action="Pulse" NameClass="OutoftheWoodwork" />
    <QuestsSorted Action="Pulse" NameClass="ChampionsofElune" />
    <QuestsSorted Action="RunCode" NameClass="ChampionsofElune.ResetSettings();&#xD;&#xA;" />
    <QuestsSorted Action="Pulse" NameClass="FlightMastersWhistle" />
    <QuestsSorted Action="None" NameClass=" === CENTER === " />
    <QuestsSorted Action="WriteLog" NameClass="Val'sharah SE-S-W-SW-NW-N-(NE)-C-E profile complete. Loading next profile." />
    <QuestsSorted Action="LoadProfile" NameClass="camelot10\Legion world quests\Val'sharah\[110] Val'sharah C.xml" />
  </QuestsSorted>
  <NpcQuest>
    <NPCQuest Id="106901" Name="Сильвио Олений Рог" GameObject="false">
      <PickUpQuests />
      <TurnInQuests>
        <int>42170</int>
      </TurnInQuests>
      <Position X="2274.2" Y="6592.066" Z="138.8772" Type="Flying" />
    </NPCQuest>
  </NpcQuest>
  <Npc>
    <Npc>
      <Position X="2275.108" Y="6575.564" Z="142.8352" />
      <Entry>266416</Entry>
      <Name>Mailbox</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Mailbox</Type>
      <ContinentId>Troll_Raid</ContinentId>
    </Npc>
    <Npc>
      <Position X="2319.413" Y="6611.955" Z="140.3528" />
      <Entry>93464</Entry>
      <Name>Callista Swiftglaive</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Repair</Type>
      <ContinentId>Troll_Raid</ContinentId>
    </Npc>
    <Npc>
      <Position X="2319.413" Y="6611.955" Z="140.3528" />
      <Entry>93464</Entry>
      <Name>Callista Swiftglaive</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Vendor</Type>
      <ContinentId>Troll_Raid</ContinentId>
    </Npc>
  </Npc>
  <Blackspots>
    <Blackspot X="3146.086" Y="7266.757" Z="46.64383" Radius="4.5" />
    <Blackspot X="3142.17163" Y="7268.50732" Z="46.56525" Radius="4.5" />
    <Blackspot X="3140.24316" Y="7269.603" Z="48.16084" Radius="4.5" />
    <Blackspot X="3138.153" Y="7270.972" Z="49.00696" Radius="4.5" />
    <Blackspot X="3137.63867" Y="7271.38037" Z="49.23264" Radius="4.5" />
    <Blackspot X="3135.52173" Y="7271.71973" Z="51.5348" Radius="4.5" />
    <Blackspot X="2319.98853" Y="6611.911" Z="140.352463" Radius="15" />
    <Blackspot X="2971.40283" Y="6461.225" Z="206.487732" Radius="15" />
    <Blackspot X="2963.90723" Y="6485.22949" Z="206.804871" Radius="15" />
    <Blackspot X="2957.51855" Y="6504.268" Z="206.804871" Radius="15" />
    <Blackspot X="2953.84521" Y="6518.69971" Z="206.804871" Radius="15" />
    <Blackspot X="2638.9856" Y="6558.17871" Z="148.2571" Radius="5" />
    <Blackspot X="2321.55029" Y="6612.485" Z="140.351974" Radius="30" />
    <Blackspot X="2528.405" Y="6861.30957" Z="144.632248" Radius="15" />
    <Blackspot X="3743.30542" Y="7822.881" Z="0.000902950764" Radius="200" />
    <Blackspot X="3506.508" Y="7803.71" Z="19.1566658" Radius="15" />
    <Blackspot X="3521.11548" Y="7873.169" Z="8.709135E-05" Radius="55" />
    <Blackspot X="1699.90271" Y="6601.2417" Z="86.76433" Radius="15" />
    <Blackspot X="2315.36743" Y="7547.647" Z="1.95514834" Radius="7" />
    <Blackspot X="2240.899" Y="6525.57" Z="149.156754" Radius="15" />
    <Blackspot X="2383.23364" Y="7480.35742" Z="7.79917574" Radius="150" />
    <Blackspot X="3517.587" Y="7806.50732" Z="12.8943205" Radius="35" />
    <Blackspot X="3560.90527" Y="7661.864" Z="0.000384300947" Radius="75" />
    <Blackspot X="3632.90918" Y="5645.77051" Z="306.546326" Radius="10" />
  </Blackspots>
  <BlackGuids />
  <EasyQuests>
    <EasyQuest>
      <Name>+FlightMastersWhistle</Name>
      <QuestId />
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>//FLIGHT MASTERS WHISTLE START
public sealed class FlightMastersWhistle : wManager.Wow.Class.QuestClass
{
	uint whistleId = 141605;

	public FlightMastersWhistle()
	{
		Name = "+FlightMastersWhistle";
		QuestId.AddRange(new[] { 0 });
		Step = new System.Collections.Generic.List&lt;int&gt; { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
		StepAutoDetect = new[] { false, false, false, false, false, false, false, false, false, false };
		PickUpQuestOnItem = false;
		PickUpQuestOnItemID = 0;
		GossipOptionItem = 1;
		WoWClass = wManager.Wow.Enums.WoWClass.None;
		MinLevel = 0;
		MaxLevel = 999;
		RequiredQuest = 0;
	}

	public override bool CanConditions()
	{
		return WorldQuest.Whistle.Can();
	}

	public override bool IsComplete()
	{
		return !WorldQuest.Whistle.Can();
	}

	public override bool IsCompleted()
	{
		return IsComplete();
	}

	public override bool HasQuest()
	{
		return CanConditions();
	}

	public override bool Pulse()
	{
		WorldQuest.Whistle.Use();
		return true;
	}

}
//FLIGHT MASTERS WHISTLE END</Code>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>		var timeLeft = wManager.Wow.Helpers.Lua.LuaDoString&lt;double&gt;("local startTime, duration, enable = GetItemCooldown(" + 141605 + "); return startTime + duration - GetTime();");
		return !ObjectManager.Me.IsIndoors &amp;&amp; timeLeft &lt;= 0;</CanCondition>
      <IsCompleteCondition>		var timeLeft = wManager.Wow.Helpers.Lua.LuaDoString&lt;double&gt;("local startTime, duration, enable = GetItemCooldown(" + 141605 + "); return startTime + duration - GetTime();");
		return ObjectManager.Me.IsIndoors || timeLeft &gt; 0;</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>+Travel To Val'sharah</Name>
      <QuestId />
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.Travel.ToZone(WorldQuest.MapId.Valsharah);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Champions of Elune</Name>
      <QuestId>
        <int>42174</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public class ChampionsofElune : QuestClass
{
	List&lt;Vector3&gt; _hotspots = new List&lt;Vector3&gt;()
	{
		new Vector3(3609.738f, -4694.284f, 117.3815f, "None"),
		new Vector3(3612.588f, -4711.875f, 118.6153f, "None"),
		new Vector3(3615.751f, -4729.75f, 118.157f, "None"),
		new Vector3(3618.866f, -4747.351f, 117.298f, "None"),
		new Vector3(3623.799f, -4764.203f, 113.9985f, "None"),
		new Vector3(3623.156f, -4748.32f, 116.5794f, "None"),
		new Vector3(3617.8f, -4731.07f, 118.248f, "None"),
		new Vector3(3613.013f, -4713.731f, 118.6592f, "None"),
	};
	List&lt;int&gt; _mobs2 = new List&lt;int&gt;()
	{
		//98757, //pit lord
		//97808, //infernal
		97796, //felguard
		97803, //imp
	};
	List&lt;int&gt; _mobs4 = new List&lt;int&gt;()
	{
		98757, //pit lord
	};
	List&lt;int&gt; _mobs3 = new List&lt;int&gt;()
	{
		97808, //infernal
	};
	List&lt;int&gt; _mobs = new List&lt;int&gt;();

	public ChampionsofElune()
	{
		Name = "Champions of Elune";
		QuestId.Add(42174);
		Step.AddRange(new[] { 0, 0, 0, 0, 0 });
	}
	static void Log(string text)
	{
		Logging.WriteDebug("[Champions of Elune] " + text);
	}
	public override bool Pulse()
	{
		if (TryBecomeChampion())
			return true;

		if (TryCombat())
			return true;

		if (!WorldQuest.Complete(this, 4))
			_mobs = _mobs4;
		else if (!WorldQuest.Complete(this, 3))
			_mobs = _mobs3;
		else
			_mobs = _mobs2;

		if (TryFind())
			return true;

		ToRandomHotspot();
		return true;
	}
	bool TryCombat()
	{
		var furbolg = 106575; //furbolg http://www.wowhead.com/npc=106575/blackmaw-furbolg
		var furgolg1 = 211339; //1 http://www.wowhead.com/spell=211339/crazed-assault  cd 10s
		//2 http://www.wowhead.com/spell=211347/terrifying-roar
		//3 http://www.wowhead.com/spell=211346/rejuvenation
		var bear = 106588;   //sentinel http://www.wowhead.com/npc=106588/sentinel-of-ursoc
		var bear1 = 211290; //1	http://www.wowhead.com/spell=211290/bear-claw
		//2 http://www.wowhead.com/spell=183745/falling-stars
		//3 http://www.wowhead.com/spell=211306/rampage
		var tree = 106628; //tree http://www.wowhead.com/npc=106628/verdant-grovewalker
		var tree1 = 211496; //1 http://www.wowhead.com/spell=211496/sticky-sap
		//2 http://www.wowhead.com/spell=211493/thorny-entanglement
		//3 http://www.wowhead.com/spell=211505/tranquility
		var driad = 106607; //driad http://www.wowhead.com/npc=106607/emerald-sister
		var driad3 = 211403; //3 http://www.wowhead.com/spell=211403
		//1 http://www.wowhead.com/spell=211414
		//2 http://www.wowhead.com/spell=211405

		var target = ObjectManager.GetUnitAttackPlayer().FirstOrDefault();
		if (target == null)
			target = ObjectManager.Me.TargetObject;

		if (target == null || !target.IsAlive || !target.IsAttackable || !target.IsValid)
			return false;

		Interact.InteractGameObject(target.GetBaseAddress);
		var dist = ObjectManager.Me.Position.DistanceTo(target.Position);
		if (dist &gt; 5)
		{
			var result = false;
			var path = PathFinder.FindPath(target.Position, out result);
			if (result)
				MovementManager.Go(path);

			Thread.Sleep(1 * 1000);
			return true;
		}

		if (TryPetSpell(furbolg, furgolg1, 1))
			return true;

		if (TryPetSpell(bear, bear1, 1))
			return true;

		if (TryPetSpell(tree, tree1, 1))
			return true;

		if (TryPetSpell(driad, driad3, 3))
			return true;
			
		return false;
	}

	bool TryPetSpell(int petId, int spellId, int button = 1)
	{
		var pet = ObjectManager.Pet;
		if (pet == null || !pet.IsValid || pet.Entry != petId)
			return false;

		var lua = @"start, duration, enabled = GetSpellCooldown('{0}'); return start;";
		if (Lua.LuaDoString&lt;int&gt;(string.Format(lua, spellId)) == 0)
		{
			MovementManager.Face(ObjectManager.Target);
			Lua.RunMacroText("/click OverrideActionBarButton"+button);
			Thread.Sleep(Usefuls.Latency * 2);
			return true;
		}
		return false;
	}

	bool TryBecomeChampion()
	{
		if (ObjectManager.Me.PlayerUsingVehicle)
			return false;

		var p = new Vector3(3516.594, 5549.525, 324.138, "None");
		Log("talk to npc");
		if (GoToTask.ToPositionAndIntecractWithNpc(p, 106638, 1))
		{
			ChangeSettings();
			Thread.Sleep(5 * 1000);
			return true;
		}
		return false;
	}
	public static void ChangeSettings()
	{
		wManager.wManagerSetting.ClearBlacklistOfCurrentProductSession();
		wManager.wManagerSetting.CurrentSetting.UseFlyingMount = false;
		wManager.wManagerSetting.CurrentSetting.UseGroundMount = false;
		wManager.wManagerSetting.CurrentSetting.UseMount = false;
		wManager.wManagerSetting.CurrentSetting.DontStartFighting = true;
		Conditions.ForceIgnoreIsAttacked = true;
		Log("settings changed");
	}
	public static void ResetSettings()
	{
		wManager.wManagerSetting.ClearBlacklistOfCurrentProductSession();
		wManager.wManagerSetting.CurrentSetting.UseFlyingMount = true;
		wManager.wManagerSetting.CurrentSetting.UseGroundMount = true;
		wManager.wManagerSetting.CurrentSetting.UseMount = true;
		Conditions.ForceIgnoreIsAttacked = false;
		wManager.wManagerSetting.CurrentSetting.DontStartFighting = false;
		if (ObjectManager.Me.PlayerUsingVehicle)
			Usefuls.EjectVehicle();
		Log("settings restored");
	}
	bool TryFind()
	{
		var mob = ObjectManager.GetNearestWoWUnit(ObjectManager.GetWoWUnitByEntry(_mobs));
		if (mob != null &amp;&amp; mob.IsAlive &amp;&amp; mob.IsAttackable &amp;&amp; mob.IsValid)
		{
			Log("found mob " + mob.Name);
			Interact.InteractGameObject(mob.GetBaseAddress);
			Thread.Sleep(Usefuls.Latency + 150);
			return true;
		}
		return false;
	}

	bool ToRandomHotspot()
	{
		var p = _hotspots[Others.Random(0, _hotspots.Count - 1)];
		Log("goto random hotstpot " + p);
		return GoToTask.ToPosition(p);
	}


	public override bool HasQuest()
	{
		return true;
	}
	public override bool CanConditions()
	{
		return WorldQuest.Can(this);
	}
	public override bool IsComplete()
	{
		return WorldQuest.Complete(this);
	}

}</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(42174);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(42174);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Lively Mossgill Perch (Fishing)</Name>
      <QuestId>
        <int>41600</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var path = new List&lt;Vector3&gt;()
		{
			new Vector3(3525.607f, 5663.754f, 311.9207f, "None"),
			new Vector3(3531.488f, 5661.718f, 311.3151f, "None"),
			new Vector3(3538.024f, 5659.315f, 311.3802f, "None"),
			new Vector3(3542.665f, 5657.508f, 311.97f, "None"),
			new Vector3(3549.281f, 5654.46f, 312.6484f, "None"),
			new Vector3(3556.416f, 5653.084f, 313.0208f, "None"),
			new Vector3(3563.59f, 5655.113f, 313.6543f, "None"),
			new Vector3(3570.297f, 5657.739f, 314.2133f, "None"),
			new Vector3(3577.507f, 5658.729f, 314.857f, "None"),
			new Vector3(3584.582f, 5657.085f, 315.6083f, "None"),
			new Vector3(3591.5f, 5656.737f, 316.4818f, "None"),
			new Vector3(3597.722f, 5656.932f, 317.9142f, "None"),
			new Vector3(3608.099f, 5657.257f, 319.7126f, "None"),
			new Vector3(3616.357f, 5655.702f, 320.8259f, "None"),
			new Vector3(3622.832f, 5653.303f, 321.1653f, "None"),
			new Vector3(3629.302f, 5654.891f, 323.0213f, "None"),
			new Vector3(3636.046f, 5653.035f, 322.6417f, "None"),
			new Vector3(3642.132f, 5648.86f, 321.919f, "None"),
			new Vector3(3647.417f, 5643.758f, 320.1286f, "None"),
			new Vector3(3652.399f, 5638.435f, 317.9415f, "None"),
			new Vector3(3657.618f, 5633.1f, 315.8187f, "None"),
			new Vector3(3662.967f, 5628.353f, 313.6874f, "None"),
			new Vector3(3667.973f, 5623.368f, 310.5128f, "None"),
			new Vector3(3672.91f, 5618.337f, 310.4542f, "None"),
			new Vector3(3678.862f, 5614.203f, 310.5193f, "None"),
			new Vector3(3685.038f, 5610.165f, 309.3065f, "None"),
			new Vector3(3690.806f, 5605.518f, 309.2168f, "None"),
			new Vector3(3695.728f, 5600.101f, 312.784f, "None"),
			new Vector3(3702.027f, 5596.129f, 315.4702f, "None"),
			new Vector3(3707.091f, 5590.938f, 317.3705f, "None"),
			new Vector3(3711.352f, 5585.38f, 317.1956f, "None"),
		};
		Fisher.Loop(path, 260002); // http://www.wowhead.com/object=260002/lively-mossgill-perch-school
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>10</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.CompleteFishing(41600);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Out of the Woodwork</Name>
      <QuestId>
        <int>42145</int>
      </QuestId>
      <QuestType>InteractWithNpc</QuestType>
      <QuestClass xsi:type="InteractWithNpcEasyQuestClass">
        <HotSpots>
          <Vector3 X="3785.234" Y="5910.299" Z="352.0279" />
          <Vector3 X="3795.876" Y="5868.448" Z="356.6615" />
          <Vector3 X="3727.686" Y="5861.356" Z="347.29" />
          <Vector3 X="3773.548" Y="5877.419" Z="348.4617" />
          <Vector3 X="3709.092" Y="5856.178" Z="345.3498" />
          <Vector3 X="3748.763" Y="5875.812" Z="347.7888" />
          <Vector3 X="3746.08" Y="5908.522" Z="348.6891" />
          <Vector3 X="3732.91" Y="5872.137" Z="347.7896" />
          <Vector3 X="3721.215" Y="5844.968" Z="349.2986" />
          <Vector3 X="3725.075" Y="5859.048" Z="347.1313" />
          <Vector3 X="3733.228" Y="5810.72" Z="353.0734" />
          <Vector3 X="3715.945" Y="5847.403" Z="347.5209" />
          <Vector3 X="3703.666" Y="5797.206" Z="354.6472" />
          <Vector3 X="3709.234" Y="5833.68" Z="348.6078" />
          <Vector3 X="3727.541" Y="5784.722" Z="356.5826" />
          <Vector3 X="3710.768" Y="5816.147" Z="349.764" />
        </HotSpots>
        <GossipOptionNpcInteractWith>-1</GossipOptionNpcInteractWith>
        <Macro />
        <IgnoreIfDead>false</IgnoreIfDead>
        <EntryIdTarget>
          <int>106419</int>
        </EntryIdTarget>
        <Range>4.5</Range>
      </QuestClass>
      <ObjectiveCount1>12</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(42145);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(42145);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Poisoned Waters 1</Name>
      <QuestId>
        <int>41964</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="3329.334" Y="5473.716" Z="328.1197" />
        </HotSpots>
        <EntryTarget>
          <int>106340</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>12</ObjectiveCount1>
      <ObjectiveCount2>10</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(41964);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(41964, 1);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Poisoned Waters 2</Name>
      <QuestId>
        <int>41964</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="3333.092" Y="5625.236" Z="315.0698" />
          <Vector3 X="3407.412" Y="5592.686" Z="312.5874" />
          <Vector3 X="3449.198" Y="5590.685" Z="309.4222" />
          <Vector3 X="3426.687" Y="5539.319" Z="313.7556" />
          <Vector3 X="3474.92" Y="5503.536" Z="316.36" />
          <Vector3 X="3509.583" Y="5477.781" Z="317.1685" />
          <Vector3 X="3554.281" Y="5465.909" Z="309.6966" />
          <Vector3 X="3604.338" Y="5503.029" Z="313.8367" />
          <Vector3 X="3639.176" Y="5552.764" Z="312.6454" />
        </HotSpots>
        <EntryIdObjects>
          <int>249703</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>12</ObjectiveCount1>
      <ObjectiveCount2>10</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(41964);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(41964, 2);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Poisoned Waters 3</Name>
      <QuestId>
        <int>41964</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="3561.728" Y="5624.973" Z="307.5363" />
          <Vector3 X="3640.559" Y="5577.721" Z="307.5357" />
          <Vector3 X="3496.481" Y="5626.538" Z="307.4633" />
          <Vector3 X="3444.1" Y="5511.436" Z="306.132" />
          <Vector3 X="3519.884" Y="5449.438" Z="307.5363" />
          <Vector3 X="3551.8" Y="5446.916" Z="307.5357" />
        </HotSpots>
        <EntryTarget>
          <int>106331</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>12</ObjectiveCount1>
      <ObjectiveCount2>10</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(41964);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(41964, 3);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Fel and the Fawns 1 (Invasion)</Name>
      <QuestId>
        <int>46265</int>
      </QuestId>
      <QuestType>InteractWithNpc</QuestType>
      <QuestClass xsi:type="InteractWithNpcEasyQuestClass">
        <HotSpots>
          <Vector3 X="3734.245" Y="5806.255" Z="354.5806" />
          <Vector3 X="3722.138" Y="5850.035" Z="347.1537" />
          <Vector3 X="3720.126" Y="5860.664" Z="346.5436" />
          <Vector3 X="3772.03" Y="5859.345" Z="351.5032" />
          <Vector3 X="3788.925" Y="5869.212" Z="355.2126" />
          <Vector3 X="3789.241" Y="5924.353" Z="350.0202" />
        </HotSpots>
        <GossipOptionNpcInteractWith>1</GossipOptionNpcInteractWith>
        <Macro />
        <IgnoreIfDead>false</IgnoreIfDead>
        <EntryIdTarget>
          <int>120277</int>
        </EntryIdTarget>
        <Range>4.5</Range>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.CompleteInvasion(this, 1);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Fel and the Fawns 2 (Invasion)</Name>
      <QuestId>
        <int>46265</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="3734.245" Y="5806.255" Z="354.5806" />
          <Vector3 X="3724.993" Y="5848.646" Z="346.876" />
          <Vector3 X="3720.126" Y="5860.664" Z="346.5436" />
          <Vector3 X="3772.03" Y="5859.345" Z="351.5032" />
        </HotSpots>
        <EntryTarget>
          <int>120302</int>
          <int>120303</int>
          <int>120321</int>
          <int>120341</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.CompleteInvasion(this, 2);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Twisted Ash</Name>
      <QuestId>
        <int>41992</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="3519.207" Y="5848.432" Z="268.356" />
          <Vector3 X="3512.409" Y="5835.848" Z="267.399" Type="Swimming" />
          <Vector3 X="3524.105" Y="5883.31" Z="269.5308" />
          <Vector3 X="3550.322" Y="5944.74" Z="259.1441" />
          <Vector3 X="3602.405" Y="5939.829" Z="260.6348" />
        </HotSpots>
        <EntryTarget>
          <int>93155</int>
          <int>97338</int>
          <int>97337</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>7</ObjectiveCount1>
      <ObjectiveCount2>34</ObjectiveCount2>
      <ObjectiveCount3>13</ObjectiveCount3>
      <ObjectiveCount4>17</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(41992);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(41992);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>What a Nightmare</Name>
      <QuestId>
        <int>43784</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public class WhataNightmare : QuestClass
{
	List&lt;int&gt; _mobs = new List&lt;int&gt;()
	{
		109929,109932,109928,109959,109960,109927,109926
	};
	public WhataNightmare()
	{
		Name = "What a Nightmare";
		QuestId.Add(43784);
		Step.AddRange(new[] { 0 });
	}
	public override bool Pulse()
	{
		if (!ObjectManager.Me.PlayerUsingVehicle)
		{
			var p = new Vector3(3439.917, 6104.808, 207.706, "None");
			return GoToTask.ToPositionAndIntecractWithNpc(p, 111359, 1);
		}
		if (WorldQuest.Complete(this))
		{
			Lua.LuaDoString("CastPetAction(6);");
			Thread.Sleep(Others.Random(10000, 15000));
			return true;
		}
		var mob = ObjectManager.GetNearestWoWUnit(ObjectManager.GetWoWUnitByEntry(_mobs));
		if (mob != null &amp;&amp; mob.IsValid &amp;&amp; mob.IsAlive &amp;&amp; mob.IsAttackable &amp;&amp; mob.GetDistance &lt; 100)
		{
			Interact.InteractGameObject(mob.GetBaseAddress);
			Lua.LuaDoString("CastPetAction(1);");
			Thread.Sleep(Usefuls.Latency);
			ClickOnTerrain.Pulse(mob.Position);
			Thread.Sleep(Others.Random(1500, 2000));
		}
		return true;
	}
	public override bool HasQuest()
	{
		return true;
	}
	public override bool IsCompleted()
	{
		return false;
	}
	public override bool IsComplete()
	{
		return WorldQuest.Complete(this) &amp;&amp; !ObjectManager.Me.PlayerUsingVehicle;
	}

}
</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
  </EasyQuests>
  <Script>camelot10\Libs\WorldQuest.cs
camelot10\Libs\Fisher.cs</Script>
	<OffMeshConnections>
		<OffMeshConnection>
			<Path>
				<Vector3 X="1722.931" Y="6854.026" Z="-0.09320737" />
				<Vector3 X="1716.381" Y="6847.469" Z="-1.707255" />
			</Path>
			<ContinentId>1220</ContinentId>
			<Name>Sleeper's Barrow (in)</Name>
		</OffMeshConnection>
		<OffMeshConnection>
			<Path>
				<Vector3 X="1716.381" Y="6847.469" Z="-1.707255" />
				<Vector3 X="1722.048" Y="6853.142" Z="-0.1692697" />
			</Path>
			<ContinentId>1220</ContinentId>
			<Name>Sleeper's Barrow (out)</Name>
		</OffMeshConnection>
		<OffMeshConnection>
			<Path>
				<Vector3 X="2556.617" Y="7485.923" Z="20.51338" />
				<Vector3 X="2569.469" Y="7486.891" Z="28.06614" />
			</Path>
			<ContinentId>1220</ContinentId>
			<Name>Heathrow house (out)</Name>
		</OffMeshConnection>
		<OffMeshConnection>
			<Path>
				<Vector3 X="2567.785" Y="7486.483" Z="28.04049" />
				<Vector3 X="2557.221" Y="7486.397" Z="20.51031" />
			</Path>
			<ContinentId>1220</ContinentId>
			<Name>Heathrow house (in)</Name>
		</OffMeshConnection>
	</OffMeshConnections>
</EasyQuestProfile>