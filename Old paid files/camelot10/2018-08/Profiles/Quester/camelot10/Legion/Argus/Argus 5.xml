<?xml version="1.0" encoding="utf-16"?>
<EasyQuestProfile xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <QuestsSorted>
    <QuestsSorted Action="WriteLog" NameClass="--- Start Argus. Side quests ---" />
    <QuestsSorted Action="RunCode" NameClass="ArgusHelper.StartMoveFix();" />
    <QuestsSorted Action="PickUp" NameClass="SeatoftheTriumvirateTheCrestofKnowledge" />
    <QuestsSorted Action="TurnIn" NameClass="SeatoftheTriumvirateTheCrestofKnowledge" />
    <QuestsSorted Action="PulseAllInOne" NameClass="AnOfferingofShadow" />
    <QuestsSorted Action="PulseAllInOne" NameClass="TheNetherlightCrucible" />
    <QuestsSorted Action="If" NameClass="/* Nath'raxas Hold: Rescue Mission */ Questing.Complete(48443)" />
    <QuestsSorted Action="PickUp" NameClass="TheRuinsofOronaar" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="TurnIn" NameClass="TheRuinsofOronaar" />
    <QuestsSorted Action="PickUp" NameClass="RelicsoftheAncientEredar" />
    <QuestsSorted Action="PickUp" NameClass="BeneathOronaar" />
    <QuestsSorted Action="TurnIn" NameClass="RelicsoftheAncientEredar" />
    <QuestsSorted Action="TurnIn" NameClass="BeneathOronaar" />
    <QuestsSorted Action="PulseAllInOne" NameClass="TheSpeakerListens" />
    <QuestsSorted Action="PulseAllInOne" NameClass="VisionsofFear" />
    <QuestsSorted Action="WriteLog" NameClass="--- Complete Argus. Side quests ---" />
    <QuestsSorted Action="WriteLog" NameClass="--- Start Argus. Fel Heart of Argus ---" />
    <QuestsSorted Action="WriteLog" NameClass="--- Complete Argus. Fel Heart of Argus ---" />
    <QuestsSorted Action="RunCode" NameClass="ArgusHelper.StopMoveFix();" />
    <QuestsSorted Action="LoadProfile" NameClass="camelot10\Legion\Argus\Argus 6.xml" />
  </QuestsSorted>
  <NpcQuest>
    <NPCQuest Id="128722" Name="Prophet Velen" GameObject="false">
      <PickUpQuests>
        <int>47654</int>
        <int>48560</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>47654</int>
      </TurnInQuests>
      <Position X="4671.06" Y="9848.654" Z="56.06649" />
    </NPCQuest>
    <NPCQuest Id="126389" Name="Artificer Shela'na" GameObject="false">
      <PickUpQuests>
        <int>49224</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>48560</int>
        <int>49224</int>
      </TurnInQuests>
      <Position X="4629.761" Y="9835.264" Z="40.24695" />
    </NPCQuest>
    <NPCQuest Id="121230" Name="Alleria Windrunner" GameObject="false">
      <PickUpQuests>
        <int>48445</int>
        <int>48446</int>
        <int>48654</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>48445</int>
      </TurnInQuests>
      <Position X="4729.309" Y="9875.313" Z="64.29187" />
    </NPCQuest>
    <NPCQuest Id="124312" Name="High Exarch Turalyon" GameObject="false">
      <PickUpQuests>
        <int>48273</int>
      </PickUpQuests>
      <TurnInQuests />
      <Position X="4730.688" Y="9874.259" Z="64.29141" />
    </NPCQuest>
    <NPCQuest Id="124595" Name="Magni Bronzebeard" GameObject="false">
      <PickUpQuests>
        <int>48272</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>48273</int>
      </TurnInQuests>
      <Position X="1027.58" Y="1656.467" Z="525.2881" />
    </NPCQuest>
    <NPCQuest Id="127037" Name="Nabiru" GameObject="false">
      <PickUpQuests />
      <TurnInQuests>
        <int>48654</int>
      </TurnInQuests>
      <Position X="5299.468" Y="10112.5" Z="-143.1465" />
    </NPCQuest>
    <NPCQuest Id="124595" Name="Magni Bronzebeard" GameObject="false">
      <PickUpQuests />
      <TurnInQuests>
        <int>48272</int>
      </TurnInQuests>
      <Position X="1027.58" Y="1656.467" Z="525.2881" />
    </NPCQuest>
    <NPCQuest Id="121260" Name="Lightforged Courier" GameObject="false">
      <PickUpQuests />
      <TurnInQuests />
      <Position X="918.4149" Y="2263.311" Z="388.5926" />
    </NPCQuest>
  </NpcQuest>
  <Npc />
  <Blackspots>
    <Blackspot X="-2788.08081" Y="8975.037" Z="-196.271332" Radius="30" />
    <Blackspot X="-2769.24951" Y="9005.811" Z="-196.155182" Radius="30" />
    <Blackspot X="-2806.33447" Y="9012.023" Z="-196.361954" Radius="30" />
    <Blackspot X="-2807.761" Y="9040.58" Z="-196.070419" Radius="30" />
    <Blackspot X="-2780.97363" Y="9061.419" Z="-196.48027" Radius="30" />
    <Blackspot X="-2819.355" Y="9067.02" Z="-196.10524" Radius="30" />
    <Blackspot X="-2832.175" Y="9093.759" Z="-196.230637" Radius="30" />
    <Blackspot X="-2862.91821" Y="9106.89551" Z="-196.386719" Radius="30" />
    <Blackspot X="-2884.0105" Y="9135.49" Z="-196.393967" Radius="30" />
    <Blackspot X="-2907.369" Y="9162.197" Z="-196.255829" Radius="30" />
    <Blackspot X="-2925.33618" Y="9190.155" Z="-196.484665" Radius="30" />
    <Blackspot X="-2945.932" Y="9221.946" Z="-196.4174" Radius="30" />
    <Blackspot X="-2965.513" Y="9247.639" Z="-195.556519" Radius="30" />
    <Blackspot X="-2948.86816" Y="9286.582" Z="-196.332214" Radius="30" />
    <Blackspot X="-2905.87256" Y="9300.123" Z="-196.31868" Radius="30" />
    <Blackspot X="-2864.899" Y="9294.334" Z="-196.496628" Radius="30" />
    <Blackspot X="-2826.677" Y="9285.918" Z="-196.345383" Radius="30" />
    <Blackspot X="-2780.422" Y="9283.021" Z="-196.108459" Radius="30" />
    <Blackspot X="-2997.903" Y="9273.567" Z="-195.423767" Radius="30" />
    <Blackspot X="-3037.94751" Y="9276.611" Z="-196.415787" Radius="30" />
    <Blackspot X="-3061.92456" Y="9314.217" Z="-196.4282" Radius="30" />
    <Blackspot X="-2842.17139" Y="8910.673" Z="-201.063675" Radius="15" />
    <Blackspot X="4945.98926" Y="9944.617" Z="-67.26239" Radius="11.1" />
    <Blackspot X="4927.532" Y="9937.668" Z="-67.06462" Radius="11.1" />
    <Blackspot X="4909.71" Y="9927.649" Z="-66.95079" Radius="11.1" />
    <Blackspot X="4894.69873" Y="9921.554" Z="-67.15389" Radius="11.1" />
    <Blackspot X="4881.03271" Y="9914.169" Z="-67.40899" Radius="11.1" />
    <Blackspot X="4867.88867" Y="9914.548" Z="-66.73266" Radius="11.1" />
    <Blackspot X="4853.39941" Y="9913.6875" Z="-66.73846" Radius="11.1" />
    <Blackspot X="4838.175" Y="9908.171" Z="-66.7375" Radius="11.1" />
    <Blackspot X="4829.92334" Y="9895.461" Z="-66.72032" Radius="11.1" />
    <Blackspot X="4823.64551" Y="9882.087" Z="-66.73895" Radius="11.1" />
    <Blackspot X="4812.586" Y="9867.634" Z="-66.73895" Radius="11.1" />
    <Blackspot X="4805.486" Y="9852.848" Z="-66.35945" Radius="11.1" />
    <Blackspot X="4797.435" Y="9838.571" Z="-64.92015" Radius="11.1" />
    <Blackspot X="4791.157" Y="9824.554" Z="-66.31549" Radius="11.1" />
    <Blackspot X="4791.17" Y="9806.362" Z="-66.16877" Radius="11.1" />
    <Blackspot X="4787.9834" Y="9789.441" Z="-66.64648" Radius="11.1" />
    <Blackspot X="4787.841" Y="9777.865" Z="-66.6461258" Radius="11.1" />
    <Blackspot X="4787.26367" Y="9766.073" Z="-67.00148" Radius="11.1" />
    <Blackspot X="4790.591" Y="9754.447" Z="-66.66263" Radius="11.1" />
    <Blackspot X="4794.683" Y="9742.642" Z="-66.35339" Radius="11.1" />
    <Blackspot X="4799.6875" Y="9734.972" Z="-66.13622" Radius="11.1" />
    <Blackspot X="4825.59668" Y="9724.738" Z="-65.72864" Radius="11.1" />
    <Blackspot X="4838.91" Y="9711.118" Z="-65.43536" Radius="11.1" />
    <Blackspot X="4853.58252" Y="9704.868" Z="-64.96397" Radius="11.1" />
    <Blackspot X="4865.769" Y="9696.786" Z="-64.18439" Radius="11.1" />
    <Blackspot X="4874.793" Y="9693.021" Z="-63.8890076" Radius="11.1" />
    <Blackspot X="4887.416" Y="9694.459" Z="-64.32562" Radius="11.1" />
    <Blackspot X="4904.76367" Y="9691.219" Z="-64.26852" Radius="11.1" />
    <Blackspot X="4918.837" Y="9688.648" Z="-64.2271652" Radius="11.1" />
    <Blackspot X="4931.93359" Y="9687.669" Z="-64.3667" Radius="11.1" />
    <Blackspot X="4918.358" Y="9788.849" Z="-66.1484" Radius="11.3" />
    <Blackspot X="4946.772" Y="9761.35449" Z="-65.34132" Radius="11.3" />
    <Blackspot X="1791.60681" Y="1483.63989" Z="398.7001" Radius="12" />
    <Blackspot X="6351.82861" Y="10239.6367" Z="15.7937584" Radius="19" />
    <Blackspot X="-4081.85278" Y="-4823.238" Z="109.262733" Radius="11" />
    <Blackspot X="-4079.24243" Y="-4799.754" Z="100.59874" Radius="11" />
    <Blackspot X="5133.615" Y="10225.2842" Z="-135.47377" Radius="5" />
    <Blackspot X="5137.21875" Y="10221.0146" Z="-135.597824" Radius="5" />
    <Blackspot X="5140.05371" Y="10222.4375" Z="-133.570953" Radius="5" />
    <Blackspot X="5144.525" Y="10221.6865" Z="-132.920029" Radius="5" />
    <Blackspot X="5150.4707" Y="10216.1807" Z="-136.222046" Radius="5" />
    <Blackspot X="5168.525" Y="10316.9971" Z="-129.565475" Radius="26" />
    <Blackspot X="5145.56543" Y="10294.666" Z="-128.515945" Radius="26" />
    <Blackspot X="5123.19043" Y="10276.0088" Z="-125.995255" Radius="26" />
    <Blackspot X="5115.97168" Y="10256.0645" Z="-125.7068" Radius="26" />
    <Blackspot X="5117.93" Y="10233.8574" Z="-135.139053" Radius="26" />
    <Blackspot X="6328.15332" Y="9923.818" Z="-38.5931435" Radius="4" />
    <Blackspot X="6319.84863" Y="9933.935" Z="-31.20227" Radius="4" />
  </Blackspots>
  <BlackGuids />
  <EasyQuests>
    <EasyQuest>
      <Name>Seat of the Triumvirate: The Crest of Knowledge</Name>
      <QuestId>
        <int>47654</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public class SeatoftheTriumvirateTheCrestofKnowledge : QuestClass
{
	bool _joinedQueue = false;
	public SeatoftheTriumvirateTheCrestofKnowledge()
	{
		Name = "Seat of the Triumvirate: The Crest of Knowledge";
		QuestId.Add(47654);
		Step.AddRange(new[] { 1, 1 });
	}
	static string lua = @"
AcceptProposal()
local needDungeonID = 1535
local queuedList = GetLFGQueuedList(LE_LFG_CATEGORY_LFD)
for queuedDungeonID, isQueued in pairs(queuedList) do
	if (queuedDungeonID &gt; 0 and needDungeonID &gt; 0 and needDungeonID ~= queuedDungeonID) then
		LeaveLFG(LE_LFG_CATEGORY_LFD)
		ClearAllLFGDungeons(LE_LFG_CATEGORY_LFD)
		return false
	end
	return true
end
--LeaveLFG(LE_LFG_CATEGORY_LFD)
ClearAllLFGDungeons(LE_LFG_CATEGORY_LFD)
local isLeader, isTank, isHealer, isDPS = GetLFGRoles()
if (not isTank and not isHealer and not isDPS) then
	SetLFGRoles(false, false, false, true) --dps
end
SetLFGDungeon(LE_LFG_CATEGORY_LFD, needDungeonID)
JoinLFG(LE_LFG_CATEGORY_LFD)
return true
";

	public override bool IsComplete()
	{
		if (Questing.ObjectiveComplete(this, 1) &amp;&amp; Questing.ObjectiveComplete(this, 2))
		{
			return true;
		}
		else if (!_joinedQueue)
		{
			Lua.LuaDoString&lt;bool&gt;(lua);
			Logging.Write("ATTENTION! You need complete dungeon 'Seat of the Triumvirate' on heroic mode. You need to loot last boss, not possible in mythic+.");
			_joinedQueue = true;
		}
		return false;
	}
	public override bool PickUp()
	{
		if (!ArgusHelper.InVendicarMacAree)
		{
			ArgusHelper.ToVendicarMacAree();
			return true;
		}
		return base.PickUp();
	}
	public override bool TurnIn()
	{
		if (!ArgusHelper.InVendicarMacAree)
		{
			ArgusHelper.ToVendicarMacAree();
			return true;
		}
		if (!Questing.ObjectiveComplete(this, 3))
		{
			var p = new Vector3(4659.397, 9845.856, 60.08833, "None");
			Questing.Gather(p, 273716, 6.9f);
			return true;
		}
		var result = base.TurnIn();
		Questing.CancelCutscene();
		return result;
	}
}</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>An Offering of Shadow</Name>
      <QuestId>
        <int>48560</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public class AnOfferingofShadow : QuestUseItemOnClass
{
	public AnOfferingofShadow()
	{
		Name = "An Offering of Shadow";
		QuestId.Add(48560);
		Step.AddRange(new[] { 1 });
		ItemId = 152594;
		HotSpots = new List&lt;Vector3&gt;()
		{
			new Vector3(4630.945, 9838.966, 40.24677, "None"),
		};
		EntryIdTarget = new List&lt;int&gt;()
		{
			126701,
		};
	}
	public override bool Pulse()
	{
		if (!ArgusHelper.InVendicarMacAree)
		{
			ArgusHelper.ToVendicarMacAree();
			return true;
		}
		return base.Pulse();
	}
	public override bool PickUp()
	{
		if (!ArgusHelper.InVendicarMacAree)
		{
			ArgusHelper.ToVendicarMacAree();
			return true;
		}
		return base.PickUp();
	}
	public override bool TurnIn()
	{
		if (!ArgusHelper.InVendicarMacAree)
		{
			ArgusHelper.ToVendicarMacAree();
			return true;
		}
		return base.TurnIn();
	}
}</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Netherlight Crucible</Name>
      <QuestId>
        <int>49224</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public class TheNetherlightCrucible : QuestClass
{
	public TheNetherlightCrucible()
	{
		Name = "The Netherlight Crucible";
		QuestId.Add(49224);
		Step.AddRange(new[] { 1 });
	}
	public override bool Pulse()
	{
		if (!ArgusHelper.InVendicarMacAree)
		{
			ArgusHelper.ToVendicarMacAree();
			return true;
		}
		if (Lua.LuaDoString&lt;bool&gt;("return C_ArtifactRelicForgeUI.IsAtForge()"))
		{
			Questing.Wait(2);
			Lua.LuaDoString("C_ArtifactRelicForgeUI.AddRelicTalent(1, 1);");
			Questing.Wait(2);
			return true;
		}
		//var p = new Vector3(4629.72, 9838.976, 40.24641, "None");
		var p = new Vector3(4632.45, 9839.475, 40.24547, "None");
		if (GoToTask.ToPosition(p))
		{
			Questing.ClickMove(p);
			Questing.Wait(1);
			//273272 276296 273273
			Questing.Gather(p, 273273, 4); //276296
			Questing.Gather(p, 273272, 4);
			Questing.Gather(p, 276296, 4); //also
		}
		return true;
	}
	public override bool PickUp()
	{
		if (!ArgusHelper.InVendicarMacAree)
		{
			ArgusHelper.ToVendicarMacAree();
			return true;
		}
		return base.PickUp();
	}
	public override bool TurnIn()
	{
		if (!ArgusHelper.InVendicarMacAree)
		{
			ArgusHelper.ToVendicarMacAree();
			return true;
		}
		return base.TurnIn();
	}
	public override bool IsComplete()
	{
		return Questing.ObjectiveComplete(this, 1);
	}
	public override bool IsCompleted()
	{
		return Questing.Achievement.Done(12072) || base.IsCompleted();
	}
}</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Ruins of Oronaar</Name>
      <QuestId>
        <int>48445</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public class TheRuinsofOronaar : QuestClass
{
	bool _messageShowed = false;
	public TheRuinsofOronaar()
	{
		Name = "The Ruins of Oronaar";
		QuestId.Add(48445);
		Step.AddRange(new[] { 1 });
		RequiredQuest = 47654;
	}
	public override bool IsComplete()
	{
		if (Questing.ObjectiveComplete(this, 1))
		{
			return true;
		}
		else if (!_messageShowed)
		{
			Logging.Write("ATTENTION! You need complete 'Inches from Madness.' in class hall table");
			_messageShowed = true;
		}
		return false;
	}
	public override bool PickUp()
	{
		if (!ArgusHelper.InVendicarMacAree)
		{
			ArgusHelper.ToVendicarMacAree();
			return true;
		}
		return base.PickUp();
	}
	public override bool TurnIn()
	{
		if (!ArgusHelper.InVendicarMacAree)
		{
			ArgusHelper.ToVendicarMacAree();
			return true;
		}
		return base.TurnIn();
	}
}</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Relics of the Ancient Eredar</Name>
      <QuestId>
        <int>48446</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public class RelicsoftheAncientEredar : QuestClass
{
	bool _messageShowed = false;
	public RelicsoftheAncientEredar()
	{
		Name = "Relics of the Ancient Eredar";
		QuestId.Add(48446);
		Step.AddRange(new[] { 1 });
		RequiredQuest = 48445; /* The Ruins of Oronaar */
	}
	public override bool IsComplete()
	{
		if (Questing.ObjectiveComplete(this, 1))
		{
			return true;
		}
		else if (!_messageShowed)
		{
			Logging.Write("ATTENTION! You need to raise 6 Champions to 925 Item Level.");
			_messageShowed = true;
		}
		return false;
	}
	public override bool PickUp()
	{
		if (!ArgusHelper.InVendicarMacAree)
		{
			ArgusHelper.ToVendicarMacAree();
			return true;
		}
		return base.PickUp();
	}
	public override bool TurnIn()
	{
		if (!ArgusHelper.InVendicarMacAree)
		{
			ArgusHelper.ToVendicarMacAree();
			return true;
		}
		return base.TurnIn();
	}
}</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Beneath Oronaar</Name>
      <QuestId>
        <int>48654</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public class BeneathOronaar : QuestClass
{
	public BeneathOronaar()
	{
		Name = "Beneath Oronaar";
		QuestId.Add(48654);
		Step.AddRange(new[] { 0 });
		RequiredQuest = 48445; /* The Ruins of Oronaar */
	}
	public override bool PickUp()
	{
		if (!ArgusHelper.InVendicarMacAree)
		{
			ArgusHelper.ToVendicarMacAree();
			return true;
		}
		return base.PickUp();
	}
	public override bool TurnIn()
	{
		if (!ArgusHelper.InMacAreeOpen)
		{
			ArgusHelper.ToMacAreeOpen();
			return true;
		}
		return base.TurnIn();
	}
}</Code>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Speaker Listens</Name>
      <QuestId>
        <int>48273</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public class TheSpeakerListens : QuestClass
{
	public TheSpeakerListens()
	{
		Name = "The Speaker Listens";
		QuestId.Add(48273);
		Step.AddRange(new[] { 0 });
		RequiredQuest = 47220; /* A Beacon in the Dark */
	}
	public override bool PickUp()
	{
		if (!ArgusHelper.InVendicarMacAree)
		{
			ArgusHelper.ToVendicarMacAree();
			return true;
		}
		return base.PickUp();
	}
	public override bool TurnIn()
	{
		if (!ArgusHelper.InKrokuunOpen)
		{
			ArgusHelper.ToKrokuunOpen();
			return true;
		}
		return base.TurnIn();
	}
}</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Visions of Fear</Name>
      <QuestId>
        <int>48272</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public class VisionsofFear : QuestClass
{
	public VisionsofFear()
	{
		Name = "Visions of Fear";
		QuestId.Add(48272);
		Step.AddRange(new[] { 1 });
		RequiredQuest = 48273; /* The Speaker Listens */
	}
	public override bool Pulse()
	{
		if (!ArgusHelper.InKrokuunOpen)
		{
			ArgusHelper.ToKrokuunOpen();
			return true;
		}
		var p = new Vector3(1029.653, 1652.655, 525.4163, "None");
		Questing.Gather(p, 268767, 5f);
		Questing.Wait(1);
		Questing.Gossip(1);
		Questing.CancelCutscene();
		return true;
	}
	public override bool IsComplete()
	{
		return Questing.ObjectiveComplete(this, 1);
	}
	public override bool PickUp()
	{
		if (!ArgusHelper.InKrokuunOpen)
		{
			ArgusHelper.ToKrokuunOpen();
			return true;
		}
		return base.PickUp();
	}
	public override bool TurnIn()
	{
		if (!ArgusHelper.InKrokuunOpen)
		{
			ArgusHelper.ToKrokuunOpen();
			return true;
		}
		return base.TurnIn();
	}
}</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
  </EasyQuests>
  <Script>camelot10\Libs\Questing.cs
camelot10\Libs\LegionQuests.cs
camelot10\Libs\ArgusHelper.cs</Script>
  <OffMeshConnections>
    <OffMeshConnection>
      <Path>
        <Vector3 X="4895.83" Y="9823.021" Z="-89.67779" />
        <Vector3 X="4888.419" Y="9823.12" Z="-89.94469" />
      </Path>
      <ContinentId>1669</ContinentId>
      <Name>Triumvirate's End Vault (in)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="4888.419" Y="9823.12" Z="-89.94469" />
        <Vector3 X="4894.613" Y="9822.946" Z="-89.68123" />
      </Path>
      <ContinentId>1669</ContinentId>
      <Name>Triumvirate's End Vault (out)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="-4067.276" Y="-4693.387" Z="80.46112" />
        <Vector3 X="-4067.27" Y="-4698.91" Z="80.46112" />
      </Path>
      <ContinentId>1779</ContinentId>
      <Name>Invasion Point: Aurinor (from boss)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="-4067.27" Y="-4698.91" Z="80.46112" />
        <Vector3 X="-4067.231" Y="-4692.825" Z="80.46112" />
      </Path>
      <ContinentId>1779</ContinentId>
      <Name>Invasion Point: Aurinor (to boss)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="-4051.284" Y="-4885.425" Z="112.2494" />
        <Vector3 X="-4049.467" Y="-4889.424" Z="112.4052" />
      </Path>
      <ContinentId>1779</ContinentId>
      <Name>Invasion Point: Aurinor (from middle)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="-4049.467" Y="-4889.424" Z="112.4052" />
        <Vector3 X="-4052.193" Y="-4884.754" Z="112.3091" />
      </Path>
      <ContinentId>1779</ContinentId>
      <Name>Invasion Point: Aurinor (to middle)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="-4118.865" Y="-4771.708" Z="97.70134" />
        <Vector3 X="-4121.873" Y="-4777.444" Z="99.20774" />
      </Path>
      <ContinentId>1779</ContinentId>
      <Name>Invasion Point: Aurinor (from middle2)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="-4121.873" Y="-4777.444" Z="99.20774" />
        <Vector3 X="-4118.452" Y="-4771.118" Z="97.52113" />
      </Path>
      <ContinentId>1779</ContinentId>
      <Name>Invasion Point: Aurinor (to middle2)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="5469.89" Y="10351.21" Z="-100.2749" />
        <Vector3 X="5471.54" Y="10349.34" Z="-100.4125" />
      </Path>
      <ContinentId>1669</ContinentId>
      <Name>Mac'Aree. Umbra Hollows (in)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="5471.54" Y="10349.34" Z="-100.4125" />
        <Vector3 X="5468.441" Y="10352.86" Z="-100.0866" />
      </Path>
      <ContinentId>1669</ContinentId>
      <Name>Mac'Aree. Umbra Hollows (out)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="5482.338" Y="10369.11" Z="-93.68656" />
        <Vector3 X="5478.053" Y="10343.98" Z="-100.535" />
      </Path>
      <ContinentId>1669</ContinentId>
      <Name>Mac'Aree. Umbra Hollows (in) 2</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="5478.053" Y="10343.98" Z="-100.535" />
        <Vector3 X="5479.139" Y="10359.97" Z="-97.80774" />
        <Vector3 X="5486.612" Y="10366.37" Z="-92.72459" />
      </Path>
      <ContinentId>1669</ContinentId>
      <Name>Mac'Aree. Umbra Hollows (out) 2</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="5637.713" Y="10640.47" Z="4.971371" />
        <Vector3 X="5626.187" Y="10638.24" Z="5.232285" />
      </Path>
      <ContinentId>1669</ContinentId>
      <Name>Umbral Locus (in)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="5626.187" Y="10638.24" Z="5.232285" />
        <Vector3 X="5636.477" Y="10638.49" Z="4.958838" />
      </Path>
      <ContinentId>1669</ContinentId>
      <Name>Umbral Locus (out)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="6329.146" Y="9921.397" Z="-41.16074" />
        <Vector3 X="6324.233" Y="9918.984" Z="-43.42511" />
      </Path>
      <ContinentId>1669</ContinentId>
      <Name>Mac'Aree. Kil'jaeden's Terrace. Stairs (in)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="6327.307" Y="9914.299" Z="-43.46663" />
        <Vector3 X="6335.385" Y="9913.857" Z="-47.46668" />
      </Path>
      <ContinentId>1669</ContinentId>
      <Name>Mac'Aree. Kil'jaeden's Terrace. Stairs (out)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="1004.124" Y="1659.621" Z="525.3169" />
        <Vector3 X="1018.699" Y="1657.296" Z="525.1101" />
      </Path>
      <ContinentId>1669</ContinentId>
      <Name>Krokuun Hovel Cave (in)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="1018.699" Y="1657.296" Z="525.1101" />
        <Vector3 X="1003.022" Y="1661.203" Z="525.3032" />
      </Path>
      <ContinentId>1669</ContinentId>
      <Name>Krokuun Hovel Cave (out)</Name>
    </OffMeshConnection>
  </OffMeshConnections>
</EasyQuestProfile>