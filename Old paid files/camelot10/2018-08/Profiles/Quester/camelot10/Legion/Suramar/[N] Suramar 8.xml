<?xml version="1.0" encoding="utf-16"?>
<EasyQuestProfile xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <QuestsSorted>
    <QuestsSorted Action="WriteLog" NameClass="--- Start Suramar. Good Suramaritan: Blood and Wine ---" />
    <QuestsSorted Action="PickUp" NameClass="SeedofHope" />
    <QuestsSorted Action="None" NameClass="SeedofHope" />
    <QuestsSorted Action="None" NameClass="GrowingStrong" />
    <QuestsSorted Action="PulseAllInOne" NameClass="MothstoaFlame" />
    <QuestsSorted Action="Pulse" NameClass="MakeanEntranceThirst" />
    <QuestsSorted Action="PickUp" NameClass="MakeanEntrance" />
    <QuestsSorted Action="Pulse" NameClass="MakeanEntrance" />
    <QuestsSorted Action="RunCode" NameClass="SuramarQuests.Masquerade.Start();" />
    <QuestsSorted Action="PulseAllInOne" NameClass="SurvivaloftheFittest" />
    <QuestsSorted Action="PulseAllInOne" NameClass="ApexPredator" />
    <QuestsSorted Action="PulseAllInOne" NameClass="ShalassicPark" />
    <QuestsSorted Action="PickUp" NameClass="BadApples" />
    <QuestsSorted Action="PickUp" NameClass="BlastofSpiceFish" />
    <QuestsSorted Action="Pulse" NameClass="MakeanEntrance1" />
    <QuestsSorted Action="Pulse" NameClass="MakeanEntrance2" />
    <QuestsSorted Action="Pulse" NameClass="MakeanEntrance3" />
    <QuestsSorted Action="TurnIn" NameClass="MakeanEntrance3" />
    <QuestsSorted Action="PulseAllInOne" NameClass="TheFruitofOurEfforts" />
    <QuestsSorted Action="PulseAllInOne" NameClass="HowItsMadeArcwine" />
    <QuestsSorted Action="PulseAllInOne" NameClass="IntenseConcentration" />
    <QuestsSorted Action="RunCode" NameClass="Questing.ResetSettings();" />
    <QuestsSorted Action="PulseAllInOne" NameClass="TheOldFashionedWay" />
    <QuestsSorted Action="PickUp" NameClass="BalancetoSpare" />
    <QuestsSorted Action="PickUp" NameClass="SilkwingSabotage" />
    <QuestsSorted Action="Pulse" NameClass="BalancetoSpare" />
    <QuestsSorted Action="Pulse" NameClass="SilkwingSabotage" />
    <QuestsSorted Action="RunCode" NameClass="SuramarQuests.Subzone.VineyardHouse1.StartMoveFix();" />
    <QuestsSorted Action="TurnIn" NameClass="SilkwingSabotage" />
    <QuestsSorted Action="TurnIn" NameClass="BalancetoSpare" />
    <QuestsSorted Action="PulseAllInOne" NameClass="Reversal" />
    <QuestsSorted Action="PickUp" NameClass="VengeanceforMargaux" />
    <QuestsSorted Action="Pulse" NameClass="VengeanceforMargaux" />
    <QuestsSorted Action="Pulse" NameClass="VengeanceforMargaux2" />
    <QuestsSorted Action="Pulse" NameClass="VengeanceforMargauxThirst" />
    <QuestsSorted Action="TurnIn" NameClass="VengeanceforMargaux" />
    <QuestsSorted Action="RunCode" NameClass="SuramarQuests.Subzone.VineyardHouse1.StopMoveFix();" />
    <QuestsSorted Action="Pulse" NameClass="SeektheUnsavoryThirst" />
    <QuestsSorted Action="PickUp" NameClass="SeektheUnsavory" />
    <QuestsSorted Action="Pulse" NameClass="BlastofSpiceFish" />
    <QuestsSorted Action="PulseAllInOne" NameClass="BadApples" />
    <QuestsSorted Action="TurnIn" NameClass="BlastofSpiceFish" />
    <QuestsSorted Action="PulseAllInOne" NameClass="FruitoftheDoom" />
    <QuestsSorted Action="TurnIn" NameClass="SeektheUnsavory" />
    <QuestsSorted Action="PulseAllInOne" NameClass="HiredHelp" />
    <QuestsSorted Action="PulseAllInOne" NameClass="IfWordsDontWork" />
    <QuestsSorted Action="PickUp" NameClass="ABigScore" />
    <QuestsSorted Action="PickUp" NameClass="AssetSecurity" />
    <QuestsSorted Action="Pulse" NameClass="AssetSecurity" />
    <QuestsSorted Action="PulseAllInOne" NameClass="ABigScore" />
    <QuestsSorted Action="TurnIn" NameClass="AssetSecurity" />
    <QuestsSorted Action="RunCode" NameClass="SuramarQuests.Subzone.ShimmershadeGardenHouse2.StartMoveFix();" />
    <QuestsSorted Action="PulseAllInOne" NameClass="MakeYourMark" />
    <QuestsSorted Action="RunCode" NameClass="SuramarQuests.Subzone.ShimmershadeGardenHouse2.StopMoveFix();" />
    <QuestsSorted Action="PickUp" NameClass="AndTheyWillTremble" />
    <QuestsSorted Action="Pulse" NameClass="AndTheyWillTremble" />
    <QuestsSorted Action="Pulse" NameClass="AndTheyWillTrembleThirst" />
    <QuestsSorted Action="TurnIn" NameClass="AndTheyWillTremble" />
    <QuestsSorted Action="RunCode" NameClass="SuramarQuests.Masquerade.Stop();" />
    <QuestsSorted Action="WriteLog" NameClass="--- Complete Suramar. Good Suramaritan: Blood and Wine ---" />
    <QuestsSorted Action="LoadProfile" NameClass="camelot10\Legion\Suramar\[N] Suramar 9.xml" />
  </QuestsSorted>
  <NpcQuest>
    <NPCQuest Id="107126" Name="Valewalker Farodin" GameObject="false">
      <PickUpQuests>
        <int>44561</int>
        <int>42828</int>
        <int>44562</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>44561</int>
        <int>42828</int>
      </TurnInQuests>
      <Position X="1715.662" Y="4625.09" Z="123.9462" />
    </NPCQuest>
    <NPCQuest Id="97140" Name="First Arcanist Thalyssra" GameObject="false">
      <PickUpQuests>
        <int>42829</int>
        <int>42839</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>44084</int>
        <int>44052</int>
      </TurnInQuests>
      <Position X="1720.384" Y="4610.655" Z="123.8036" />
    </NPCQuest>
    <NPCQuest Id="110987" Name="Nighteyes" GameObject="false">
      <PickUpQuests>
        <int>41216</int>
      </PickUpQuests>
      <TurnInQuests />
      <Position X="1350.875" Y="3843.792" Z="13.27595" />
    </NPCQuest>
    <NPCQuest Id="111019" Name="Nighteyes" GameObject="false">
      <PickUpQuests>
        <int>41231</int>
        <int>43582</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>41216</int>
        <int>41231</int>
      </TurnInQuests>
      <Position X="1513.069" Y="3994.252" Z="-12.2995" />
    </NPCQuest>
    <NPCQuest Id="110987" Name="Nighteyes" GameObject="false">
      <PickUpQuests />
      <TurnInQuests>
        <int>43582</int>
      </TurnInQuests>
      <Position X="1350.875" Y="3843.792" Z="13.27595" />
    </NPCQuest>
    <NPCQuest Id="103131" Name="Keelay Moongrow" GameObject="false">
      <PickUpQuests>
        <int>41107</int>
        <int>41256</int>
        <int>41258</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>41107</int>
        <int>41256</int>
        <int>41258</int>
      </TurnInQuests>
      <Position X="1356.974" Y="4035.571" Z="113.246" />
    </NPCQuest>
    <NPCQuest Id="108872" Name="Margaux" GameObject="false">
      <PickUpQuests>
        <int>42832</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>42829</int>
      </TurnInQuests>
      <Position X="1514.659" Y="3629.984" Z="122.8405" />
    </NPCQuest>
    <NPCQuest Id="108872" Name="Margaux" GameObject="false">
      <PickUpQuests>
        <int>42833</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>42832</int>
      </TurnInQuests>
      <Position X="1523.954" Y="3549.183" Z="136.5532" />
    </NPCQuest>
    <NPCQuest Id="108870" Name="Sylverin" GameObject="false">
      <PickUpQuests>
        <int>42834</int>
        <int>42835</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>42833</int>
        <int>42834</int>
      </TurnInQuests>
      <Position X="1477.832" Y="3425.004" Z="132.8178" />
    </NPCQuest>
    <NPCQuest Id="108872" Name="Margaux" GameObject="false">
      <PickUpQuests>
        <int>42837</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>42835</int>
      </TurnInQuests>
      <Position X="1352" Y="3288.838" Z="132.8778" />
    </NPCQuest>
    <NPCQuest Id="112653" Name="Sylverin" GameObject="false">
      <PickUpQuests>
        <int>42836</int>
      </PickUpQuests>
      <TurnInQuests />
      <Position X="1370.424" Y="3254.728" Z="132.9497" />
    </NPCQuest>
    <NPCQuest Id="108870" Name="Sylverin" GameObject="false">
      <PickUpQuests>
        <int>42838</int>
        <int>44084</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>42837</int>
        <int>42836</int>
        <int>42838</int>
      </TurnInQuests>
      <Position X="1402.032" Y="3253.407" Z="134.7887" />
    </NPCQuest>
    <NPCQuest Id="107598" Name="Vanthir" GameObject="false">
      <PickUpQuests>
        <int>43969</int>
        <int>44052</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>42839</int>
        <int>42792</int>
      </TurnInQuests>
      <Position X="358.6021" Y="3975.843" Z="1.388276" />
    </NPCQuest>
    <NPCQuest Id="107253" Name="Arluin" GameObject="false">
      <PickUpQuests>
        <int>42840</int>
        <int>42841</int>
        <int>43352</int>
        <int>42792</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>43969</int>
        <int>42840</int>
        <int>42841</int>
        <int>43352</int>
      </TurnInQuests>
      <Position X="726.5886" Y="3941.849" Z="5.685789" />
    </NPCQuest>
  </NpcQuest>
  <Npc />
  <Blackspots>
    <Blackspot X="2548.57739" Y="4688.786" Z="159.075226" Radius="10" />
    <Blackspot X="933.7734" Y="2356.29761" Z="-87.59098" Radius="50" />
    <Blackspot X="1471.63782" Y="3450.56787" Z="133.229813" Radius="4" />
  </Blackspots>
  <BlackGuids />
  <EasyQuests>
    <EasyQuest>
      <Name>Seed of Hope</Name>
      <QuestId>
        <int>44561</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return SuramarQuests.IsHonored;</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Moths to a Flame</Name>
      <QuestId>
        <int>42828</int>
      </QuestId>
      <QuestType>InteractWithNpc</QuestType>
      <QuestClass xsi:type="InteractWithNpcEasyQuestClass">
        <HotSpots>
          <Vector3 X="1723.746" Y="4612.75" Z="123.7928" />
        </HotSpots>
        <GossipOptionNpcInteractWith>1</GossipOptionNpcInteractWith>
        <Macro />
        <IgnoreIfDead>false</IgnoreIfDead>
        <EntryIdTarget>
          <int>109158</int>
        </EntryIdTarget>
        <Range>4.5</Range>
      </QuestClass>
      <ObjectiveCount1>4</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Growing Strong</Name>
      <QuestId>
        <int>44562</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots />
        <EntryTarget />
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>44561</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Make an Entrance (Thirst)</Name>
      <QuestId>
        <int>42829</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return !SuramarQuests.Thirst.Thalyssra(this);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Make an Entrance</Name>
      <QuestId>
        <int>42829</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		SuramarQuests.Portals.ShalanarToSanctumOfOrder.Use();
		return true;
</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return !SuramarQuests.InShalaran;</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Survival of the Fittest</Name>
      <QuestId>
        <int>41216</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public class SurvivaloftheFittest : QuestUseItemOnClass
{
	Vector3 turnInPosition2 = new Vector3(1507.258, 4007.958, -13.58104, "None");
	public SurvivaloftheFittest()
	{
		Name = "Survival of the Fittest";
		QuestId.Add(41216);
		Step.AddRange(new[] { 12 });
		HotSpots.Add(new Vector3(1372.218, 3812.731, 21.11643));
		HotSpots.Add(new Vector3(1485.477, 3827.797, 15.44154));
		ItemId = 134119;
		Range = 19;
		EntryIdTarget.AddRange(new[] { 105653, 105656, 99638, 105640, 105654, 105644, 103631, 104837, 105655 });
	}
	public override bool PickUp()
	{
		wManager.wManagerSetting.ClearBlacklistOfCurrentProductSession();
		var p = new Vector3(1368.783, 3803.21, 21.20477, "None");
		if (ObjectManager.Me.Position.DistanceTo2D(p) &gt; 60 || !ObjectManager.Me.IsSwimming)
		{
			if (GoToTask.ToPosition(p))
			{
				MountTask.DismountMount();
				Questing.ClickMove(NpcPickUp.Position);
				Questing.Wait(2);
			}
			return true;
		}
		return base.PickUp();
	}
	public override bool TurnIn()
	{
		if (ObjectManager.Me.Position.DistanceTo(NpcTurnIn.Position) &lt; 15)
		{
			MountTask.DismountMount();
			var npc = Questing.FindUnit(NpcTurnIn.Id);
			if (npc == null || !npc.IsValid)
			{
				Logging.WriteDebug("[Survival of the Fittest] try to find turn in npc");
				GoToTask.ToPosition(turnInPosition2);
			}
		}
		return base.TurnIn();
	}
}</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>12</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Apex Predator</Name>
      <QuestId>
        <int>41231</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="1470.083" Y="4066.207" Z="-13.86754" />
        </HotSpots>
        <EntryTarget>
          <int>103677</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Shalassic Park</Name>
      <QuestId>
        <int>43582</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public class ShalassicPark : QuestClass
{
	static List&lt;Vector3&gt; pathOut = new List&lt;Vector3&gt;()
	{
		new Vector3(1482.211f, 4048.124f, 0.938818f, "None"),
		new Vector3(1487.662f, 4038.605f, 1.183161f, "None"),
		new Vector3(1491.547f, 4030.144f, 1.238685f, "None"),
		new Vector3(1496.461f, 4022.624f, 1.439511f, "None"),
		new Vector3(1501.551f, 4015.226f, 1.522209f, "None"),
		new Vector3(1505.899f, 4007.768f, 1.778251f, "None"),
		new Vector3(1509.899f, 4000.264f, 3.319249f, "None"),
		new Vector3(1514.501f, 3991.621f, 2.289793f, "None"),
		new Vector3(1516.745f, 3982.897f, 2.289793f, "None"),
		new Vector3(1517.255f, 3974.555f, 2.28981f, "None"),
		new Vector3(1516.714f, 3965.545f, 4.290835f, "None"),
		new Vector3(1515.632f, 3956.717f, 6.299695f, "None"),
		new Vector3(1514.224f, 3947.334f, 8.328133f, "None"),
		new Vector3(1511.652f, 3938.704f, 10.89111f, "None"),
		new Vector3(1508.367f, 3930.229f, 13.46378f, "None"),
		new Vector3(1506.587f, 3921.778f, 15.86017f, "None"),
		new Vector3(1505.358f, 3912.502f, 18.40324f, "None"),
		new Vector3(1504.66f, 3906.939f, 21.05679f, "None"),
		new Vector3(1508.256f, 3909.227f, 20.45055f, "None"),
		new Vector3(1515.577f, 3907.384f, 19.92945f, "None"),
		new Vector3(1514.281f, 3899.103f, 25.12514f, "None"),
		new Vector3(1508.755f, 3891.68f, 29.96643f, "None"),
		new Vector3(1510.044f, 3887.906f, 31.65438f, "None"),
		new Vector3(1506.383f, 3887.794f, 31.98691f, "None"),
		new Vector3(1500.776f, 3877.282f, 32.94233f, "None"),
		new Vector3(1497.486f, 3870.032f, 31.91043f, "None"),
		new Vector3(1492.554f, 3861.378f, 31.01885f, "None"),
		new Vector3(1489.738f, 3851.57f, 30.98215f, "None"),
		new Vector3(1487.435f, 3842.709f, 30.96418f, "None"),
		new Vector3(1485.632f, 3834.009f, 30.91722f, "None"),
		new Vector3(1482.509f, 3825.774f, 30.89235f, "None"),
		new Vector3(1477.302f, 3818.713f, 30.90675f, "None"),
		new Vector3(1469.917f, 3813.122f, 30.86519f, "None"),
		new Vector3(1461.897f, 3808.85f, 30.92572f, "None"),
		new Vector3(1453.457f, 3806.034f, 31.02853f, "None"),
		new Vector3(1445.605f, 3803.909f, 31.17451f, "None"),
		new Vector3(1436.931f, 3799.571f, 31.53322f, "None"),
		new Vector3(1429.72f, 3793.821f, 32.12002f, "None"),
		new Vector3(1421.916f, 3789.64f, 32.67555f, "None"),
		new Vector3(1414.135f, 3785.98f, 33.21156f, "None"),
		new Vector3(1406.384f, 3781.031f, 33.94297f, "None"),
		new Vector3(1398.881f, 3777.158f, 34.50632f, "None"),
		new Vector3(1388.944f, 3772.989f, 35.19498f, "None"),
		new Vector3(1382.129f, 3770.45f, 35.6647f, "None"),
		new Vector3(1373.274f, 3767.905f, 36.3325f, "None"),
		new Vector3(1364.576f, 3765.208f, 36.12129f, "None"),
		new Vector3(1356.226f, 3762.722f, 32.85983f, "None"),
		new Vector3(1347.004f, 3760.479f, 28.8908f, "None"),
		new Vector3(1338.976f, 3759.034f, 27.90615f, "None"),
		new Vector3(1308.357, 3720.928, 16.7302, "None"), //last outside
	};
	static List&lt;Vector3&gt; hotspots = new List&lt;Vector3&gt;()
	{
		new Vector3(1306.700, 3727.239, 16.72994),
		new Vector3(1309.095, 3663.132, 27.17959),
		new Vector3(1293.345, 3603.784, 35.45182),
		new Vector3(1288.865, 3633.881, 35.57856),
		new Vector3(1295.761, 3579.178, 35.45150),
		new Vector3(1348.853, 3543.749, 35.45167),
		new Vector3(1308.398, 3506.934, 35.51929),
		new Vector3(1348.853, 3543.749, 35.45167),
		new Vector3(1295.761, 3579.178, 35.45150),
		new Vector3(1288.865, 3633.881, 35.57856),
		new Vector3(1293.345, 3603.784, 35.45182),
		new Vector3(1309.095, 3663.132, 27.17959),
		new Vector3(1306.700, 3727.239, 16.72994),
	};
	static Vector3 _zooCenter = new Vector3(1500.969, 3885.862, 16.85728, "None");
	static float _zooRadius = 200;
	static float _zooHeight = 20;
	static float _minDist = 30;
	public ShalassicPark()
	{
		Name = "Shalassic Park";
		QuestId.Add(43582);
		Step.AddRange(new[] { 1, 1, 50 });
		//_zooRadius = _zooCenter.DistanceTo2D(pathOut[pathOut.Count - 1]) - 5;
		//_zooHeight = _zooCenter.DistanceZ(pathOut[pathOut.Count - 1]) + 3;
	}
	static void Log(string text)
	{
		Logging.WriteDebug("[Shalassic Park] " + text);
	}
	bool InZoo
	{
		get
		{
			var myPos = ObjectManager.Me.Position;
			return myPos.DistanceTo2D(_zooCenter) &lt; _zooRadius &amp;&amp; myPos.Z &lt; _zooCenter.Z + _zooHeight;
		}
	}
	public override bool Pulse()
	{
		if (!ObjectManager.Me.PlayerUsingVehicle)
		{
			RestoreSettings();
			Conditions.ForceIgnoreIsAttacked = false;
			GoToTask.ToPositionAndIntecractWithNpc(new Vector3(1481.71, 4049.166, -14.48639), 111062, 1);
			return true;
		}
		ChangeSettings();
		//if (!Questing.ObjectiveComplete(this, 2))
		if (InZoo)
		{
			Log("move out from zoo");
			Questing.GotoPathFromNear(pathOut, true, () =&gt; InZoo &amp;&amp; DinoControl());
			return true;
		}
		var p = hotspots[Others.Random(0, hotspots.Count - 1)];
		Log("random roaming to " + p.ToStringNewVector() );
		GoToTask.ToPosition(p, _minDist, false, (c)=&gt; DinoControl());
		return true;
	}
	bool DinoControl()
	{
		if (ObjectManager.Pet.HealthPercent &lt; 75 &amp;&amp; Questing.NoCooldownSpell(220624))
		{
			Log("Devour Demon (heal 25%)");
			Questing.Vehicle.UseButton(3);
			return true;
		}
		if (Questing.NoCooldownSpell(220580))
		{
			Log("Display Dominance (aoe stun)");
			Questing.Vehicle.UseButton(2);
			return true;
		}
		if (Questing.NoCooldownSpell(220626))
		{
			Log("Crush (aoe)");
			MovementManager.StopMove();
			Questing.Vehicle.UseButton(1);
			return true;
		}
		if (Questing.NoCooldownSpell(220626))
		{
			Log("Run Riot (haste)");
			Questing.Vehicle.UseButton(4);
			return true;
		}
		return true;
	}
	public override bool TurnIn()
	{
		wManager.wManagerSetting.ClearBlacklistOfCurrentProductSession();
		RestoreSettings();
		var p = new Vector3(1368.783, 3803.21, 21.20477, "None");
		if (ObjectManager.Me.Position.DistanceTo2D(p) &gt; 60 || !ObjectManager.Me.IsSwimming)
		{
			if (GoToTask.ToPosition(p))
			{
				MountTask.DismountMount();
				Questing.ClickMove(NpcTurnIn.Position);
				Questing.Wait(2);
			}
			return true;
		}
		return base.TurnIn();
	}
	public override bool IsComplete()
	{
		return Questing.ObjectiveComplete(this, 2) &amp;&amp; Questing.ObjectiveComplete(this, 3);
	}
	public static void ChangeSettings()
	{
		if (Conditions.ForceIgnoreIsAttacked)
			return;

		Conditions.ForceIgnoreIsAttacked = true;
		wManager.wManagerSetting.CurrentSetting.UseMount = false;
		wManager.wManagerSetting.CurrentSetting.Repair = false;
		wManager.wManagerSetting.CurrentSetting.UseMail = false;
		wManager.wManagerSetting.CurrentSetting.Selling = false;
		wManager.wManagerSetting.CurrentSetting.LootMobs = false;
		wManager.wManagerSetting.CurrentSetting.IgnoreCombatWithPet = true;
		Log("settings changed. zoo radius=" + _zooRadius + " height=" + _zooHeight );
	}
	public static void RestoreSettings()
	{
		if (!Conditions.ForceIgnoreIsAttacked)
			return;

		Questing.ResetSettings();
		Log("settings changed");
	}
}</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Bad Apples</Name>
      <QuestId>
        <int>41107</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="1329.249" Y="4503.332" Z="121.6763" />
          <Vector3 X="1406.429" Y="4552.505" Z="121.9885" />
          <Vector3 X="1345.842" Y="4614.431" Z="120.8279" />
          <Vector3 X="1462.5" Y="4595.833" Z="121.8862" />
        </HotSpots>
        <EntryIdObjects>
          <int>247023</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>8</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Blast of Spice Fish</Name>
      <QuestId>
        <int>41256</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="1458.265" Y="4587.487" Z="121.5716" />
          <Vector3 X="1421.354" Y="4601.563" Z="127.0589" />
          <Vector3 X="1408.563" Y="4556.465" Z="120.8206" />
          <Vector3 X="1353.735" Y="4582.841" Z="119.7273" Type="Swimming" />
          <Vector3 X="1311.874" Y="4541.851" Z="117.8664" />
        </HotSpots>
        <EntryTarget>
          <int>105014</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>4</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Make an Entrance 1</Name>
      <QuestId>
        <int>42829</int>
      </QuestId>
      <QuestType>InteractWithNpc</QuestType>
      <QuestClass xsi:type="InteractWithNpcEasyQuestClass">
        <HotSpots>
          <Vector3 X="1513.594" Y="3818.304" Z="114.9039" />
        </HotSpots>
        <GossipOptionNpcInteractWith>1</GossipOptionNpcInteractWith>
        <Macro />
        <IgnoreIfDead>false</IgnoreIfDead>
        <EntryIdTarget>
          <int>109144</int>
        </EntryIdTarget>
        <Range>4.5</Range>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return Questing.ObjectiveComplete(this, 1);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Make an Entrance 2</Name>
      <QuestId>
        <int>42829</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		if (ObjectManager.Me.PlayerUsingVehicle)
			return true;

		var p = new Vector3(1513.64, 3823.192, 114.9037);
		GoToTask.ToPositionAndIntecractWithNpc(p, 109114, 1);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return Questing.ObjectiveComplete(this, 2);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Make an Entrance 3</Name>
      <QuestId>
        <int>42829</int>
      </QuestId>
      <QuestType>InteractWithNpc</QuestType>
      <QuestClass xsi:type="InteractWithNpcEasyQuestClass">
        <HotSpots>
          <Vector3 X="1511.804" Y="3630.656" Z="122.8408" />
        </HotSpots>
        <GossipOptionNpcInteractWith>1</GossipOptionNpcInteractWith>
        <Macro />
        <IgnoreIfDead>false</IgnoreIfDead>
        <EntryIdTarget>
          <int>108872</int>
        </EntryIdTarget>
        <Range>4.5</Range>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>Questing.CloseNPCFrame(); return Questing.ObjectiveComplete(this, 3);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Fruit of Our Efforts</Name>
      <QuestId>
        <int>42832</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var p = new Vector3(1525.758, 3548.7, 136.5533, "None");
		if (!Questing.ObjectiveComplete(this, 1))
			Questing.Gather(p, 251499);
		else if (!Questing.ObjectiveComplete(this, 2))
			Questing.Gather(p, 251506);
		else
			Questing.Gather(p, 251507);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>How It's Made: Arcwine</Name>
      <QuestId>
        <int>42833</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var p = new Vector3(1469.043, 3551.549, 132.8791);
		var npc = Questing.FindUnit(109223);
		if (npc == null || !npc.IsValid)
		{
			if (ObjectManager.Me.Position.DistanceTo2D(p) &gt; 20)
			{
				Logging.WriteDebug("[How It's Made: Arcwine] to start");
				GoToTask.ToPosition(p);
				return true;
			}
			Logging.WriteDebug("[How It's Made: Arcwine] cancel quest");
			Questing.Abandon(this);
			return true;
		}
		if (npc.GetMove)
		{
			Questing.Escort(npc.Position, npc.Entry, 5);
			return true;
		}
		GoToTask.ToPositionAndIntecractWithNpc(npc.Position, npc.Entry, 1);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Intense Concentration</Name>
      <QuestId>
        <int>42834</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		if (!Questing.ObjectiveComplete(this, 2))
		{
			if (!ObjectManager.Me.HaveBuff(217640))
			{
				var p1 = new Vector3(1489.535, 3426.9, 132.817, "None");
				if (GoToTask.ToPosition(p1, 30))
				{
					Questing.DiableFlying();
					Questing.DisableMount();
					Questing.DisableForm();
					Conditions.ForceIgnoreIsAttacked = true;
					Questing.Gather(p1, 251556);
				}
				return true;
			}
			var hotspots = new List&lt;Vector3&gt;()
			{
				new Vector3(1449.951, 3451.653, 130.8237, "None"),
				new Vector3(1456.245, 3463.118, 130.8237, "None"),
				new Vector3(1469.551, 3468.185, 130.8237, "None"),
			};
			var p2 = hotspots[Others.Random(0, hotspots.Count - 1)];
			var p2random = robotManager.Helpful.Math.GetRandomPointInCircle(p2, 7);
			if (GoToTask.ToPosition(p2random))
			{
				Thread.Sleep(Others.Random(900, 2100));
			}
			return true;
		}
		var p3 = new Vector3(1496.025, 3428.39, 132.8174, "None");
		Questing.Gather(p3, 251565);
		return true;
</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>15</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return Questing.ObjectiveComplete(this, 3);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Old Fashioned Way</Name>
      <QuestId>
        <int>42835</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var npcId = 108872;
		var npcGameId = 112055;
		var npcPosition = new Vector3(1352, 3288.838, 132.8777, "None");
		var stompPosition = new Vector3(1358.648, 3294.078, 133.5818, "None");
		uint miniGameBuffId = 224237; //http://www.wowhead.com/spell=224237/vineyard-minigame-tracking-aura
		uint stompGrapesBuffId = 217202;
		uint addShadefruitBuffId = 217203;
		var shadefruitObjectId = 251493;
		uint addNightLilyBuffId = 217205;
		var silverJasminObjectId = 251494;
		uint addPurifiedWaterBuffId = 217204;
		var purifiedWaterObjectId = 251492;

		var npc = ObjectManager.GetObjectWoWUnit().Where(u =&gt; u.IsValid &amp;&amp; (u.Entry == npcId || u.Entry == npcGameId)).FirstOrDefault();
		if (npc == null || !npc.HaveBuff(miniGameBuffId))
		{
			Logging.WriteDebug("[The Old Fashioned Way] start vine making");
			GoToTask.ToPosition(npcPosition);
			MountTask.DismountMount();
			GoToTask.ToPositionAndIntecractWithNpc(npcPosition, npcId, 1);
			return true;
		}

		//stomp
		if (npc.HaveBuff(stompGrapesBuffId))
		{
			Logging.WriteDebug("[The Old Fashioned Way] need jumping");
			if (GoToTask.ToPosition(stompPosition))
			{
				Logging.WriteDebug("[The Old Fashioned Way] jumping");
				Move.JumpOrAscend();
				Thread.Sleep(Others.Random(1000, 1500));
			}
		}
		else if (npc.HaveBuff(addShadefruitBuffId))
		{
			Logging.WriteDebug("[The Old Fashioned Way] shadowfruit");
			GoToTask.ToPositionAndIntecractWithGameObject(stompPosition, shadefruitObjectId);
		}
		else if (npc.HaveBuff(addNightLilyBuffId))
		{
			Logging.WriteDebug("[The Old Fashioned Way] nightlily");
			GoToTask.ToPositionAndIntecractWithGameObject(stompPosition, silverJasminObjectId);
		}
		else if (npc.HaveBuff(addPurifiedWaterBuffId))
		{
			Logging.WriteDebug("[The Old Fashioned Way] pure water");
			GoToTask.ToPositionAndIntecractWithGameObject(stompPosition, purifiedWaterObjectId);
		}
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Balance to Spare</Name>
      <QuestId>
        <int>42837</int>
      </QuestId>
      <QuestType>InteractWithNpc</QuestType>
      <QuestClass xsi:type="InteractWithNpcEasyQuestClass">
        <HotSpots>
          <Vector3 X="1335.17" Y="3258.854" Z="131.8724" />
          <Vector3 X="1305.312" Y="3267.051" Z="131.9451" />
          <Vector3 X="1237.681" Y="3176.583" Z="131.9451" />
          <Vector3 X="1281.078" Y="3124.058" Z="136.1653" />
          <Vector3 X="1341.909" Y="3146.181" Z="137.5442" />
        </HotSpots>
        <GossipOptionNpcInteractWith>1</GossipOptionNpcInteractWith>
        <Macro />
        <IgnoreIfDead>false</IgnoreIfDead>
        <EntryIdTarget>
          <int>109023</int>
        </EntryIdTarget>
        <Range>4</Range>
      </QuestClass>
      <ObjectiveCount1>8</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Silkwing Sabotage</Name>
      <QuestId>
        <int>42836</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="1324.819" Y="3252.276" Z="130.9431" />
          <Vector3 X="1298.697" Y="3243.923" Z="132.5659" />
          <Vector3 X="1271.193" Y="3223.874" Z="131.9195" />
          <Vector3 X="1241.697" Y="3178.172" Z="131.9451" />
          <Vector3 X="1241.384" Y="3176.32" Z="131.9451" />
          <Vector3 X="1254.417" Y="3183.783" Z="133.3906" />
          <Vector3 X="1346.554" Y="3155.005" Z="131.8502" />
          <Vector3 X="1318.038" Y="3158.654" Z="134.142" />
          <Vector3 X="1369.383" Y="3228.472" Z="131.9451" />
          <Vector3 X="1338.241" Y="3187.351" Z="134.0252" />
        </HotSpots>
        <EntryTarget>
          <int>109180</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>8</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Reversal</Name>
      <QuestId>
        <int>42838</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		uint buffID = 217740;
		var p = new Vector3(1435.274, 3307.098, 132.6488, "None");
		if (ObjectManager.Me.HaveBuff(buffID))
		{
			MovementManager.StopMove();
			Logging.WriteDebug("[Reversal] wait debuff");
			Thread.Sleep(1000);
			return true;
		}
		if (MinLevel &lt; 1)
		{
			MinLevel = 1;
			Questing.CancelCutscene();
			return true;
		}
		Logging.WriteDebug("[Reversal] to position");
		GoToTask.ToPosition(p, 5, false, (c) =&gt;
		{
			if (ObjectManager.Me.HaveBuff(buffID))
			{
				Logging.WriteDebug("[Reversal] disabled by buff");
				return false;
			}
			return true;
		});
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Vengeance for Margaux</Name>
      <QuestId>
        <int>44084</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="1366.84" Y="3258.377" Z="132.9357" />
          <Vector3 X="1372.104" Y="3305.916" Z="132.8777" />
          <Vector3 X="1352.99" Y="3291.148" Z="132.8777" />
          <Vector3 X="1409.797" Y="3298.445" Z="132.8775" />
          <Vector3 X="1431.962" Y="3295.413" Z="132.6478" />
          <Vector3 X="1377.243" Y="3352.787" Z="132.8788" />
          <Vector3 X="1442.896" Y="3338.461" Z="132.6649" />
        </HotSpots>
        <EntryTarget>
          <int>108875</int>
          <int>108871</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>8</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return Questing.ObjectiveComplete(this, 1);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Vengeance for Margaux 2</Name>
      <QuestId>
        <int>44084</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var p = new Vector3(1209.2, 3105.023, 133.1468);
		if (GoToTask.ToPosition(p))
		{
			MountTask.DismountMount();
			Questing.ClickMove(p, 0.5f);
			Thread.Sleep(3000);
		}
		return true;
</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return Questing.ObjectiveComplete(this, 2);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Vengeance for Margaux (Thirst)</Name>
      <QuestId>
        <int>44084</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return !SuramarQuests.Thirst.Thalyssra(this);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Seek the Unsavory (Thirst)</Name>
      <QuestId>
        <int>42839</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return !SuramarQuests.Thirst.Thalyssra(this);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Seek the Unsavory</Name>
      <QuestId>
        <int>42839</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Fruit of the Doom</Name>
      <QuestId>
        <int>41258</int>
      </QuestId>
      <QuestType>InteractWithNpc</QuestType>
      <QuestClass xsi:type="InteractWithNpcEasyQuestClass">
        <HotSpots>
          <Vector3 X="1374.679" Y="4063.839" Z="111.2125" />
          <Vector3 X="1428.317" Y="4066.014" Z="122.7879" />
          <Vector3 X="1411.786" Y="4131.125" Z="112.7647" />
          <Vector3 X="1272.254" Y="4349.377" Z="113.8331" />
          <Vector3 X="1215.194" Y="4283.976" Z="113.0715" />
          <Vector3 X="1415.934" Y="3926.611" Z="113.0713" />
        </HotSpots>
        <GossipOptionNpcInteractWith>1</GossipOptionNpcInteractWith>
        <Macro />
        <IgnoreIfDead>false</IgnoreIfDead>
        <EntryIdTarget>
          <int>103005</int>
        </EntryIdTarget>
        <Range>4.5</Range>
      </QuestClass>
      <ObjectiveCount1>3</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Hired Help</Name>
      <QuestId>
        <int>43969</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var p = new Vector3(726.5886, 3941.849, 5.685789, "None");
		var npc = Questing.FindUnit(NpcTurnIn.Id);
		if (npc != null &amp;&amp; npc.IsValid)
		{
			Logging.WriteDebug("[Hired Help] catch npc at " + npc.Position.ToStringNewVector() );
			GoToTask.ToPositionAndIntecractWithNpc(npc.Position, npc.Entry, 1);
		}
		else
		{
			Logging.WriteDebug("[Hired Help] goto " + NpcTurnIn.Position.ToStringNewVector());
			GoToTask.ToPosition(NpcTurnIn.Position);
		}
		return true;
</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>If Words Don't Work...</Name>
      <QuestId>
        <int>42840</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		if (SuramarQuests.GatherAncientMana.NotCollected(800))
			return true;

		var p = new Vector3(726.5886, 3941.849, 5.685789, "None");
		var npc = Questing.FindUnit(NpcTurnIn.Id);
		if (npc != null &amp;&amp; npc.IsValid)
		{
			GoToTask.ToPositionAndIntecractWithNpc(npc.Position, npc.Entry);
			Questing.Gossip(3);
			Questing.ClickStaticPopup(1, 1);
		}
		else
		{
			GoToTask.ToPosition(NpcTurnIn.Position);
		}
		return true;
</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>A Big Score</Name>
      <QuestId>
        <int>42841</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var p = new Vector3(1431.117, 3689.379, 113.0972, "None");
		Questing.Gather(p, 251626);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Asset Security</Name>
      <QuestId>
        <int>43352</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public class AssetSecurity : QuestClass
{
	Vector3 jumpIn = new Vector3(672.1329, 4138.245, 1.493433, "None");
	Vector3 center = new Vector3(694.2943, 4160.818, 30.20043, "None");
	Vector3 roof = new Vector3(684.8346, 4141.721, 31.54149, "None");
	Vector3 jumpOut = new Vector3(663.7631, 4159.045, 1.493968, "None");
	public AssetSecurity()
	{
		Name = "Asset Security";
		QuestId.Add(43352);
		Step.AddRange(new[] { 1, 1 });
	}
	public override bool IsComplete()
	{
		return Questing.ObjectiveComplete(this, 2) &amp;&amp; !InArea;
	}
	public override bool Pulse()
	{
		if (Questing.ObjectiveComplete(this, 2))
		{
			if (InArea)
			{
				Log("jump out");
				if (GoToTask.ToPosition(center))
				{
					Questing.ClickMove(jumpOut);
					Questing.Wait(10);
				}
			}
			return true;
		}
		if (InArea)
		{
			if (NeedRoof)
			{
				Log("move to roof");
				Questing.ClickMove(roof);
				Questing.Wait(5);
				return true;
			}
			Log("attack mob");
			if (!Questing.Attack(110415))
				GoToTask.ToPosition(center);

			return true;
		}
		Log("goto start");
		if (GoToTask.ToPosition(jumpIn))
		{
			MountTask.DismountMount();
			var hook = Questing.FindUnit(110419);
			if (hook != null &amp;&amp; hook.IsValid &amp;&amp; hook.GetDistance &lt; 50)
			{
				Log("hook");
				Interact.InteractGameObject(hook.GetBaseAddress);
				Questing.Wait(8);
			}
		}
		return true;
	}
	void Log(string text)
	{
		Logging.WriteDebug("[Asset Security] " + text);
	}
	bool NeedRoof
	{
		get
		{
			var myPos = ObjectManager.Me.Position;
			return InArea &amp;&amp; myPos.X &lt; roof.X - 2f;
		}
	}
	bool InArea
	{
		get
		{
			var myPos = ObjectManager.Me.Position;
			return myPos.DistanceTo2D(center) &lt; 30 &amp;&amp; myPos.DistanceZ(center) &lt; 10;
		}
	}
}</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Make Your Mark</Name>
      <QuestId>
        <int>42792</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		if (!Questing.ObjectiveComplete(this, 2))
		{
			var p = new Vector3(814.5476, 4014.616, 1.49327);
			if (GoToTask.ToPosition(p, 20))
			{
				MountTask.DismountMount();
				GoToTask.ToPositionAndIntecractWithNpc(p, 107349, 1);
			}
			return true;
		}
		if (!Questing.ObjectiveComplete(this, 3))
		{
			var p = new Vector3(586.0084, 4015.937, 1.732223);
			if (GoToTask.ToPosition(p, 20))
			{
				MountTask.DismountMount();
				GoToTask.ToPositionAndIntecractWithNpc(p, 107348, 1);
			}
			return true;
		}
		if (!Questing.ObjectiveComplete(this, 1))
		{
			var p = new Vector3(570.5559, 3894.306, 5.685245);
			if (GoToTask.ToPosition(p, 20))
			{
				MountTask.DismountMount();
				GoToTask.ToPositionAndIntecractWithNpc(p, 107350, 1);
			}
			return true;
		}
		var p0 = new Vector3(786.1823, 4109.854, 2.992425);
		if (!Questing.Attack(107333))
		{
			GoToTask.ToPosition(p0);
		}
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return Questing.ObjectiveComplete(this, 1) &amp;&amp; Questing.ObjectiveComplete(this, 2) &amp;&amp; Questing.ObjectiveComplete(this, 3) &amp;&amp; Questing.ObjectiveComplete(this, 4);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>And They Will Tremble</Name>
      <QuestId>
        <int>44052</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		SuramarQuests.Portals.WaningCrescentToShalanar.Use();
		return true;
</Code>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return SuramarQuests.Portals.WaningCrescentToShalanar.Position.DistanceTo2D(ObjectManager.Me.Position) &gt; 200;</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>And They Will Tremble (Thirst)</Name>
      <QuestId>
        <int>44052</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return !SuramarQuests.Thirst.Thalyssra(this);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
  </EasyQuests>
  <Script>camelot10\Libs\Questing.cs
camelot10\Libs\LegionQuests.cs
camelot10\Libs\SuramarQuests.cs</Script>
  <OffMeshConnections>
    <OffMeshConnection>
      <Path>
        <Vector3 X="1661.307" Y="4730.729" Z="139.0839" />
        <Vector3 X="1689.717" Y="4705.849" Z="139.1034" />
      </Path>
      <ContinentId>1220</ContinentId>
      <Name>Shal'Aran (to)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="1689.717" Y="4705.849" Z="139.1034" />
        <Vector3 X="1656.397" Y="4737.617" Z="138.5215" />
      </Path>
      <ContinentId>1220</ContinentId>
      <Name>Shal'Aran (from)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="370.3669" Y="3995.767" Z="3.232583" />
        <Vector3 X="375.5971" Y="4001.226" Z="3.232583" />
      </Path>
      <ContinentId>1220</ContinentId>
      <Name>"Lunar Crescent Inn" (in)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="375.5971" Y="4001.226" Z="3.232583" />
        <Vector3 X="370.0779" Y="3994.427" Z="3.232583" />
      </Path>
      <ContinentId>1220</ContinentId>
      <Name>"Lunar Crescent Inn" (out)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="3183.896" Y="5051.228" Z="623.2034" />
        <Vector3 X="3186.716" Y="5043.049" Z="624.4409" />
      </Path>
      <ContinentId>1632</ContinentId>
      <Name>Arcway - Forgotten Library - Bridge (in)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="3186.716" Y="5043.049" Z="624.4409" />
        <Vector3 X="3183.49" Y="5049.872" Z="623.2037" />
      </Path>
      <ContinentId>1632</ContinentId>
      <Name>Arcway - Forgotten Library - Bridge (out)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="777.5532" Y="2434.678" Z="-70.36706" />
        <Vector3 X="800.0676" Y="2419.069" Z="-78.05019" />
      </Path>
      <ContinentId>1220</ContinentId>
      <Name>Azuregale Hollow Entrance (out)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="800.0676" Y="2419.069" Z="-78.05019" />
        <Vector3 X="777.9282" Y="2435.253" Z="-70.35561" />
      </Path>
      <ContinentId>1220</ContinentId>
      <Name>Azuregale Hollow Entrance (in)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="780.2022" Y="2431.905" Z="-70.87849" />
        <Vector3 X="824.1611" Y="2399.971" Z="-84.30511" Type="Swimming" />
        <Vector3 X="866.8925" Y="2362.27" Z="-100.2372" Type="Swimming" />
        <Vector3 X="884.4763" Y="2348.146" Z="-111.3692" />
      </Path>
      <ContinentId>1220</ContinentId>
      <Name>Azuregale Hollow Entrance (out) 2</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="884.4763" Y="2348.146" Z="-111.3692" />
        <Vector3 X="860.0535" Y="2370.611" Z="-94.31791" Type="Swimming" />
        <Vector3 X="805.2901" Y="2413.948" Z="-75.65697" Type="Swimming" />
        <Vector3 X="779.3083" Y="2434.172" Z="-70.61993" />
      </Path>
      <ContinentId>1220</ContinentId>
      <Name>Azuregale Hollow Entrance (in) 2</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="1228.809" Y="2356.51" Z="-118.4416" />
        <Vector3 X="1214.97" Y="2369.986" Z="-127.7525" />
      </Path>
      <ContinentId>1220</ContinentId>
      <Name>Fjolrik ship (out)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="1214.97" Y="2369.986" Z="-127.7525" />
        <Vector3 X="1227.416" Y="2357.776" Z="-118.7924" />
        <Vector3 X="1229.088" Y="2355.86" Z="-118.3373" />
      </Path>
      <ContinentId>1220</ContinentId>
      <Name>Fjolrik ship (in)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="300.6558" Y="3984.701" Z="3.394535" />
        <Vector3 X="324.1237" Y="3968.803" Z="1.388647" />
      </Path>
      <ContinentId>1220</ContinentId>
      <Name>Waning Crescent house1 (out)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="321.3569" Y="3970.059" Z="1.388184" />
        <Vector3 X="300.6558" Y="3984.701" Z="3.394535" />
      </Path>
      <ContinentId>1220</ContinentId>
      <Name>Waning Crescent house1 (in)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="462.6949" Y="4001.721" Z="1.388601" />
        <Vector3 X="479.2101" Y="3993.31" Z="3.233775" />
      </Path>
      <ContinentId>1220</ContinentId>
      <Name>Waning Crescent house2 (in)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="479.2101" Y="3993.31" Z="3.233775" />
        <Vector3 X="460.4027" Y="4003.336" Z="1.388338" />
      </Path>
      <ContinentId>1220</ContinentId>
      <Name>Waning Crescent house2 (out)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="745.9352" Y="4194.463" Z="3.247429" />
        <Vector3 X="744.045" Y="4202.367" Z="3.578355" />
      </Path>
      <ContinentId>1220</ContinentId>
      <Name>Karina House (in)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="744.045" Y="4202.367" Z="3.578355" />
        <Vector3 X="745.9542" Y="4194.624" Z="3.24895" />
      </Path>
      <ContinentId>1220</ContinentId>
      <Name>Karina House (out)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="1200.444" Y="4339.46" Z="113.0719" />
        <Vector3 X="1200.003" Y="4360.489" Z="113.845" />
      </Path>
      <ContinentId>1220</ContinentId>
      <Name>Smuggler House (in)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="1200.003" Y="4360.489" Z="113.845" />
        <Vector3 X="1200.536" Y="4338.101" Z="113.0722" />
      </Path>
      <ContinentId>1220</ContinentId>
      <Name>Smuggler House (out)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="1103.377" Y="2955.855" Z="5.175496" />
        <Vector3 X="1096.307" Y="2988.111" Z="6.418837" />
        <Vector3 X="1097.736" Y="3002.804" Z="4.433165" />
        <Vector3 X="1123.795" Y="3009.84" Z="6.866055" />
      </Path>
      <ContinentId>1220</ContinentId>
      <Name>Thalyssra House (in)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="1123.798" Y="3009.815" Z="6.866393" />
        <Vector3 X="1097.638" Y="3003.657" Z="4.433114" />
        <Vector3 X="1098.091" Y="2977.997" Z="6.198203" />
        <Vector3 X="1103.841" Y="2957.17" Z="5.199821" />
      </Path>
      <ContinentId>1220</ContinentId>
      <Name>Thalyssra House (out)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="2259.967" Y="3771.401" Z="276.4618" />
        <Vector3 X="2280.171" Y="3785.253" Z="284.8095" />
      </Path>
      <ContinentId>1220</ContinentId>
      <Name>Talanor Cave 1 (in)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="2280.171" Y="3785.253" Z="284.8095" />
        <Vector3 X="2259.423" Y="3771.606" Z="276.4615" />
      </Path>
      <ContinentId>1220</ContinentId>
      <Name>Talanor Cave 1 (out)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="2189.485" Y="3911.378" Z="286.6633" />
        <Vector3 X="2198.814" Y="3895.289" Z="287.3176" />
      </Path>
      <ContinentId>1220</ContinentId>
      <Name>Talanor Cave 1 (in) 2</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="2198.814" Y="3895.289" Z="287.3176" />
        <Vector3 X="2190.884" Y="3909.688" Z="287.0456" />
      </Path>
      <ContinentId>1220</ContinentId>
      <Name>Talanor Cave 1 (out) 2</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="759.9714" Y="4605.509" Z="-202.6913" />
        <Vector3 X="782.6619" Y="4623.507" Z="-194.5298" />
      </Path>
      <ContinentId>1220</ContinentId>
      <Name>Felmaw Cavern stairs (in)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="782.6619" Y="4623.507" Z="-194.5298" />
        <Vector3 X="759.2083" Y="4609.342" Z="-202.6777" />
      </Path>
      <ContinentId>1220</ContinentId>
      <Name>Felmaw Cavern stairs (out)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="1372.943" Y="3792.144" Z="21.01335" />
        <Vector3 X="1367.015" Y="3789.31" Z="22.44536" />
        <Vector3 X="1367.051" Y="3796.209" Z="21.29264" />
      </Path>
      <ContinentId>1220</ContinentId>
      <Name>Zoo pool (in)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="1367.051" Y="3796.209" Z="21.29264" />
        <Vector3 X="1366.427" Y="3789.618" Z="22.71866" />
        <Vector3 X="1371.792" Y="3790.501" Z="21.01085" />
      </Path>
      <ContinentId>1220</ContinentId>
      <Name>Zoo pool (out)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="1386.863" Y="3267.175" Z="132.8779" />
        <Vector3 X="1402.693" Y="3252.984" Z="134.7887" />
      </Path>
      <ContinentId>1220</ContinentId>
      <Name>Vineyard House 1 (in)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="1402.693" Y="3252.984" Z="134.7887" />
        <Vector3 X="1386.46" Y="3267.241" Z="132.8782" />
      </Path>
      <ContinentId>1220</ContinentId>
      <Name>Vineyard House 1 (out)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="367.7869" Y="4025.194" Z="1.388182" />
        <Vector3 X="345.2891" Y="3999.273" Z="1.388182" />
      </Path>
      <ContinentId>1220</ContinentId>
      <Name>Starcaller Retreat (in)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="345.2891" Y="3999.273" Z="1.388182" />
        <Vector3 X="371.2329" Y="4028.76" Z="1.388182" />
      </Path>
      <ContinentId>1220</ContinentId>
      <Name>Starcaller Retreat (out)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="692.9704" Y="4167.604" Z="30.18477" />
        <Vector3 X="692.3604" Y="4173.207" Z="31.42611" />
        <Vector3 X="691.9481" Y="4176.977" Z="32.56837" />
      </Path>
      <ContinentId>1220</ContinentId>
      <Name>Artisan's Gallery House Roof (in)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="691.9481" Y="4176.977" Z="32.56837" />
        <Vector3 X="692.4041" Y="4172.804" Z="31.43437" />
        <Vector3 X="692.7368" Y="4169.733" Z="30.17963" />
      </Path>
      <ContinentId>1220</ContinentId>
      <Name>Artisan's Gallery House Roof (out)</Name>
    </OffMeshConnection>
  </OffMeshConnections>
</EasyQuestProfile>