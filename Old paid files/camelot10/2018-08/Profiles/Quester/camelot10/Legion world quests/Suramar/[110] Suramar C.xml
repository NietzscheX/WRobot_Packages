<?xml version="1.0" encoding="utf-16"?>
<EasyQuestProfile xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <QuestsSorted>
    <QuestsSorted Action="RunCode" NameClass="// Map ID = Suramar  //  &#xD;&#xA;robotManager.Helpful.Var.SetVar(&quot;WorldQuestCurrentMapId&quot;, 1033);" />
    <QuestsSorted Action="WriteLog" NameClass="Suramar NE-SE-E-N-NW-(C)-S-SW-W profile start" />
    <QuestsSorted Action="Pulse" NameClass="TravelToSuramar" />
    <QuestsSorted Action="None" NameClass="=== CENTER === " />
    <QuestsSorted Action="Pulse" NameClass="SlabofBaconCooking" />
    <QuestsSorted Action="Pulse" NameClass="BaconliskCaveMoveoutsiede" />
    <QuestsSorted Action="Pulse" NameClass="BarrelsoFun" />
    <QuestsSorted Action="Pulse" NameClass="LeyRace" />
    <QuestsSorted Action="Pulse" NameClass="WitheredWranglingMeredilandAmbervale" />
    <QuestsSorted Action="Pulse" NameClass="DefendingShalaran2" />
    <QuestsSorted Action="Pulse" NameClass="DefendingShalaran1" />
    <QuestsSorted Action="Pulse" NameClass="WANTEDGuardianThorel2" />
    <QuestsSorted Action="Pulse" NameClass="WANTEDGuardianThorel" />
    <QuestsSorted Action="Pulse" NameClass="FlightMastersWhistle" />
    <QuestsSorted Action="None" NameClass="=== S === " />
    <QuestsSorted Action="WriteLog" NameClass="Suramar NE-SE-E-N-NW-(C)-S-SW-W profile complete. Loading next profile." />
    <QuestsSorted Action="LoadProfile" NameClass="camelot10\Legion world quests\Suramar\[110] Suramar S.xml" />
  </QuestsSorted>
  <NpcQuest>
    <NPCQuest Id="97140" Name="First Arcanist Thalyssra" GameObject="false">
      <PickUpQuests />
      <TurnInQuests>
        <int>42421</int>
      </TurnInQuests>
      <Position X="1734.486" Y="4599.241" Z="96.28265" />
    </NPCQuest>
  </NpcQuest>
  <Npc>
    <Npc>
      <Position X="1761.358" Y="4640.597" Z="123.8659" />
      <Entry>257977</Entry>
      <Name>Mailbox</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Mailbox</Type>
      <ContinentId>Troll_Raid</ContinentId>
    </Npc>
    <Npc>
      <Position X="794.6371" Y="5185.601" Z="37.39329" />
      <Entry>98969</Entry>
      <Name>Stalriss Dawnrunner</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Vendor</Type>
      <ContinentId>Troll_Raid</ContinentId>
    </Npc>
    <Npc>
      <Position X="794.6371" Y="5185.601" Z="37.39329" />
      <Entry>98969</Entry>
      <Name>Stalriss Dawnrunner</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Repair</Type>
      <ContinentId>Troll_Raid</ContinentId>
    </Npc>
  </Npc>
  <Blackspots>
    <Blackspot X="2094.86841" Y="4027.04565" Z="219.471191" Radius="30" />
    <Blackspot X="1487.42529" Y="4546.066" Z="123.546295" Radius="21" />
    <Blackspot X="2247.62378" Y="4221.041" Z="274.195862" Radius="22" />
    <Blackspot X="2367.89087" Y="4493.347" Z="261.013336" Radius="4.6" />
    <Blackspot X="2368.62231" Y="4496.402" Z="260.508179" Radius="4.6" />
    <Blackspot X="2368.80176" Y="4499.93945" Z="260.2146" Radius="4.6" />
    <Blackspot X="2368.91919" Y="4502.60352" Z="260.2185" Radius="4.6" />
    <Blackspot X="2368.62842" Y="4505.898" Z="260.085571" Radius="4.6" />
    <Blackspot X="2366.98022" Y="4508.839" Z="259.4887" Radius="4.6" />
    <Blackspot X="2364.26074" Y="4510.96973" Z="259.1518" Radius="4.6" />
    <Blackspot X="2360.426" Y="4513.10547" Z="257.197876" Radius="4.6" />
    <Blackspot X="2359.27783" Y="4515.341" Z="256.8019" Radius="4.6" />
    <Blackspot X="2356.66187" Y="4517.496" Z="256.402557" Radius="4.6" />
    <Blackspot X="2355.6543" Y="4518.08447" Z="256.251343" Radius="4.6" />
    <Blackspot X="2352.68359" Y="4517.76074" Z="259.414246" Radius="4.6" />
    <Blackspot X="2351.39258" Y="4517.088" Z="259.9789" Radius="4.6" />
    <Blackspot X="2349.03638" Y="4515.486" Z="256.009125" Radius="4.6" />
    <Blackspot X="2344.653" Y="4517.745" Z="256.380981" Radius="4.6" />
    <Blackspot X="2342.30249" Y="4517.477" Z="256.582916" Radius="4.6" />
    <Blackspot X="2340.84888" Y="4516.335" Z="256.103363" Radius="4.6" />
    <Blackspot X="2340.5022" Y="4516.001" Z="256.1711" Radius="4.6" />
    <Blackspot X="2339.33179" Y="4514.89746" Z="256.550079" Radius="4.6" />
    <Blackspot X="2338.095" Y="4513.797" Z="256.961975" Radius="4.6" />
    <Blackspot X="2336.94" Y="4512.79248" Z="257.350525" Radius="4.6" />
    <Blackspot X="2335.626" Y="4511.5083" Z="257.769958" Radius="4.6" />
    <Blackspot X="2334.19629" Y="4510.015" Z="258.2107" Radius="4.6" />
    <Blackspot X="2333.29761" Y="4508.942" Z="258.6263" Radius="4.6" />
    <Blackspot X="2333.258" Y="4508.32129" Z="258.79007" Radius="4.6" />
    <Blackspot X="2333.10522" Y="4506.615" Z="259.261261" Radius="4.6" />
    <Blackspot X="2333.0376" Y="4504.545" Z="259.778168" Radius="4.6" />
    <Blackspot X="2332.79785" Y="4501.687" Z="260.560669" Radius="4.6" />
    <Blackspot X="2332.79443" Y="4499.784" Z="260.904541" Radius="4.6" />
    <Blackspot X="2333.21436" Y="4498.69434" Z="260.932129" Radius="4.6" />
    <Blackspot X="2334.12769" Y="4496.40869" Z="260.963379" Radius="4.6" />
    <Blackspot X="2334.70435" Y="4494.63574" Z="261.0628" Radius="4.6" />
    <Blackspot X="2338.21362" Y="4496.459" Z="258.643677" Radius="4.6" />
    <Blackspot X="2340.31836" Y="4495.09668" Z="258.642944" Radius="4.6" />
    <Blackspot X="2340.88477" Y="4494.23975" Z="258.66745" Radius="4.6" />
    <Blackspot X="2344.00537" Y="4488.448" Z="259.610382" Radius="4.6" />
  </Blackspots>
  <BlackGuids />
  <EasyQuests>
    <EasyQuest>
      <Name>+FlightMastersWhistle</Name>
      <QuestId />
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>//FLIGHT MASTERS WHISTLE START
public sealed class FlightMastersWhistle : wManager.Wow.Class.QuestClass
{
	uint whistleId = 141605;

	public FlightMastersWhistle()
	{
		Name = "+FlightMastersWhistle";
		QuestId.AddRange(new[] { 0 });
		Step = new System.Collections.Generic.List&lt;int&gt; { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
		StepAutoDetect = new[] { false, false, false, false, false, false, false, false, false, false };
		PickUpQuestOnItem = false;
		PickUpQuestOnItemID = 0;
		GossipOptionItem = 1;
		WoWClass = wManager.Wow.Enums.WoWClass.None;
		MinLevel = 0;
		MaxLevel = 999;
		RequiredQuest = 0;
	}

	public override bool CanConditions()
	{
		return WorldQuest.Whistle.Can();
	}

	public override bool IsComplete()
	{
		return !WorldQuest.Whistle.Can();
	}

	public override bool IsCompleted()
	{
		return IsComplete();
	}

	public override bool HasQuest()
	{
		return CanConditions();
	}

	public override bool Pulse()
	{
		WorldQuest.Whistle.Use();
		return true;
	}

}
//FLIGHT MASTERS WHISTLE END</Code>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>		var timeLeft = wManager.Wow.Helpers.Lua.LuaDoString&lt;double&gt;("local startTime, duration, enable = GetItemCooldown(" + 141605 + "); return startTime + duration - GetTime();");
		return !ObjectManager.Me.IsIndoors &amp;&amp; timeLeft &lt;= 0;</CanCondition>
      <IsCompleteCondition>		var timeLeft = wManager.Wow.Helpers.Lua.LuaDoString&lt;double&gt;("local startTime, duration, enable = GetItemCooldown(" + 141605 + "); return startTime + duration - GetTime();");
		return ObjectManager.Me.IsIndoors || timeLeft &gt; 0;</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>+Travel To Suramar</Name>
      <QuestId />
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.Travel.ToZone(WorldQuest.MapId.Suramar);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>+Withered Wrangling</Name>
      <QuestId />
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public class WitheredWrangling : QuestClass
{
	protected int _questIDAOE = 40125; // give aoe skill http://www.wowhead.com/quest=40125/branch-of-the-arcandor 
	protected float _castRange = 28;
	protected Vector3 _startPosition = new Vector3(1793.294, 5499.327, 34.54236, "None");
	protected List&lt;Vector3&gt; _hotspots = new List&lt;Vector3&gt;()
	{
		//falanaar
		new Vector3(1493.555, 5384.459, -15.37231, "None"),
		new Vector3(1621.943, 5461.346, -57.94077, "None"),
		new Vector3(1655.537, 5546.796, -57.10014, "None"),
		new Vector3(1688.93, 5611.228, -57.89395, "None"),
	};
	protected robotManager.Helpful.Timer _timer = new robotManager.Helpful.Timer(30 * 1000);
	protected MemoryRobot.Int128 _lastGUID = MemoryRobot.Int128.Zero();

	protected List&lt;int&gt; _victims = new List&lt;int&gt;()
	{
			105486, //falanaar
			98555, //ambervale
			100014 //ambervale
	};
	public WitheredWrangling()
	{
		Name = "Withered Wrangling: ";
		Step.AddRange(new[] { 1 });
	}
	static void Log(string text)
	{
		Logging.WriteDebug("[Withered Wrangling] " + text);
	}
	public override bool Pulse()
	{
		if (TryStart())
			return true;

		if (TryAction())
			return true;

		TryWander();
		return true;
	}
	protected virtual bool TryStart()
	{
		foreach (var questId in QuestId)
		{
			if (Quest.HasQuest(questId))
			{
				ChangeSettings();
				return false;
			}
		}
		Log("go to start position");
		GoToTask.ToPosition(_startPosition);
		return true;
	}

	protected virtual bool TryAction()
	{
		var withered = Withered();
		if (withered == null || !withered.IsValid)
			return false;

		var wPos = withered.Position;
		var wBaseAddr = withered.GetBaseAddress;
		var wGUID = withered.Guid;

		if (_lastGUID != wGUID)
		{
			_lastGUID = wGUID;
			_timer.Reset();
		}
		if (_timer.IsReady || withered == null || !withered.IsValid || !withered.IsAlive || !withered.IsAttackable)
		{
			Log("blaklist withered");
			wManager.wManagerSetting.AddBlackList(wGUID, 3 * 60 * 1000);
			_lastGUID = MemoryRobot.Int128.Zero();
			return false;
		}

		Interact.InteractGameObject(wBaseAddr);
		GoToTask.ToPosition(wPos, _castRange);
		if (_timer.IsReady || withered == null || !withered.IsValid || !withered.IsAlive || !withered.IsAttackable || withered.GetDistance &gt; _castRange || TraceLine.TraceLineGo(wPos))
		{
			Log("blaklist withered+");
			wManager.wManagerSetting.AddBlackList(wGUID, 3 * 60 * 1000);
			_lastGUID = MemoryRobot.Int128.Zero();
			return false;
		}
		Log("rescue withered");
		MountTask.DismountMount();
		MovementManager.StopMove();
		MovementManager.Face(withered);
		Lua.LuaDoString("ExtraActionButton1:Click()");
		Thread.Sleep(Usefuls.Latency * 2);
		ClickOnTerrain.Pulse(wPos);
		Thread.Sleep(Usefuls.Latency * 2);
		Usefuls.WaitIsCasting();
		return true;
	}
	protected virtual WoWUnit Withered()
	{
		return ObjectManager.GetNearestWoWUnit(ObjectManager.GetWoWUnitByEntry(_victims));
	}
	protected virtual bool TryWander()
	{
		var p = _hotspots[Others.Random(0, _hotspots.Count - 1)];
		GoToTask.ToPosition(p, 5f, false, (c) =&gt; {
			var w = Withered();
			if (w != null &amp;&amp; w.IsValid)
			{
				Interact.InteractGameObject(w.GetBaseAddress);
				return false;
			}
			return true;
		});
		return true;
	}
	public override bool HasQuest()
	{
		return true;
	}
	public override bool IsCompleted()
	{
		return false;
	}
	public override bool CanConditions()
	{
		return WorldQuest.Can(this);
	}
	public override bool IsComplete()
	{
		return WorldQuest.Complete(this);
	}

	public static void ChangeSettings()
	{
		wManager.wManagerSetting.CurrentSetting.UseMount = false;
	}

}
</Code>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Baconlisk Cave (Move outsiede)</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="2356.028" Y="4504.396" Z="257.6529" />
          <Vector3 X="2356.536" Y="4499.241" Z="258.0281" />
          <Vector3 X="2356.881" Y="4495.744" Z="258.251" />
          <Vector3 X="2356.993" Y="4492.225" Z="258.4264" />
          <Vector3 X="2356.671" Y="4488.727" Z="259.0875" />
          <Vector3 X="2356.257" Y="4485.167" Z="261.0339" />
          <Vector3 X="2355.962" Y="4481.792" Z="263.2989" />
          <Vector3 X="2355.862" Y="4478.23" Z="264.1736" />
          <Vector3 X="2356.091" Y="4471.373" Z="264.0781" />
          <Vector3 X="2356.483" Y="4467.952" Z="262.9021" />
          <Vector3 X="2356.897" Y="4464.512" Z="262.0762" />
          <Vector3 X="2361.662" Y="4459.538" Z="261.4805" />
          <Vector3 X="2364.566" Y="4456.811" Z="261.2385" />
        </Path>
        <IsCompleteWhenAtLastPath>false</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>false</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return ObjectManager.Me.IsIndoors &amp;&amp; ObjectManager.Me.Position.DistanceTo(new Vector3(2353.913, 4503.009, 258.335, "None")) &lt; 100;</CanCondition>
      <IsCompleteCondition>return !ObjectManager.Me.IsIndoors || ObjectManager.Me.Position.DistanceTo(new Vector3(2353.913, 4503.009, 258.335, "None")) &gt; 100;</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Barrels o' Fun</Name>
      <QuestId>
        <int>45068</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var startPosition = new Vector3(1701.33, 4664.739, 169.904, "None");
		var questId = 45068;
		if (!Quest.HasQuest(questId) || ObjectManager.Me.Position.DistanceTo(startPosition) &gt; 50)
		{
			GoToTask.ToPosition(startPosition);
			return true;
		}

		if (Lua.LuaDoString&lt;bool&gt;("return ExtraActionButton1:IsVisible();"))
		{
			wManager.Wow.Helpers.Lua.LuaDoString("ExtraActionButton1:Click()");
			Thread.Sleep(Others.Random(1300, 2600));
		}

		var barrel = ObjectManager.GetObjectWoWUnit().FirstOrDefault(u =&gt; u.IsValid &amp;&amp; u.Entry == 115947
			&amp;&amp; u.GetDescriptorStartAddress &gt; 0 &amp;&amp; wManager.Wow.Memory.WowMemory.Memory.ReadUInt32(u.GetDescriptorStartAddress + (uint)wManager.Wow.Patchables.Descriptors.UnitFields.InteractSpellID) == 230877);

		if (barrel == null)
			return true;

		while (!barrel.IsGoodInteractDistance)
		{
			MovementManager.MoveTo(barrel);
			Thread.Sleep(1 * 1000);
		}

		Interact.InteractGameObject(barrel.GetBaseAddress);
		Thread.Sleep(3 * 1000);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(this);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(this);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Defending Shal'aran 1</Name>
      <QuestId>
        <int>44801</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="1476.314" Y="4923.029" Z="184.7066" />
          <Vector3 X="1471.037" Y="4926.634" Z="186.1524" />
          <Vector3 X="1562.67" Y="4947.819" Z="170.6965" />
          <Vector3 X="1523.622" Y="4928.749" Z="180.4829" />
          <Vector3 X="1571.118" Y="4869.315" Z="160.3573" />
          <Vector3 X="1537.018" Y="4908.508" Z="177.5332" />
          <Vector3 X="1519.411" Y="4885.77" Z="172.9581" />
          <Vector3 X="1529.612" Y="4908.434" Z="178.7054" />
          <Vector3 X="1412.294" Y="4859.527" Z="179.3945" />
          <Vector3 X="1467.727" Y="4884.863" Z="183.9829" />
        </HotSpots>
        <EntryTarget>
          <int>115550</int>
          <int>115561</int>
          <int>115566</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.Complete(this, 1) || /*Shal'Aran */ !Quest.GetQuestCompleted(44801);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Defending Shal'aran 2</Name>
      <QuestId>
        <int>44801</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="1479.082" Y="4916.773" Z="183.1079" />
        </HotSpots>
        <EntryTarget>
          <int>117155</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.Complete(this, 2) || /*Shal'Aran */ !Quest.GetQuestCompleted(44801);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Ley Race</Name>
      <QuestId>
        <int>43774</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var startPosition = new Vector3(1713.79, 4891.51, 142.2795, "None");
		var manapardId = 110903;
		if (!Quest.HasQuest(43774))
		{
			GoToTask.ToPosition(startPosition);
			return true;
		}
		if (!ObjectManager.Me.PlayerUsingVehicle)
		{
			//Logging.Write("need to start quest");
			wManager.wManagerSetting.ClearBlacklistOfCurrentProductSession();
			GoToTask.ToPositionAndIntecractWithNpc(startPosition, manapardId);
			return true;
		}
		var path = new List&lt;Vector3&gt;() {
			new Vector3(1767.162, 4910.3, 128.548, "None"),
			new Vector3(1819.957, 4937.796, 125.171, "None"),
			new Vector3(1933.137, 4923.465, 130.5461, "None"),
			new Vector3(2052.569, 4875.645, 144.419, "None"),
			new Vector3(2055.984, 4974.409, 160.8818, "None"),
			new Vector3(1975.16, 4862.089, 163.0647, "None"),
			new Vector3(1866.953, 4730.97, 162.8002, "None"),
			new Vector3(1782.664, 4643.198, 164.9628, "None"),
			new Vector3(1792.795, 4463.872, 201.3494, "None"),
			new Vector3(1844.294, 4332.05, 233.2575, "None"),
			new Vector3(1846.842, 4206.191, 257.7426, "None"),
			new Vector3(1876.72, 4091.206, 259.041, "None"),
			new Vector3(1952.376, 4085.169, 263.6336, "None"),
			new Vector3(2107.469, 4124.969, 254.6115, "None"),
			new Vector3(2206.383, 4147.182, 258.192, "None"),
			new Vector3(2232.637, 4171.43, 258.2347, "None"),
			new Vector3(2302.165, 4177.964, 280.2102, "None"),
			new Vector3(2328.447, 4133.735, 290.0748, "None"),
			new Vector3(2396.388, 4135.019, 290.1449, "None"),
			new Vector3(2523.871, 4290.29, 275.7506, "None"),
		};
		for (int i = 0; i &lt; path.Count; i++)
		{
			if (WorldQuest.Complete(this))
				return true;

			if (GoToTask.ToPosition(path[i]))
			{
				//Logging.Write("reach point #" + i);
			}
		}
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(43774);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(43774);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Slab of Bacon (Cooking)</Name>
      <QuestId>
        <int>41557</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="2343.84" Y="4496.831" Z="258.2604" />
        </HotSpots>
        <EntryTarget>
          <int>103787</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.CanCooking(41557);</CanCondition>
      <IsCompleteCondition>return WorldQuest.CompleteCooking(41557);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>WANTED: Guardian Thor'el</Name>
      <QuestId>
        <int>44030</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(1580.823, 3388.866, 146.0611, "None");
		var mobs = new List&lt;int&gt;() { 110944 }; //Guardian Thor'el &lt;The Eighth Shield&gt;
		WorldQuest.TryKillElite(campPosition, mobs);
		return true;
</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.CanGroup(44030);</CanCondition>
      <IsCompleteCondition>return WorldQuest.CompleteGroup(44030);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>WANTED: Guardian Thor'el 2</Name>
      <QuestId>
        <int>44013</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(1580.823, 3388.866, 146.0611, "None");
		var mobs = new List&lt;int&gt;() { 110944 }; //Guardian Thor'el &lt;The Eighth Shield&gt;
		WorldQuest.TryKillElite(campPosition, mobs);
		return true;

</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.CanGroup(44013);</CanCondition>
      <IsCompleteCondition>return WorldQuest.CompleteGroup(44013);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Withered Wrangling: Meredil and Ambervale</Name>
      <QuestId>
        <int>43807</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public class WitheredWranglingMeredilandAmbervale : WitheredWrangling
{
	public WitheredWranglingMeredilandAmbervale()
	{
		Name = Name + "Meredil and Ambervale";
		QuestId.Clear();
		QuestId.Add(43807);
		_startPosition = new Vector3(1894.503, 4940.87, 125.3444, "None");
		_hotspots = new List&lt;Vector3&gt;()
		{
			new Vector3(1812.447, 5270.133, 71.68748, "None"),
			new Vector3(1744.453, 5333.982, 66.90369, "None"),
			new Vector3(1752.552, 5243.692, 69.67624, "None"),
			new Vector3(1897.147, 5241.741, 82.78217, "None"),
			new Vector3(1781.633, 5338.929, 69.67832, "None"),
			new Vector3(1845.557, 5280.579, 71.78123, "None"),
			new Vector3(1956.509, 5240.308, 88.85142, "None"),
		};
		_victims = new List&lt;int&gt;()
		{
		98555,
		100014
		};
	}
}
</Code>
      </QuestClass>
      <ObjectiveCount1>10</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(43807);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(43807);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
  </EasyQuests>
  <Script>camelot10\Libs\WorldQuest.cs</Script>
  <OffMeshConnections />
</EasyQuestProfile>