<?xml version="1.0" encoding="utf-16"?>
<EasyQuestProfile xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <QuestsSorted>
    <QuestsSorted Action="RunCode" NameClass="// Map ID = Stormheim  //  &#xD;&#xA;robotManager.Helpful.Var.SetVar(&quot;WorldQuestCurrentMapId&quot;, 1017);" />
    <QuestsSorted Action="WriteLog" NameClass="Stormheim W-NW-N-NE-C-(E)-SE-S-SW profile start" />
    <QuestsSorted Action="Pulse" NameClass="TravelToStormheim" />
    <QuestsSorted Action="None" NameClass=" === E === " />
    <QuestsSorted Action="Pulse" NameClass="BarrelsoFun" />
    <QuestsSorted Action="Pulse" NameClass="BrimstoneDestroyer2Mining" />
    <QuestsSorted Action="RunCode" NameClass="/* ENABLE SKINNING */ wManager.wManagerSetting.CurrentSetting.SkinNinja = true;&#xA; wManager.wManagerSetting.CurrentSetting.SkinMobs = true;" />
    <QuestsSorted Action="Pulse" NameClass="SolidCrabshellFragmentSkinning" />
    <QuestsSorted Action="RunCode" NameClass="WorldQuest.SetDefaultSettings();" />
    <QuestsSorted Action="Pulse" NameClass="LivelyStormraysFishing" />
    <QuestsSorted Action="Pulse" NameClass="TheHelmouth" />
    <QuestsSorted Action="Pulse" NameClass="IdrazuulInvasionGroup" />
    <QuestsSorted Action="Pulse" NameClass="Ghostship" />
    <QuestsSorted Action="RunCode" NameClass="WorldQuest.SetDefaultSettings();" />
    <QuestsSorted Action="Pulse" NameClass="WorkOrderFjarnskagglHerbalism" />
    <QuestsSorted Action="Pulse" NameClass="SuppliesNeededFjarnskagglHerbalism" />
    <QuestsSorted Action="Pulse" NameClass="WorkOrderFjarnskagglHerbalismTurnIn" />
    <QuestsSorted Action="Pulse" NameClass="SuppliesNeededFjarnskagglHerbalismTurnIn" />
    <QuestsSorted Action="Pulse" NameClass="WorkOrderStormscalesTurnIn" />
    <QuestsSorted Action="Pulse" NameClass="FelwortHerbalism" />
    <QuestsSorted Action="Pulse" NameClass="DANGERFjorlagtheGravesChill" />
    <QuestsSorted Action="Pulse" NameClass="TheldrazInvasionGroup" />
    <QuestsSorted Action="Pulse" NameClass="WANTEDNamelessKing" />
    <QuestsSorted Action="Pulse" NameClass="WANTEDNamelessKing2" />
    <QuestsSorted Action="Pulse" NameClass="WANTEDUrgevtheFlayer" />
    <QuestsSorted Action="Pulse" NameClass="DarkRunes" />
    <QuestsSorted Action="Pulse" NameClass="RuiningtheRunewood" />
    <QuestsSorted Action="RunCode" NameClass="/* ENABLE SKINNING */ wManager.wManagerSetting.CurrentSetting.SkinNinja = true;&#xA; wManager.wManagerSetting.CurrentSetting.SkinMobs = true;" />
    <QuestsSorted Action="Pulse" NameClass="ThickBearHideSkinning" />
    <QuestsSorted Action="RunCode" NameClass="WorldQuest.SetDefaultSettings();" />
    <QuestsSorted Action="Pulse" NameClass="BrothersofSkovald1" />
    <QuestsSorted Action="Pulse" NameClass="BrothersofSkovald2" />
    <QuestsSorted Action="Pulse" NameClass="BrothersofSkovald3" />
    <QuestsSorted Action="Pulse" NameClass="PestyNests" />
    <QuestsSorted Action="Pulse" NameClass="GotoHelheim" />
    <QuestsSorted Action="RunCode" NameClass="/* ENABLE NO MOUNTS IN HELLHEIM */&#xD;&#xA;wManager.wManagerSetting.CurrentSetting.UseMount = false;" />
    <QuestsSorted Action="Pulse" NameClass="RazingHelPvP" />
    <QuestsSorted Action="Pulse" NameClass="DANGERCaptainDargun" />
    <QuestsSorted Action="Pulse" NameClass="GoFromHelheim" />
    <QuestsSorted Action="RunCode" NameClass="/* DISABLE NO MOUNTS IN HELLHEIM */&#xD;&#xA;wManager.wManagerSetting.CurrentSetting.UseMount = true;" />
    <QuestsSorted Action="Pulse" NameClass="Vampirates" />
    <QuestsSorted Action="Pulse" NameClass="Felwort2Herbalism" />
    <QuestsSorted Action="Pulse" NameClass="FelCommanderUrgozInvasionGroup" />
    <QuestsSorted Action="Pulse" NameClass="ReclaimingMorheim2" />
    <QuestsSorted Action="Pulse" NameClass="ReclaimingMorheim1" />
    <QuestsSorted Action="Pulse" NameClass="RocketBootFishingFishing" />
    <QuestsSorted Action="RunCode" NameClass="WorldQuest.SetDefaultSettings();" />
    <QuestsSorted Action="Pulse" NameClass="AnInvasionofMurlocsInvasion" />
    <QuestsSorted Action="Pulse" NameClass="AnInvasionofMurlocs2Invasion" />
    <QuestsSorted Action="Pulse" NameClass="DirebeakSwarm" />
    <QuestsSorted Action="Pulse" NameClass="ValorCalls" />
    <QuestsSorted Action="Pulse" NameClass="StormwingthePortals1" />
    <QuestsSorted Action="Pulse" NameClass="StormwingthePortals2" />
    <QuestsSorted Action="Pulse" NameClass="StormwingthePortals3" />
    <QuestsSorted Action="Pulse" NameClass="WANTEDIseltheHammer" />
    <QuestsSorted Action="Pulse" NameClass="WANTEDIseltheHammer2" />
    <QuestsSorted Action="Pulse" NameClass="DANGERLagertha" />
    <QuestsSorted Action="Pulse" NameClass="YouHaveBeenChallenged" />
    <QuestsSorted Action="Pulse" NameClass="FelhideSkinning" />
    <QuestsSorted Action="Pulse" NameClass="BrimstoneDestroyerMining" />
    <QuestsSorted Action="Pulse" NameClass="FlightMastersWhistle" />
    <QuestsSorted Action="None" NameClass=" === SE === " />
    <QuestsSorted Action="WriteLog" NameClass="Stormheim W-NW-N-NE-C-(E)-SE-S-SW profile complete. Loading next profile." />
    <QuestsSorted Action="LoadProfile" NameClass="camelot10\Legion world quests\Stormheim\[110] Stormheim SE.xml" />
  </QuestsSorted>
  <NpcQuest>
    <NPCQuest Id="106904" Name="Valdemar Stormseeker" GameObject="false">
      <PickUpQuests />
      <TurnInQuests>
        <int>42234</int>
        <int>41344</int>
        <int>41297</int>
        <int>41298</int>
      </TurnInQuests>
      <Position X="3189.058" Y="1536.941" Z="182.54" Type="Flying" />
    </NPCQuest>
  </NpcQuest>
  <Npc>
    <Npc>
      <Position X="3216.971" Y="1518.129" Z="181.0684" />
      <Entry>266466</Entry>
      <Name>Mailbox</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>None</Type>
      <ContinentId>Troll_Raid</ContinentId>
    </Npc>
    <Npc>
      <Position X="3220.345" Y="1528.601" Z="180.8534" />
      <Entry>103797</Entry>
      <Name>Brulf the Heavy</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Vendor</Type>
      <ContinentId>Troll_Raid</ContinentId>
    </Npc>
    <Npc>
      <Position X="3220.345" Y="1528.601" Z="180.8534" />
      <Entry>103797</Entry>
      <Name>Brulf the Heavy</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Repair</Type>
      <ContinentId>Troll_Raid</ContinentId>
    </Npc>
  </Npc>
  <Blackspots>
    <Blackspot X="2704.30273" Y="2504.59668" Z="207.4832" Radius="25" />
    <Blackspot X="2694.31885" Y="2499.59766" Z="218.321411" Radius="15" />
    <Blackspot X="3352.49438" Y="3179.28857" Z="531.659546" Radius="25" />
    <Blackspot X="3334.417" Y="3156.15576" Z="531.9532" Radius="25" />
    <Blackspot X="2694.0752" Y="2525.20532" Z="219.919571" Radius="30" />
    <Blackspot X="2720.08618" Y="2473.40234" Z="217.852249" Radius="22" />
    <Blackspot X="2834.21338" Y="454.2541" Z="23.1511517" Radius="15" />
    <Blackspot X="2962.244" Y="1314.07446" Z="180.003189" Radius="17" />
    <Blackspot X="3194.7666" Y="1520.59363" Z="181.773941" Radius="6" />
    <Blackspot X="3479.03" Y="1519.6178" Z="5.10527039" Radius="15" />
    <Blackspot X="456.093781" Y="518.4229" Z="5.334651" Radius="70" />
  </Blackspots>
  <BlackGuids />
  <EasyQuests>
    <EasyQuest>
      <Name>+FlightMastersWhistle</Name>
      <QuestId />
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>//FLIGHT MASTERS WHISTLE START
public sealed class FlightMastersWhistle : wManager.Wow.Class.QuestClass
{
	uint whistleId = 141605;

	public FlightMastersWhistle()
	{
		Name = "+FlightMastersWhistle";
		QuestId.AddRange(new[] { 0 });
		Step = new System.Collections.Generic.List&lt;int&gt; { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
		StepAutoDetect = new[] { false, false, false, false, false, false, false, false, false, false };
		PickUpQuestOnItem = false;
		PickUpQuestOnItemID = 0;
		GossipOptionItem = 1;
		WoWClass = wManager.Wow.Enums.WoWClass.None;
		MinLevel = 0;
		MaxLevel = 999;
		RequiredQuest = 0;
	}

	public override bool CanConditions()
	{
		return WorldQuest.Whistle.Can();
	}

	public override bool IsComplete()
	{
		return !WorldQuest.Whistle.Can();
	}

	public override bool IsCompleted()
	{
		return IsComplete();
	}

	public override bool HasQuest()
	{
		return CanConditions();
	}

	public override bool Pulse()
	{
		WorldQuest.Whistle.Use();
		return true;
	}

}
//FLIGHT MASTERS WHISTLE END</Code>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>		var timeLeft = wManager.Wow.Helpers.Lua.LuaDoString&lt;double&gt;("local startTime, duration, enable = GetItemCooldown(" + 141605 + "); return startTime + duration - GetTime();");
		return !ObjectManager.Me.IsIndoors &amp;&amp; timeLeft &lt;= 0;</CanCondition>
      <IsCompleteCondition>		var timeLeft = wManager.Wow.Helpers.Lua.LuaDoString&lt;double&gt;("local startTime, duration, enable = GetItemCooldown(" + 141605 + "); return startTime + duration - GetTime();");
		return ObjectManager.Me.IsIndoors || timeLeft &gt; 0;</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>+Stormheim Helper</Name>
      <QuestId />
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>//STORMHEIM HELPER START
public sealed class StormheimHelper : wManager.Wow.Class.QuestClass
{
	public class GalebrokenPath
	{
		static robotManager.Helpful.Vector3 centerPositon = new robotManager.Helpful.Vector3(2037.128, 2403.265, 481.1568, "None");
		static robotManager.Helpful.Vector3 hookPositionStart = new robotManager.Helpful.Vector3(2160.899, 2427.52, 481.8189, "None");
		static robotManager.Helpful.Vector3 hookPositionEnd = new robotManager.Helpful.Vector3(2127.559, 2410.447, 479.3398, "None");

		static int hordeNpcId = 108685;
		static robotManager.Helpful.Vector3 hordeNpcPosition = new robotManager.Helpful.Vector3(2874.881, 2441.083, 241.8241, "None");

		static int allianceNpcId = 105490;
		static robotManager.Helpful.Vector3 allianceNpcPosition = new robotManager.Helpful.Vector3(2700.873, 2864.009, 309.7664, "None");

		static int requiredQuestId = 38624; //http://www.wowhead.com/quest=38624/cry-thunder

		public static float InnerRadius = 240f;

		public static bool Go()
		{
			if (wManager.Wow.ObjectManager.ObjectManager.Me.Position.DistanceTo(hookPositionStart) &lt; 10)
			{
				return true;
			}

			if (wManager.Wow.ObjectManager.ObjectManager.Me.Position.DistanceTo(hookPositionStart) &lt; StormheimHelper.GalebrokenPath.InnerRadius)
			{
				if (wManager.Wow.Bot.Tasks.GoToTask.ToPosition(hookPositionStart))
				{
					return true;
				}
			}

			//Vethir can taxi us there
			if (wManager.Wow.Helpers.Quest.GetQuestCompleted(requiredQuestId))
			{
				int npc;
				robotManager.Helpful.Vector3 pos;
				if (wManager.Wow.ObjectManager.ObjectManager.Me.IsHorde)
				{
					npc = hordeNpcId;
					pos = hordeNpcPosition;
				}
				else
				{
					npc = allianceNpcId;
					pos = allianceNpcPosition;
				}
				if (wManager.Wow.Bot.Tasks.GoToTask.ToPositionAndIntecractWithNpc(pos, npc, 1))
				{
					System.Threading.Thread.Sleep(70 * 1000);
					return true;
				}
			}
			//need to move with harpoon
			else
			{
				var startPos = new robotManager.Helpful.Vector3(2204.92, 2243.411, 364.963, "None");
				var hookPos = new robotManager.Helpful.Vector3(2213.38, 2290.102, 373.8101, "None");
				if (wManager.Wow.Bot.Tasks.GoToTask.ToPosition(startPos))
				{
					if (Harpoon.UseNear(hookPos, 5))
					{
						if (wManager.Wow.Bot.Tasks.GoToTask.ToPosition(hookPositionStart))
							return true;
					}
				}
				/*
				//var startInHrydshal = new Vector3(2329.413, 2358.473, 273.595, "None");
				var startInHrydshal = new robotManager.Helpful.Vector3(2343.085, 2367.05, 316.582, "None");
				var hookPos = new robotManager.Helpful.Vector3(2299.911, 2343.661, 311.7311, "None");
				var pathEnd = new robotManager.Helpful.Vector3(2240.73, 2344.808, 378.2418, "None");

				if (wManager.Wow.ObjectManager.ObjectManager.Me.Position.DistanceTo(startInHrydshal) &gt; 100 &amp;&amp; !Hrydshal.IsIn())
				{
					Hrydshal.Go();
				}

				if (wManager.Wow.Bot.Tasks.GoToTask.ToPosition(startInHrydshal))
				{
					if (Harpoon.UseNear(hookPos, 5))
					{
						if (wManager.Wow.Bot.Tasks.GoToTask.ToPosition(hookPositionStart))
							return true;
					}
				}
				//*/
			}
			return false;
		}
	}

	public class Hrydshal
	{
		public static robotManager.Helpful.Vector3 Center = new robotManager.Helpful.Vector3(2540.157, 2513.805, 246.5028, "None");
		public static robotManager.Helpful.Vector3 Start = new robotManager.Helpful.Vector3(2673.813, 2408.071, 222.0235, "None");
		public static float InnerRadius = 170f;
		public static float OuterRaidus = 300f;

		public static bool IsIn()
		{
			return (wManager.Wow.ObjectManager.ObjectManager.Me.Position.DistanceTo(Center) &lt; InnerRadius);
		}

		public static bool IsNear()
		{
			return (wManager.Wow.ObjectManager.ObjectManager.Me.Position.DistanceTo(Center) &lt; OuterRaidus);
		}

		public static bool Go()
		{
			if (IsIn())
				return true;

			if (IsNear() &amp;&amp; Harpoon.GetNear(5) != null)
			{
				wManager.Wow.Bot.Tasks.GoToTask.ToPosition(Center);
			}

			if (wManager.Wow.ObjectManager.ObjectManager.Me.Position.DistanceTo(Start) &gt; Harpoon.HookMaxDist)
			{
				wManager.Wow.Bot.Tasks.GoToTask.ToPosition(Start);
			}

			if (IsNear() &amp;&amp; Harpoon.GetNear() != null)
			{
				if (Harpoon.UseNear())
					wManager.Wow.Bot.Tasks.GoToTask.ToPosition(Center);
			}
			return false;
		}
	}

	#region HARPOON
	public class Harpoon
	{
		const uint harpoonId = 138111;
		const int harpoonQuestId = 39775;
		public const float HookMaxDist = 55;//40;
		const float hookMinDist = 5;
		static readonly System.Collections.Generic.List&lt;int&gt; hooksPointsId = new System.Collections.Generic.List&lt;int&gt;() {
			91975,
			91983,
			92072,
			92017,
		};

		public static void Get()
		{
			//do quest to get harpoon
		}

		public static bool Can()
		{
			return wManager.Wow.Helpers.Quest.GetQuestCompleted(harpoonQuestId) || wManager.Wow.Helpers.ItemsManager.HasItemById(harpoonId);
		}

		public static bool UseNear(float radius = HookMaxDist)
		{
			if (!Can())
				return false;

			return UseNear(wManager.Wow.ObjectManager.ObjectManager.Me.Position, radius);
		}

		public static bool UseNear(robotManager.Helpful.Vector3 position, float radius = hookMinDist)
		{
			if (!Can())
				return false;

			var hookPoint = GetNear(position, radius);
			if (hookPoint != null)
				robotManager.Helpful.Logging.Write("HOOK @&gt; " + hookPoint + " result=" + (wManager.Wow.ObjectManager.ObjectManager.Me.Position.DistanceTo(hookPoint.Position) &lt; HookMaxDist) + " dist="+ wManager.Wow.ObjectManager.ObjectManager.Me.Position.DistanceTo(hookPoint.Position) + " ");

			if (hookPoint != null &amp;&amp; wManager.Wow.ObjectManager.ObjectManager.Me.Position.DistanceTo(hookPoint.Position) &lt; HookMaxDist)
			{
				wManager.Wow.Helpers.Interact.InteractGameObject(hookPoint.GetBaseAddress);
				System.Threading.Thread.Sleep(10 * 1000);
				return true;
			}
			return false;
		}

		public static wManager.Wow.ObjectManager.WoWUnit GetNear(float radius = HookMaxDist)
		{
			return GetNear(wManager.Wow.ObjectManager.ObjectManager.Me.Position, radius);
		}

		public static wManager.Wow.ObjectManager.WoWUnit GetNear(robotManager.Helpful.Vector3 position, float radius = hookMinDist)
		{
			var hookPoints = wManager.Wow.ObjectManager.ObjectManager.GetWoWUnitByEntry(hooksPointsId);
			hookPoints.Sort((a, b) =&gt; {
				if (a.Position.DistanceTo(position) &gt; b.Position.DistanceTo(position))
					return 1;
				else
					return -1;
			});
			foreach (var hookPoint in hookPoints)
			{
				if (hookPoint != null &amp;&amp; hookPoint.IsValid &amp;&amp; position.DistanceTo(hookPoint.Position) &lt; radius)
				{
					return hookPoint;
				}
			}
			return null;
		}

	}
	#endregion HARPOON

}
//STORMHEIM HELPER END</Code>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>+Travel To Stormheim</Name>
      <QuestId />
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.Travel.ToZone(WorldQuest.MapId.Stormheim);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>An Invasion of... Murlocs? (Invasion)</Name>
      <QuestId>
        <int>45439</int>
      </QuestId>
      <QuestType>InteractWithNpc</QuestType>
      <QuestClass xsi:type="InteractWithNpcEasyQuestClass">
        <HotSpots>
          <Vector3 X="2839.568" Y="378.6791" Z="11.68429" />
          <Vector3 X="2806.329" Y="333.2918" Z="3.267331" />
          <Vector3 X="2714.397" Y="379.7188" Z="18.82864" />
          <Vector3 X="2757.996" Y="407.0938" Z="19.99799" />
          <Vector3 X="2790.65" Y="461.5859" Z="20.46148" />
          <Vector3 X="2819.894" Y="448.4915" Z="22.54598" />
        </HotSpots>
        <GossipOptionNpcInteractWith>1</GossipOptionNpcInteractWith>
        <Macro />
        <IgnoreIfDead>false</IgnoreIfDead>
        <EntryIdTarget>
          <int>117003</int>
        </EntryIdTarget>
        <Range>4.5</Range>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.CompleteInvasion(this, 1);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>An Invasion of... Murlocs? 2 (Invasion)</Name>
      <QuestId>
        <int>45439</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="2774.172" Y="369.7615" Z="15.24619" />
        </HotSpots>
        <EntryTarget>
          <int>117032</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.CompleteInvasion(this, 2);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Barrels o' Fun</Name>
      <QuestId>
        <int>45072</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var startPosition = new Vector3(3247.771, 1683.865, 179.7584, "None");
		var questId = 45072;
		if (!Quest.HasQuest(questId) || ObjectManager.Me.Position.DistanceTo(startPosition) &gt; 50)
		{
			GoToTask.ToPosition(startPosition);
			return true;
		}

		if (Lua.LuaDoString&lt;bool&gt;("return ExtraActionButton1:IsVisible();"))
		{
			wManager.Wow.Helpers.Lua.LuaDoString("ExtraActionButton1:Click()");
			Thread.Sleep(Others.Random(1300, 2600));
		}

		var barrel = ObjectManager.GetObjectWoWUnit().FirstOrDefault(u =&gt; u.IsValid &amp;&amp; u.Entry == 115947
			&amp;&amp; u.GetDescriptorStartAddress &gt; 0 &amp;&amp; wManager.Wow.Memory.WowMemory.Memory.ReadUInt32(u.GetDescriptorStartAddress + (uint)wManager.Wow.Patchables.Descriptors.UnitFields.InteractSpellID) == 230877);

		if (barrel == null)
			return true;

		while (!barrel.IsGoodInteractDistance)
		{
			MovementManager.MoveTo(barrel);
			Thread.Sleep(1 * 1000);
		}

		Interact.InteractGameObject(barrel.GetBaseAddress);
		Thread.Sleep(3 * 1000);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(this);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(this);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Brimstone Destroyer (Mining)</Name>
      <QuestId>
        <int>41488</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(2513.547, 1242.135, 187.2101, "None");
		var corpseId = 247964;
		var mobId = 93237;

		if (ObjectManager.Me.Position.DistanceTo(campPosition) &gt; 100)
		{
			GoToTask.ToPosition(campPosition);
			return true;
		}

		var corpseEntry = ObjectManager.GetNearestWoWGameObject(ObjectManager.GetWoWGameObjectByEntry(corpseId));
		if (corpseEntry != null &amp;&amp; corpseEntry.IsValid)
		{
			GoToTask.ToPositionAndIntecractWithGameObject(corpseEntry.Position, corpseEntry.Entry);
			Thread.Sleep(3 * 1000);
			return true;
		}

		var mobEntry = ObjectManager.GetNearestWoWUnit(ObjectManager.GetWoWUnitByEntry(mobId));
		if (mobEntry != null &amp;&amp; mobEntry.IsValid &amp;&amp; mobEntry.IsAlive &amp;&amp; mobEntry.IsAttackable)
		{
			Interact.InteractGameObject(mobEntry.GetBaseAddress);
			Fight.StartFight(mobEntry.Guid);
			return true;
		}
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.CanMining(41488);</CanCondition>
      <IsCompleteCondition>return WorldQuest.CompleteMining(41488);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Brimstone Destroyer 2 (Mining)</Name>
      <QuestId>
        <int>41489</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(3674.776, 1490.912, 2.368221, "None");
		var corpseId = 247965;
		var mobId = 93237;

		if (ObjectManager.Me.Position.DistanceTo(campPosition) &gt; 100)
		{
			GoToTask.ToPosition(campPosition);
			return true;
		}

		var corpseEntry = ObjectManager.GetNearestWoWGameObject(ObjectManager.GetWoWGameObjectByEntry(corpseId));
		if (corpseEntry != null &amp;&amp; corpseEntry.IsValid)
		{
			GoToTask.ToPositionAndIntecractWithGameObject(corpseEntry.Position, corpseEntry.Entry);
			Thread.Sleep(3 * 1000);
			return true;
		}

		var mobEntry = ObjectManager.GetNearestWoWUnit(ObjectManager.GetWoWUnitByEntry(mobId));
		if (mobEntry != null &amp;&amp; mobEntry.IsValid &amp;&amp; mobEntry.IsAlive &amp;&amp; mobEntry.IsAttackable)
		{
			Interact.InteractGameObject(mobEntry.GetBaseAddress);
			Fight.StartFight(mobEntry.Guid);
			return true;
		}
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.CanMining(41489);</CanCondition>
      <IsCompleteCondition>return WorldQuest.CompleteMining(41489);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Brothers of Skovald 1</Name>
      <QuestId>
        <int>41938</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="3338.338" Y="1277.979" Z="122.3801" />
        </HotSpots>
        <EntryTarget>
          <int>105443</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(41938);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(41938, 1);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Brothers of Skovald 2</Name>
      <QuestId>
        <int>41938</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="3609.102" Y="1142.667" Z="136.1893" />
        </HotSpots>
        <EntryTarget>
          <int>105436</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(41938);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(41938, 2);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Brothers of Skovald 3</Name>
      <QuestId>
        <int>41938</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="3427.073" Y="1201.362" Z="129.5979" />
        </HotSpots>
        <EntryTarget>
          <int>105440</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(41938);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(41938, 3);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>DANGER: Captain Dargun</Name>
      <QuestId>
        <int>42864</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(527.4164, 304.6732, 11.84422, "None");
		var mobs = new List&lt;int&gt;() {
			109163, // http://www.wowhead.com/npc=109163/captain-dargun
		};
		WorldQuest.TryKillElite(campPosition, mobs);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.CompleteGroup(this);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>DANGER: Fjorlag, the Grave's Chill</Name>
      <QuestId>
        <int>42806</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(3199.561, 1227.241, 113.6361, "None");
		var mobs = new List&lt;int&gt;() 
		{
			108827,  //Fjorlag, the Grave's Chill
		};
		WorldQuest.TryKillElite(campPosition, mobs);
		return true;
</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.CompleteGroup(this);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>DANGER: Lagertha</Name>
      <QuestId>
        <int>42964</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(2363.497, 1448.774, 45.38647, "None");
		var mobs = new List&lt;int&gt;() 
		{
			109015,  //Lagertha 
		};
		WorldQuest.TryKillElite(campPosition, mobs);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.CompleteGroup(this);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Dark Runes</Name>
      <QuestId>
        <int>43710</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="3514.241" Y="933.8802" Z="96.08909" />
          <Vector3 X="3489.038" Y="968.5757" Z="96.13835" />
          <Vector3 X="3561.108" Y="910.8958" Z="96.31593" />
          <Vector3 X="3505.716" Y="834.1263" Z="76.38821" />
          <Vector3 X="3483.714" Y="911.1927" Z="85.07732" />
          <Vector3 X="3493.305" Y="878.0384" Z="82.98515" />
          <Vector3 X="3501.247" Y="935.9011" Z="96.13712" />
          <Vector3 X="3489.107" Y="946.441" Z="96.13712" />
          <Vector3 X="3472.678" Y="1013.049" Z="99.9719" />
          <Vector3 X="3532.751" Y="878.0502" Z="53.27185" />
          <Vector3 X="3540.566" Y="887.2999" Z="53.21301" />
          <Vector3 X="3517.057" Y="978.8646" Z="103.4503" />
          <Vector3 X="3538.963" Y="1017.927" Z="104.6652" />
          <Vector3 X="3538.51" Y="913.5729" Z="95.92252" />
          <Vector3 X="3541.507" Y="888.0087" Z="53.21281" />
          <Vector3 X="3572.526" Y="939.9566" Z="106.9677" />
          <Vector3 X="3461.912" Y="787.1667" Z="79.32136" />
          <Vector3 X="3541.507" Y="888.0087" Z="53.21281" />
          <Vector3 X="3531.303" Y="877.8663" Z="53.27114" />
          <Vector3 X="3594.591" Y="759.0938" Z="41.3378" />
          <Vector3 X="3626.547" Y="811.7795" Z="38.93537" />
          <Vector3 X="3522.567" Y="749.5799" Z="72.84291" />
          <Vector3 X="3609.691" Y="841.0521" Z="36.79026" />
          <Vector3 X="3603.081" Y="789.1563" Z="39.54243" />
          <Vector3 X="3575.631" Y="808.2118" Z="36.14786" />
        </HotSpots>
        <EntryIdObjects>
          <int>252394</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>12</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(43710);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(43710);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Direbeak Swarm!</Name>
      <QuestId>
        <int>44893</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="2283.802" Y="508.3698" Z="9.134474" />
          <Vector3 X="2247.505" Y="462.4622" Z="6.596749" />
          <Vector3 X="2350.741" Y="520.2986" Z="5.772735" />
          <Vector3 X="2335.494" Y="487.085" Z="1.940024" />
          <Vector3 X="2390.661" Y="489.9157" Z="1.011281" />
          <Vector3 X="2371.492" Y="503.4025" Z="1.92845" />
        </HotSpots>
        <EntryTarget>
          <int>115680</int>
          <int>115678</int>
          <int>115663</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>13</ObjectiveCount1>
      <ObjectiveCount2>7</ObjectiveCount2>
      <ObjectiveCount3>10</ObjectiveCount3>
      <ObjectiveCount4>25</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(44893);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(44893);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Fel Commander Urgoz (Invasion Group)</Name>
      <QuestId>
        <int>46012</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(2959.369, 604.6744, 33.0899, "None");
		var mobs = new List&lt;int&gt;() {
			118006, // http://www.wowhead.com/npc=118006/fel-commander-urgoz
		};
		WorldQuest.TryKillElite(campPosition, mobs);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.CompleteInvasionGroup(this);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Felhide (Skinning)</Name>
      <QuestId>
        <int>41569</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(2280.417, 1399.912, 0.117265, "None");
		if (ObjectManager.Me.Position.DistanceTo(campPosition) &gt; 100)
		{
			GoToTask.ToPosition(campPosition);
			return true;
		}

		var corpseId = 248050;
		var corpseEntry = ObjectManager.GetNearestWoWGameObject(ObjectManager.GetWoWGameObjectByEntry(corpseId));
		if (corpseEntry != null &amp;&amp; corpseEntry.IsValid)
		{
			GoToTask.ToPositionAndIntecractWithGameObject(corpseEntry.Position, corpseEntry.Entry);
			return true;
		}

		var mobId = 103675;
		var mobEntry = ObjectManager.GetNearestWoWUnit(ObjectManager.GetWoWUnitByEntry(mobId));
		if (mobEntry != null &amp;&amp; mobEntry.IsValid &amp;&amp; mobEntry.IsAlive &amp;&amp; mobEntry.IsAttackable)
		{
			Interact.InteractGameObject(mobEntry.GetBaseAddress);
			Fight.StartFight(mobEntry.Guid);
			return true;
		}
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.CompleteSkinning(41569);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Felwort (Herbalism)</Name>
      <QuestId>
        <int>41521</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="3330.788" Y="1364.76" Z="109.987" />
        </HotSpots>
        <EntryIdObjects>
          <int>248009</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.CanHerbalism(41521);</CanCondition>
      <IsCompleteCondition>return WorldQuest.CompleteHerbalism(41521);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Felwort 2 (Herbalism)</Name>
      <QuestId>
        <int>41520</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="2813.533" Y="671.9385" Z="100.6157" />
        </HotSpots>
        <EntryIdObjects>
          <int>248008</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.CompleteHerbalism(41520);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Ghostship</Name>
      <QuestId>
        <int>42004</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		List&lt;Vector3&gt; path = new List&lt;Vector3&gt;()
		{
			new Vector3(3573.002f, 1611.699f, 1.745572f, "None"),
			new Vector3(3570.545f, 1616.79f, 1.745572f, "None"),
			new Vector3(3567.906f, 1622.259f, 1.745572f, "None"),
			new Vector3(3564.558f, 1627.499f, 1.745572f, "None"),
			new Vector3(3560.683f, 1631.436f, 1.745572f, "None"),
			new Vector3(3556.549f, 1634.491f, 1.745572f, "None"),
			new Vector3(3552.023f, 1637.843f, 1.745572f, "None"),
			new Vector3(3547.787f, 1641.591f, 1.745572f, "None"),
			new Vector3(3543.258f, 1645.581f, 1.745572f, "None"),
			new Vector3(3538.703f, 1650.029f, 1.745572f, "None"),
			new Vector3(3535.031f, 1654.551f, 1.745572f, "None"),
			new Vector3(3532.783f, 1659.394f, 1.745572f, "None"),
			new Vector3(3531.12f, 1664.226f, 1.745572f, "None"),
			new Vector3(3529.309f, 1669.126f, 1.745572f, "None"),
			new Vector3(3527.488f, 1674.327f, 1.745572f, "None"),
			new Vector3(3526.29f, 1679.995f, 1.745572f, "None"),
			new Vector3(3524.928f, 1685.627f, 1.745572f, "None"),
			new Vector3(3522.622f, 1691.097f, 1.745572f, "None"),
			new Vector3(3520.366f, 1695.76f, 1.745572f, "None"),
			new Vector3(3517.913f, 1700.191f, 1.745572f, "None"),
			new Vector3(3516.559f, 1705.504f, 1.745572f, "None"),
			new Vector3(3516.811f, 1710.831f, 1.745572f, "None"),
			new Vector3(3517.413f, 1715.942f, 1.745572f, "None"),
			new Vector3(3517.912f, 1721.288f, 1.745572f, "None"),
			new Vector3(3517.697f, 1726.77f, 1.745572f, "None"),
			new Vector3(3517.324f, 1731.892f, 1.745572f, "None"),
			new Vector3(3516.961f, 1736.878f, 1.745572f, "None"),
			new Vector3(3516.903f, 1742.113f, 1.745572f, "None"),
			new Vector3(3517.599f, 1747.245f, 1.745572f, "None"),
			new Vector3(3518.836f, 1752.357f, 1.745572f, "None"),
			new Vector3(3520.419f, 1757.154f, 1.745572f, "None"),
			new Vector3(3522.718f, 1761.858f, 1.745572f, "None"),
			new Vector3(3525.267f, 1766.929f, 1.745572f, "None"),
			new Vector3(3528.144f, 1772.022f, 1.745572f, "None"),
			new Vector3(3531.04f, 1777.029f, 1.745572f, "None"),
			new Vector3(3534.256f, 1782.591f, 1.745572f, "None"),
			new Vector3(3537.451f, 1788.116f, 1.745572f, "None"),
			new Vector3(3540.927f, 1794.127f, 1.745572f, "None"),
			new Vector3(3544.361f, 1800.066f, 1.745572f, "None"),
			new Vector3(3546.338f, 1806.448f, 1.745572f, "None"),
			new Vector3(3547.198f, 1811.436f, 1.745572f, "None"),
			new Vector3(3547.468f, 1816.445f, 1.745572f, "None"),
			new Vector3(3547.489f, 1821.66f, 1.745572f, "None"),
			new Vector3(3546.859f, 1826.739f, 1.745572f, "None"),
			new Vector3(3544.859f, 1831.695f, 1.745572f, "None"),
			new Vector3(3542.798f, 1836.579f, 1.745572f, "None"),
			new Vector3(3540.724f, 1841.495f, 1.745572f, "None"),
			new Vector3(3538.397f, 1846.949f, 1.745572f, "None"),
			new Vector3(3536.988f, 1852.733f, 1.745572f, "None"),
			new Vector3(3537.636f, 1858.106f, 1.745572f, "None"),
			new Vector3(3539.293f, 1862.847f, 1.745572f, "None"),
			new Vector3(3541.937f, 1867.3f, 1.745572f, "None"),
			new Vector3(3546.073f, 1870.073f, 1.745572f, "None"),
			new Vector3(3550.892f, 1870.99f, 1.745572f, "None"),
			new Vector3(3555.859f, 1870.75f, 1.745572f, "None"),
			new Vector3(3560.829f, 1869.559f, 1.745572f, "None"),
			new Vector3(3565.698f, 1868.424f, 1.745572f, "None"),
			new Vector3(3570.815f, 1867.25f, 1.745572f, "None"),
			new Vector3(3576.113f, 1866.846f, 1.745572f, "None"),
			new Vector3(3581.418f, 1866.296f, 1.745572f, "None"),
			new Vector3(3586.654f, 1864.848f, 1.745572f, "None"),
			new Vector3(3591.563f, 1862.845f, 1.745572f, "None"),
			new Vector3(3596.066f, 1860.439f, 1.745572f, "None"),
			new Vector3(3600.422f, 1857.627f, 1.745572f, "None"),
			new Vector3(3604.223f, 1854.058f, 1.745572f, "None"),
			new Vector3(3606.69f, 1850.718f, 1.745572f, "None"),
			new Vector3(3609.814f, 1845.781f, 1.745572f, "None"),
			new Vector3(3611.978f, 1841.118f, 1.745572f, "None"),
			new Vector3(3613.84f, 1835.872f, 1.745572f, "None"),
			new Vector3(3614.791f, 1830.384f, 1.745572f, "None"),
			new Vector3(3615.433f, 1825.193f, 1.745572f, "None"),
			new Vector3(3614.141f, 1820.358f, 1.745572f, "None"),
			new Vector3(3609.72f, 1817.666f, 1.745572f, "None"),
			new Vector3(3604.567f, 1817.204f, 1.745572f, "None"),
			new Vector3(3599.631f, 1816.41f, 1.745572f, "None"),
			new Vector3(3594.508f, 1815.477f, 1.745572f, "None"),
			new Vector3(3589.451f, 1813.469f, 1.745572f, "None"),
			new Vector3(3585.719f, 1809.791f, 1.745572f, "None"),
			new Vector3(3583.399f, 1805.371f, 1.745572f, "None"),
			new Vector3(3582.242f, 1800.168f, 1.745572f, "None"),
			new Vector3(3583.156f, 1795.306f, 1.745572f, "None"),
			new Vector3(3583.85f, 1789.954f, 1.745572f, "None"),
			new Vector3(3582.637f, 1785.021f, 1.745572f, "None"),
			new Vector3(3580.942f, 1779.914f, 1.745572f, "None"),
			new Vector3(3579.229f, 1774.676f, 1.745572f, "None"),
			new Vector3(3578.37f, 1769.452f, 1.745572f, "None"),
			new Vector3(3578.335f, 1764.676f, 1.745572f, "None"),
			new Vector3(3579.773f, 1759.262f, 1.745572f, "None"),
			new Vector3(3582.682f, 1755.237f, 1.745572f, "None"),
			new Vector3(3585.82f, 1750.862f, 1.745572f, "None"),
			new Vector3(3588.557f, 1746.043f, 1.745572f, "None"),
			new Vector3(3590.546f, 1741.032f, 1.745572f, "None"),
			new Vector3(3592.336f, 1735.838f, 1.745572f, "None"),
			new Vector3(3593.154f, 1730.611f, 1.745572f, "None"),
			new Vector3(3593.936f, 1725.795f, 1.745572f, "None"),
			new Vector3(3594.847f, 1719.807f, 1.745572f, "None"),
			new Vector3(3596.99f, 1715.712f, 1.745572f, "None"),
			new Vector3(3599.837f, 1711.171f, 1.745572f, "None"),
			new Vector3(3602.728f, 1706.505f, 1.745572f, "None"),
			new Vector3(3605.683f, 1701.5f, 1.745572f, "None"),
			new Vector3(3608.417f, 1696.185f, 1.745572f, "None"),
			new Vector3(3610.864f, 1690.411f, 1.745572f, "None"),
			new Vector3(3612.023f, 1684.571f, 1.745572f, "None"),
			new Vector3(3612.992f, 1679.231f, 1.745572f, "None"),
			new Vector3(3613.191f, 1673.792f, 1.745572f, "None"),
			new Vector3(3611.687f, 1668.721f, 1.745572f, "None"),
			new Vector3(3609.405f, 1664.346f, 1.745572f, "None"),
			new Vector3(3606.817f, 1659.455f, 1.745572f, "None"),
			new Vector3(3604.441f, 1654.63f, 2.833079f, "None"),
			new Vector3(3604.251f, 1651.038f, 1.828907f, "None"),
			new Vector3(3603.5f, 1646.187f, 1.745449f, "None"),
			new Vector3(3602.375f, 1640.952f, 1.745449f, "None"),
			new Vector3(3600.212f, 1636.312f, 1.745449f, "None"),
			new Vector3(3596.199f, 1632.994f, 1.745449f, "None"),
			new Vector3(3592.01f, 1630.395f, 1.745449f, "None"),
			new Vector3(3587.431f, 1627.547f, 1.745449f, "None"),
			new Vector3(3582.676f, 1624.59f, 1.745449f, "None"),
			new Vector3(3577.832f, 1621.577f, 1.745449f, "None"),
		};
		if (!Questing.Has(this) || !ObjectManager.Me.PlayerUsingVehicle)
		{
			Conditions.ForceIgnoreIsAttacked = false;
			var ship = Questing.FindObject(249002);
			if (ship != null &amp;&amp; ship.IsValid)
			{
				var minDist = 10f;
				if (ship.GetDistance &lt; minDist)
				{
					Logging.WriteDebug("[Ghostship] interact " + ship.Name);
					Interact.InteractGameObject(ship.GetBaseAddress, true, false);
					Usefuls.WaitIsCasting();
					return true;
				}
				Logging.WriteDebug("[Ghostship] goto near " + ship.Name);
				GoToTask.ToPosition(ship.Position, minDist);
				//Logging.WriteDebug("[Ghostship] get on ship");
				//GoToTask.ToPositionAndIntecractWithGameObject(ship.Position, ship.Entry);
			}
			else
			{
				Logging.WriteDebug("[Ghostship] go to start");
				GoToTask.ToPosition(new Vector3(3542.542, 1556.524, 5.460547, "None"));
			}
			return true;
		}
		Conditions.ForceIgnoreIsAttacked = true;
		var mob = Questing.FindUnit(105718);
		if (mob != null &amp;&amp; mob.IsAlive &amp;&amp; mob.IsAttackable &amp;&amp; mob.IsValid)
		{
			Interact.InteractGameObject(mob.GetBaseAddress, false, false, true);
			if (mob.GetDistance &gt; 39)
				return false;

			//repair
			if (ObjectManager.Pet.HealthPercent &lt; 50 &amp;&amp; Questing.NoCooldownSpell(209514))
			{
				Logging.WriteDebug("[Ghostship] repair");
				WorldQuest.Vehicle.UseButton(4);
			}
			//harpoon
			else if (WorldQuest.NoCooldownSpell(209482))
			{
				Logging.WriteDebug("[Ghostship] attack " + mob.Name);
				WorldQuest.Vehicle.UseButton(1);
				Thread.Sleep(Usefuls.Latency);
				ClickOnTerrain.Pulse(mob.Position);
			}
		}
		if (!MovementManager.InMovementLoop)
		{
			Logging.WriteDebug("[Ghostship] start patroling");
			MovementManager.GoLoop(path);
		}
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>20</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.Complete(this);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Go From Helheim</Name>
      <QuestId />
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>public class GoFromHelheim : WorldQuest.WorldQuestFollowPathClass
{
	public GoFromHelheim() : base()
	{
		Name = "Go From Helheim";
		ForceToStartFirstPosition = true;
		//IsCompleteWhenAtLastPath = true;
		Path = new List&lt;Vector3&gt;() {
			new Vector3(343.6187f, 356.7687f, 30.29915f, "None"),
			new Vector3(338.3649f, 347.7526f, 30.69351f, "None"),
			new Vector3(334.2404f, 341.7401f, 30.63486f, "None"),
			new Vector3(321.8669, 323.7027, 30.45891, "None"),
		};
	}

	public override bool IsComplete()
	{
		//ContinentNameMpq = HelhiemExteriorArea ContinentId = 1463
		return Usefuls.ContinentId != (int)ContinentId.HelhiemExteriorArea;
	}
}</Code>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Go to Helheim</Name>
      <QuestId />
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Enums;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
#endif
public class GotoHelheim : WorldQuest.WorldQuestFollowPathClass
{
	public GotoHelheim() : base()
	{
		Name = "Go to Helheim";
		QuestId.Add(41925); //Razing Hel
		QuestId.Add(42864); // http://www.wowhead.com/quest=42864/danger-captain-dargun#guides
		ForceToStartFirstPosition = true;
		//IsCompleteWhenAtLastPath = true;
		Path = new List&lt;Vector3&gt;() {
			new Vector3(3647.192f, 767.9564f, -6.038997f, "None"),
			new Vector3(3649.899f, 765.1718f, -7.362006f, "None"),
			new Vector3(3653.25f, 761.8541f, -8.967072f, "None"),
			new Vector3(3656.685f, 758.6512f, -10.56431f, "None"),
			new Vector3(3659.344f, 756.1819f, -11.79814f, "None"),
			new Vector3(3667.321, 748.774, -15.49963, "None"),
		};
	}

	public override bool IsComplete()
	{
		if (!IsOnQuest())
		{
			return true;
		}
		//ContinentNameMpq = HelhiemExteriorArea ContinentId = 1463
		return Usefuls.ContinentId == (int)ContinentId.HelhiemExteriorArea;
	}
}</Code>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Idra'zuul (Invasion Group)</Name>
      <QuestId>
        <int>46015</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(3358.732, 1764.732, 0.1615141, "None");
		var mobs = new List&lt;int&gt;() {
			117060, // http://www.wowhead.com/npc=117060/idrazuul
		};
		WorldQuest.TryKillElite(campPosition, mobs);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.CompleteInvasionGroup(this);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Lively Stormrays (Fishing)</Name>
      <QuestId>
        <int>41602</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var path = new List&lt;Vector3&gt;()
		{
			new Vector3(3538.946f, 1824.873f, 0.2295885f, "None"),
			new Vector3(3526.372f, 1819.422f, 1.427084f, "None"),
			new Vector3(3519.321f, 1805.784f, 0.9539102f, "None"),
			new Vector3(3512.09f, 1792.68f, 1.212339f, "None"),
			new Vector3(3502.046f, 1781.116f, 1.069442f, "None"),
			new Vector3(3503.958f, 1768.735f, 0.594671f, "None"),
			new Vector3(3501.417f, 1757.9f, 0.2946191f, "None"),
			new Vector3(3506.869f, 1744.442f, 0.6572239f, "None"),
			new Vector3(3507.103f, 1732.688f, 0.56067f, "None"),
			new Vector3(3506.422f, 1724.256f, 0.318823f, "None"),
			new Vector3(3506.648f, 1715.369f, -0.01300855f, "None"),
			new Vector3(3508.739f, 1706.076f, -0.4175798f, "None"),
			new Vector3(3512.111f, 1696.278f, -0.2885541f, "None"),
			new Vector3(3519.354f, 1688.877f, 0.2163643f, "None"),
			new Vector3(3526.779f, 1686.127f, -2.549018f, "Swimming"),
			new Vector3(3535.829f, 1685.838f, -1.524561f, "Swimming"),
			new Vector3(3544.802f, 1685.507f, -1.524458f, "Swimming"),
			new Vector3(3554.867f, 1686.095f, -1.726072f, "Swimming"),
			new Vector3(3564.553f, 1686.807f, -1.524465f, "Swimming"),
			new Vector3(3572.864f, 1689.017f, -2.448441f, "Swimming"),
			new Vector3(3580.951f, 1693.81f, -1.762f, "Swimming"),
			new Vector3(3588.5f, 1699.419f, -1.524461f, "Swimming"),
			new Vector3(3595.615f, 1705.463f, -2.352753f, "Swimming"),
			new Vector3(3602.319f, 1712.957f, -0.3753337f, "None"),
			new Vector3(3603.612f, 1721.07f, 0.106781f, "None"),
			new Vector3(3602.583f, 1729.96f, -0.1624762f, "None"),
			new Vector3(3602.033f, 1740.074f, -0.894431f, "None"),
			new Vector3(3601.169f, 1748.732f, -0.2077985f, "None"),
			new Vector3(3600.052f, 1758.159f, 0.8779644f, "None"),
			new Vector3(3599.388f, 1768.678f, 0.6338043f, "None"),
			new Vector3(3599.009f, 1779.082f, 0.9767464f, "None"),
			new Vector3(3604.193f, 1788.11f, 4.287403f, "None"),
			new Vector3(3606.543f, 1797.765f, 1.528693f, "None"),
			new Vector3(3607.112f, 1808.033f, -0.1446402f, "None"),
			new Vector3(3600.175f, 1813.962f, -1.049832f, "None"),
			new Vector3(3591.253f, 1816.116f, -1.632092f, "Swimming"),
			new Vector3(3582.239f, 1818.709f, -1.524463f, "Swimming"),
			new Vector3(3573.19f, 1821.429f, -1.524462f, "Swimming"),
			new Vector3(3564.146f, 1824.143f, -1.593361f, "Swimming"),
			new Vector3(3555.202f, 1825.698f, -2.833386f, "Swimming"),
			new Vector3(3544.502f, 1826.151f, -0.3504739f, "None"),
		};
		Fisher.Loop(path, 260006); // http://www.wowhead.com/object=260006/lively-stormray-school
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>10</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.CompleteFishing(41602);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Pesty Nests</Name>
      <QuestId>
        <int>43786</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>public sealed class PestyNests : QuestClass
{
	uint harpoonId = 138111;
	int harpoonQuestId = 39775;
	float hookRange = 40;
	Vector3 startPosition = new Vector3(3417.87, 995.6753, 96.58444, "None");
	int ravenNestId = 252690;
	List&lt;int&gt; hookPointsId = new List&lt;int&gt;() {
		91983,
		92072,
		92017,
		91975,
		92022,
	};

	public PestyNests()
	{
		Name = "Pesty Nests";
		QuestId.Add(43786);
	}

	public override bool CanConditions()
	{
		return WorldQuest.Can(43786);
	}

	public override bool IsComplete()
	{
		return WorldQuest.Complete(43786);
	}

	public override bool IsCompleted()
	{
		return false;
	}

	public override bool HasQuest()
	{
		return true;
	}

	public override bool Pulse()
	{
		if (!(Quest.GetQuestCompleted(harpoonQuestId) || ItemsManager.HasItemById(harpoonId)))
		{
			Logging.WriteError("Need Stormforged Grapple Launcher");
			return true;
		}
		if (!Quest.HasQuest(QuestId[0]))
		{
			wManager.wManagerSetting.ClearBlacklistOfCurrentProductSession();
			GoToTask.ToPosition(startPosition);
			return true;
		}

		var progress = WorldQuest.Progress(QuestId[0], 1);
		if (progress == 0)
			Nest1();
		else if (progress == 1)
			Nest2();
		else if (progress == 2)
			Nest3();
		else if (progress == 3)
			Nest4();
		else if (progress == 4)
			Nest5();

		return true;
	}

	void Nest5()
	{
		var pos1 = new Vector3(3456.064, 926.9855, 85.48516, "None");
		var pos2 = new Vector3(3446.075, 928.9861, 98.68733, "None");
		var pos3 = new Vector3(3432.396, 943.7691, 124.4451, "None");
		var pos4 = new Vector3(3453.082, 959.0399, 134.6319, "None");
		if (GoToTask.ToPosition(pos1))
		{
			if (HookTo(pos2))
			{
				if (HookTo(pos3))
				{
					if (HookTo(pos4))
					{
						GoToTask.ToPositionAndIntecractWithGameObject(ObjectManager.Me.Position, ravenNestId);
					}
				}
			}
		}
	}

	void Nest4()
	{
		var pos1 = new Vector3(3456.064, 926.9855, 85.48516, "None");
		var pos2 = new Vector3(3446.075, 928.9861, 98.68733, "None");
		var pos3 = new Vector3(3432.396, 943.7691, 124.4451, "None");
		if (GoToTask.ToPosition(pos1))
		{
			if (HookTo(pos2))
			{
				if (HookTo(pos3))
				{
					GoToTask.ToPositionAndIntecractWithGameObject(ObjectManager.Me.Position, ravenNestId);
				}
			}
		}
	}

	void Nest3()
	{
		var pos1 = new Vector3(3468.34, 914.5085, 84.49931, "None");
		var pos2 = new Vector3(3461.703, 903.0608, 117.8537, "None");
		var pos3 = new Vector3(3495.773, 904.2969, 136.5393, "None");
		if (GoToTask.ToPosition(pos1))
		{
			if (HookTo(pos2))
			{
				if (HookTo(pos3))
				{
					GoToTask.ToPositionAndIntecractWithGameObject(ObjectManager.Me.Position, ravenNestId);
				}
			}
		}
	}

	void Nest2()
	{
		var pos1 = new Vector3(3468.34, 914.5085, 84.49931, "None");
		var pos2 = new Vector3(3461.703, 903.0608, 117.8537, "None");
		var path = new List&lt;Vector3&gt;() {
			new Vector3(3461.703f, 903.0608f, 117.8537f, "None"),
			new Vector3(3457.425f, 904.6273f, 118.0209f, "None"),
			new Vector3(3454.943f, 907.0184f, 120.1971f, "None"),
			new Vector3(3452.684f, 909.627f, 122.9015f, "None"),
			new Vector3(3448.209f, 915.0389f, 119.8574f, "None"),
			new Vector3(3446.062f, 917.7198f, 118.0496f, "None"),
			new Vector3(3443.745f, 921.6528f, 117.92f, "None"),
		};
		if (GoToTask.ToPosition(pos1))
		{
			if (HookTo(pos2))
			{
				WorldQuest.MovePath(path);
				GoToTask.ToPositionAndIntecractWithGameObject(ObjectManager.Me.Position, ravenNestId);
			}
		}
	}

	void Nest1()
	{
		var pos1 = new Vector3(3427.471, 999.2391, 97.18631, "None");
		var pos2 = new Vector3(3437.463, 1009.684, 114.5806, "None");
		var pos3 = new Vector3(3467.141, 1016.174, 124.3801, "None");
		var path = new List&lt;Vector3&gt;() {
			new Vector3(3467.141f, 1016.174f, 124.3801f, "None"),
			new Vector3(3471.074f, 1015.857f, 124.2943f, "None"),
			new Vector3(3474.37f, 1014.655f, 124.2756f, "None"),
			new Vector3(3477.835f, 1012.809f, 124.2662f, "None"),
		};
		if (GoToTask.ToPosition(pos1))
		{
			if (HookTo(pos2))
			{
				if (HookTo(pos3))
				{
					WorldQuest.MovePath(path);
					GoToTask.ToPositionAndIntecractWithGameObject(ObjectManager.Me.Position, ravenNestId);
				}
			}
		}
	}


	bool HookTo(Vector3 pos)
	{
		var hookPoint = GetHookPoint(pos);
		if (hookPoint == null || hookPoint.Position.DistanceTo(pos) &gt; 5)
			return false;

		Interact.InteractGameObject(hookPoint.GetBaseAddress);
		Thread.Sleep(10 * 1000);
		return true;
	}

	WoWUnit GetHookPoint(Vector3 tagetPosition)
	{
		var hookPoint = ObjectManager.GetWoWUnitByEntry(hookPointsId).Where(u =&gt; u != null &amp;&amp; u.IsValid).OrderBy(u =&gt; u.Position.DistanceTo(tagetPosition)).FirstOrDefault();
		if (hookPoint == null || ObjectManager.Me.Position.DistanceTo(hookPoint.Position) &gt; hookRange)
			return null;

		return hookPoint;
	}

}
</Code>
      </QuestClass>
      <ObjectiveCount1>5</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(43786);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(43786);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Razing Hel (PvP)</Name>
      <QuestId>
        <int>41925</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="382.7102" Y="381.1028" Z="20.92391" />
          <Vector3 X="444.8614" Y="334.7617" Z="1.612224" />
          <Vector3 X="419.0277" Y="293.9704" Z="6.235379" />
          <Vector3 X="426.9779" Y="356.2021" Z="0.09071778" />
          <Vector3 X="448.6615" Y="400.6406" Z="1.242818" />
          <Vector3 X="449.1535" Y="375.1807" Z="0.7591794" />
          <Vector3 X="543.2083" Y="362.6024" Z="0.7531607" />
          <Vector3 X="474.9264" Y="383.1935" Z="1.385359" />
          <Vector3 X="536.7062" Y="333.9203" Z="7.844995" />
          <Vector3 X="492.0306" Y="337.8814" Z="2.512006" />
          <Vector3 X="469.9913" Y="234.6832" Z="0.5486003" />
          <Vector3 X="470.7184" Y="305.8468" Z="2.475096" />
          <Vector3 X="531.4913" Y="256.1233" Z="-2.547702" />
          <Vector3 X="495.3363" Y="263.7615" Z="0.5427863" />
        </HotSpots>
        <EntryTarget>
          <int>91657</int>
          <int>97443</int>
          <int>97433</int>
          <int>91424</int>
          <int>91575</int>
          <int>91384</int>
          <int>89759</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>13</ObjectiveCount3>
      <ObjectiveCount4>7</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.CanPvP(41925);</CanCondition>
      <IsCompleteCondition>return WorldQuest.CompletePvP(41925);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Reclaiming Morheim 1</Name>
      <QuestId>
        <int>42177</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="2860.821" Y="365.0243" Z="3.205611" />
          <Vector3 X="2913.653" Y="389.1308" Z="5.271729" />
          <Vector3 X="2803.236" Y="324.5746" Z="2.442924" />
          <Vector3 X="2813.802" Y="356.1496" Z="6.668935" />
          <Vector3 X="2747.893" Y="295.941" Z="2.070904" />
          <Vector3 X="2755.536" Y="322.7169" Z="9.823249" />
        </HotSpots>
        <EntryTarget>
          <int>110258</int>
          <int>109171</int>
          <int>98501</int>
          <int>98502</int>
          <int>98500</int>
          <int>98498</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(42177);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(42177, 1);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Reclaiming Morheim 2</Name>
      <QuestId>
        <int>42177</int>
      </QuestId>
      <QuestType>InteractWithNpc</QuestType>
      <QuestClass xsi:type="InteractWithNpcEasyQuestClass">
        <HotSpots>
          <Vector3 X="2860.821" Y="365.0243" Z="3.205611" />
          <Vector3 X="2913.653" Y="389.1308" Z="5.271729" />
          <Vector3 X="2803.236" Y="324.5746" Z="2.442924" />
          <Vector3 X="2813.802" Y="356.1496" Z="6.668935" />
          <Vector3 X="2747.893" Y="295.941" Z="2.070904" />
          <Vector3 X="2755.536" Y="322.7169" Z="9.823249" />
        </HotSpots>
        <GossipOptionNpcInteractWith>1</GossipOptionNpcInteractWith>
        <Macro />
        <IgnoreIfDead>false</IgnoreIfDead>
        <EntryIdTarget>
          <int>98516</int>
          <int>98517</int>
          <int>98518</int>
        </EntryIdTarget>
        <Range>4.5</Range>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(42177);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(42177, 2);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Rocket Boot Fishing (Fishing)</Name>
      <QuestId>
        <int>41276</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var p = new Vector3(3087.326, 562.2986, 0.8387423, "None");
		var p1 = new Vector3(3279.881, 586.9158, 0);
		var p2 = new Vector3(3084.936, 464.7374, 0);
		var minDist = 30;
		Conditions.ForceIgnoreIsAttacked = false;
		wManager.wManagerSetting.CurrentSetting.UseMount = true;
		if (!ObjectManager.Me.HaveBuff(205466))
		{
			if (GoToTask.ToPosition(p))
			{
				MountTask.DismountMount();
				GoToTask.ToPositionAndIntecractWithNpc(p, 111617, 1);
			}
			return true;
		}
		Conditions.ForceIgnoreIsAttacked = true;
		wManager.wManagerSetting.CurrentSetting.UseMount = false;
		if (ObjectManager.Me.Position.DistanceTo(p1) &lt; minDist)
			GoToTask.ToPosition(p2, minDist);
		else
			GoToTask.ToPosition(p1, minDist);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>10</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.CompleteFishing(41276);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Ruining the Runewood</Name>
      <QuestId>
        <int>41927</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="3171.951" Y="1176.047" Z="119.7155" />
          <Vector3 X="3139.673" Y="1158.009" Z="127.2621" />
          <Vector3 X="3121.022" Y="1128.54" Z="131.8448" />
          <Vector3 X="3096.199" Y="1135.916" Z="133.215" />
          <Vector3 X="3004.665" Y="1165.328" Z="135.5154" />
          <Vector3 X="3022.048" Y="1144.19" Z="132.0277" />
          <Vector3 X="2956.637" Y="937.9739" Z="131.1645" />
          <Vector3 X="2989.042" Y="966.5578" Z="129.3344" />
          <Vector3 X="3027.295" Y="935.0917" Z="129.5716" />
          <Vector3 X="3032.929" Y="977.4855" Z="131.3353" />
          <Vector3 X="3142.783" Y="1021.764" Z="130.7673" />
          <Vector3 X="3122.539" Y="1045.468" Z="129.4316" />
          <Vector3 X="3162.246" Y="1086.67" Z="122.311" />
          <Vector3 X="3180.453" Y="1106.427" Z="123.4455" />
          <Vector3 X="3253.853" Y="1061.224" Z="128.4378" />
          <Vector3 X="3248.589" Y="1109.401" Z="122.4116" />
        </HotSpots>
        <EntryTarget>
          <int>108856</int>
          <int>98411</int>
          <int>93070</int>
          <int>93344</int>
          <int>93066</int>
          <int>98412</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(41927);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(41927);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Solid Crabshell Fragment (Skinning)</Name>
      <QuestId>
        <int>41343</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="3742.906" Y="1318.224" Z="3.290481" />
          <Vector3 X="3775.465" Y="1273.857" Z="6.272214" />
          <Vector3 X="3796.223" Y="1264.134" Z="5.649719" />
          <Vector3 X="3802.27" Y="1258.606" Z="4.712567" />
          <Vector3 X="3818.661" Y="1234.97" Z="1.208089" />
          <Vector3 X="3818.897" Y="1201.226" Z="2.679402" />
          <Vector3 X="3816.917" Y="1186.233" Z="2.697296" />
          <Vector3 X="3834.111" Y="1173.041" Z="0.7588819" />
          <Vector3 X="3828.255" Y="1152.602" Z="1.546608" />
          <Vector3 X="3827.808" Y="1127.967" Z="0.6309227" />
        </HotSpots>
        <EntryTarget>
          <int>107667</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>12</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.CompleteSkinning(41343);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Stormwing the Portals 1</Name>
      <QuestId>
        <int>43827</int>
      </QuestId>
      <QuestType>UseItemOn</QuestType>
      <QuestClass xsi:type="UseItemOnEasyQuestClass">
        <HotSpots>
          <Vector3 X="2708.869" Y="971.3521" Z="205.7982" />
        </HotSpots>
        <EntryIdTarget>
          <int>97983</int>
        </EntryIdTarget>
        <ItemId>129161</ItemId>
        <Range>4.5</Range>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(43827);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(43827, 1);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Stormwing the Portals 2</Name>
      <QuestId>
        <int>43827</int>
      </QuestId>
      <QuestType>UseItemOn</QuestType>
      <QuestClass xsi:type="UseItemOnEasyQuestClass">
        <HotSpots>
          <Vector3 X="2605.371" Y="982.8632" Z="216.6861" />
        </HotSpots>
        <EntryIdTarget>
          <int>97984</int>
        </EntryIdTarget>
        <ItemId>129161</ItemId>
        <Range>4.5</Range>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(43827);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(43827, 2);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Stormwing the Portals 3</Name>
      <QuestId>
        <int>43827</int>
      </QuestId>
      <QuestType>UseItemOn</QuestType>
      <QuestClass xsi:type="UseItemOnEasyQuestClass">
        <HotSpots>
          <Vector3 X="2473.476" Y="1060.685" Z="216.9062" />
        </HotSpots>
        <EntryIdTarget>
          <int>97985</int>
        </EntryIdTarget>
        <ItemId>129161</ItemId>
        <Range>4.5</Range>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(43827);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(43827, 3);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Helmouth</Name>
      <QuestId>
        <int>42013</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="3469.316" Y="1733.633" Z="6.838888E-05" />
          <Vector3 X="3502.258" Y="1726.08" Z="0.8114536" />
          <Vector3 X="3443.621" Y="1701.719" Z="0.4300027" />
          <Vector3 X="3413.158" Y="1729.705" Z="0.0005924413" />
          <Vector3 X="3399.464" Y="1771.465" Z="1.297539" />
          <Vector3 X="3383.004" Y="1734.816" Z="0.2793388" />
          <Vector3 X="3328.629" Y="1771.768" Z="-0.2857027" />
          <Vector3 X="3369.512" Y="1759.884" Z="0.0001077661" />
          <Vector3 X="3412.604" Y="1822.767" Z="-0.6091744" />
          <Vector3 X="3380.865" Y="1796.552" Z="0.0001077661" />
          <Vector3 X="3373.556" Y="1909.774" Z="2.107495" />
          <Vector3 X="3390.418" Y="1869.891" Z="0.0001077661" />
          <Vector3 X="3384.527" Y="1898.344" Z="0.9261877" />
          <Vector3 X="3465.786" Y="1889.045" Z="0.0002877619" />
          <Vector3 X="3497.153" Y="1744.465" Z="1.62663" />
          <Vector3 X="3497.894" Y="1789.225" Z="1.152678" />
        </HotSpots>
        <EntryTarget>
          <int>105746</int>
          <int>105748</int>
          <int>105750</int>
          <int>105749</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>13</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(42013);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(42013);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Thel'draz (Invasion Group)</Name>
      <QuestId>
        <int>46021</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(3536.38, 1119.91, 152.9499, "None");
		var mobs = new List&lt;int&gt;() {
			118002, //http://www.wowhead.com/npc=118002/theldraz
		};
		WorldQuest.TryKillElite(campPosition, mobs);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.CompleteInvasionGroup(this);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Thick Bear Hide (Skinning)</Name>
      <QuestId>
        <int>41342</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="2966.363" Y="980.8819" Z="130.5406" />
          <Vector3 X="3000.826" Y="1022.297" Z="127.0175" />
          <Vector3 X="2998.55" Y="945.7333" Z="128.58" />
          <Vector3 X="3018.966" Y="980.9913" Z="129.8312" />
          <Vector3 X="3086.822" Y="953.8152" Z="133.1883" />
          <Vector3 X="3084.681" Y="930.5504" Z="129.7357" />
          <Vector3 X="3142.384" Y="932.9505" Z="108.9135" />
          <Vector3 X="3167.759" Y="951.4836" Z="113.7335" />
          <Vector3 X="3164.794" Y="914.5997" Z="105.5857" />
          <Vector3 X="3142.017" Y="975.8472" Z="119.6699" />
          <Vector3 X="3198.786" Y="885.4837" Z="112.4542" />
          <Vector3 X="3197.906" Y="916.2327" Z="119.6705" />
        </HotSpots>
        <EntryTarget>
          <int>91569</int>
          <int>93095</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.CompleteSkinning(41342);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Valor Calls</Name>
      <QuestId>
        <int>41930</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="2666.291" Y="1150.315" Z="198.5282" />
          <Vector3 X="2611.211" Y="1164.071" Z="197.8035" />
          <Vector3 X="2658.912" Y="1151.546" Z="197.767" />
          <Vector3 X="2684.603" Y="1092.957" Z="197.7671" />
          <Vector3 X="2694.804" Y="1115.955" Z="197.7674" />
          <Vector3 X="2711.57" Y="1095.536" Z="197.7669" />
          <Vector3 X="2709.925" Y="1077.554" Z="197.7671" />
          <Vector3 X="2592.794" Y="1098.203" Z="205.798" />
        </HotSpots>
        <EntryIdObjects>
          <int>244704</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(41930);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(41930);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Vampirates!</Name>
      <QuestId>
        <int>43963</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="3099.698" Y="704.2176" Z="1.151996" />
          <Vector3 X="3063.916" Y="737.5816" Z="7.382434" />
          <Vector3 X="3078.249" Y="723.3812" Z="4.482172" />
          <Vector3 X="3087.347" Y="759.1683" Z="1.350165" />
          <Vector3 X="3085.638" Y="812.0296" Z="5.064821" />
          <Vector3 X="3102.861" Y="770.7478" Z="6.025959" />
        </HotSpots>
        <EntryTarget>
          <int>108030</int>
          <int>108029</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>10</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(43963);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(43963);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>WANTED: Isel the Hammer</Name>
      <QuestId>
        <int>43452</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(2817.325, 1449.892, 23.25653, "None");
		var mobs = new List&lt;int&gt;() { 94413 }; //Isel the Hammer &lt;Forger of Shields&gt;
		WorldQuest.TryKillElite(campPosition, mobs);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.CanGroup(43452);</CanCondition>
      <IsCompleteCondition>return WorldQuest.CompleteGroup(43452);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>WANTED: Isel the Hammer 2</Name>
      <QuestId>
        <int>43624</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(2817.325, 1449.892, 23.25653, "None");
		var mobs = new List&lt;int&gt;() { 94413 }; //Isel the Hammer &lt;Forger of Shields&gt;
		WorldQuest.TryKillElite(campPosition, mobs);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.CanGroup(43624);</CanCondition>
      <IsCompleteCondition>return WorldQuest.CompleteGroup(43624);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>WANTED: Nameless King</Name>
      <QuestId>
        <int>43438</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(3623.946, 1150.851, 131.8053, "None");
		var mobs = new List&lt;int&gt;() { 92763 };
		WorldQuest.TryKillElite(campPosition, mobs);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.CanGroup(43438);</CanCondition>
      <IsCompleteCondition>return WorldQuest.CompleteGroup(43438);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>WANTED: Nameless King 2</Name>
      <QuestId>
        <int>43625</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(3623.946, 1150.851, 131.8053, "None");
		var mobs = new List&lt;int&gt;() { 92763 };
		WorldQuest.TryKillElite(campPosition, mobs);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.CanGroup(43625);</CanCondition>
      <IsCompleteCondition>return WorldQuest.CompleteGroup(43625);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>WANTED: Urgev the Flayer</Name>
      <QuestId>
        <int>43451</int>
        <int>43628</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(3175.061, 1297.305, 116.9893, "None");
		var mobs = new List&lt;int&gt;() { 93401 }; //Urgev the Flayer &lt;Champion of the Runeaxes&gt;
		WorldQuest.TryKillElite(campPosition, mobs);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(this);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(this);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Work Order: Fjarnskaggl (Herbalism)</Name>
      <QuestId>
        <int>41297</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="3289.554" Y="1329.331" Z="113.1263" />
          <Vector3 X="3053.065" Y="1220.233" Z="132.2504" />
          <Vector3 X="2987.603" Y="1176.879" Z="135.4995" />
          <Vector3 X="2919.707" Y="1157.428" Z="145.2433" />
          <Vector3 X="2895.644" Y="1106.766" Z="139.9082" />
          <Vector3 X="2905.562" Y="1074.945" Z="132.9204" />
          <Vector3 X="2916.156" Y="1047.274" Z="123.4215" />
          <Vector3 X="2991.092" Y="984.4733" Z="128.7679" />
          <Vector3 X="3028.116" Y="955.1765" Z="131.0361" />
          <Vector3 X="3079.875" Y="967.8478" Z="134.8304" />
          <Vector3 X="3103.049" Y="981.5535" Z="136.0644" />
          <Vector3 X="3126.585" Y="996.6143" Z="132.4667" />
          <Vector3 X="3201.646" Y="974.3463" Z="133.6331" />
          <Vector3 X="3238.616" Y="979.4639" Z="141.6766" />
          <Vector3 X="3287.036" Y="915.7682" Z="143.0733" />
          <Vector3 X="3338.595" Y="953.5525" Z="140.6947" />
          <Vector3 X="3325.087" Y="1017.936" Z="133.6949" />
          <Vector3 X="3319.302" Y="1063.972" Z="123.6485" />
          <Vector3 X="3369.898" Y="1097.543" Z="126.7208" />
          <Vector3 X="3436.091" Y="1136.024" Z="136.3492" />
          <Vector3 X="3465.43" Y="1153.674" Z="131.9691" />
          <Vector3 X="3485.226" Y="1212.749" Z="120.9839" />
          <Vector3 X="3440.644" Y="1240.147" Z="120.8471" />
          <Vector3 X="3415.763" Y="1291.913" Z="122.0399" />
          <Vector3 X="3353.84" Y="1310.355" Z="120.9688" />
          <Vector3 X="3311.405" Y="1348.675" Z="110.5301" />
          <Vector3 X="3248.581" Y="1356.225" Z="117.5769" />
        </HotSpots>
        <EntryIdObjects>
          <int>244777</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>40</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.CompleteHerbalism(41297, 1);</CanCondition>
      <IsCompleteCondition>return WorldQuest.CompleteHerbalism(41297, 1);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Work Order: Fjarnskaggl (Herbalism) (Turn In)</Name>
      <QuestId>
        <int>41297</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public sealed class WorkOrderFjarnskagglHerbalismTurnIn : QuestClass
{
	int _questId = 41297;

	public WorkOrderFjarnskagglHerbalismTurnIn()
	{
		Name = "Work Order: Fjarnskaggl (Herbalism) (Turn In)";
		QuestId.Add(_questId);
		Step.AddRange(new[] { 0, 0, 0, 0, 0 });
	}
	public override bool CanConditions()
	{
		return WorldQuest.CompleteHerbalism(41297, 1);
	}
	public override bool HasQuest()
	{
		return CanConditions();
	}
	public override bool IsComplete()
	{
		return WorldQuest.CompleteHerbalism(_questId);
	}
	public override bool IsCompleted()
	{
		return !CanConditions();
	}

	public override bool Pulse()
	{
		return TurnIn();
	}
}
</Code>
      </QuestClass>
      <ObjectiveCount1>40</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.CanHerbalism(41297);</CanCondition>
      <IsCompleteCondition>return WorldQuest.CompleteHerbalism(41297);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Work Order: Stormscales (Turn In)</Name>
      <QuestId>
        <int>41344</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public sealed class WorkOrderStormscalesTurnIn : QuestClass
{
	int _questId = 41344;
	public WorkOrderStormscalesTurnIn()
	{
		Name = "Work Order: Stormscales (Turn In)";
		QuestId.Add(_questId);
		Step.AddRange(new[] { 0, 0, 0, 0, 0 });
	}

	public override bool CanConditions()
	{
		return WorldQuest.CompleteSkinning(_questId, 1);
	}
	public override bool HasQuest()
	{
		return CanConditions();
	}
	public override bool IsComplete()
	{
		return WorldQuest.CompleteSkinning(_questId);
	}
	public override bool IsCompleted()
	{
		return !CanConditions();
	}

	public override bool Pulse()
	{
		return TurnIn();
	}
}</Code>
      </QuestClass>
      <ObjectiveCount1>40</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>You Have Been Challenged</Name>
      <QuestId>
        <int>41936</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var questId = 41936;
		var startPosition = new Vector3(2540.382, 1480.103, 23.10495, "None");
		var hornId = 248881;
		if (!Quest.HasQuest(questId))
		{
			//Logging.Write("go to start");
			GoToTask.ToPosition(startPosition);
			return true;
		}
		var mobs = new List&lt;int&gt;() {
			105399,
			105424,
			105432,
			105433,
		};
		var mobEntry = ObjectManager.GetNearestWoWUnit(ObjectManager.GetWoWUnitByEntry(mobs));
		if (mobEntry != null &amp;&amp; mobEntry.IsAlive &amp;&amp; mobEntry.IsAttackable &amp;&amp; mobEntry.IsValid)
		{
			//Logging.Write("attack target");
			Interact.InteractGameObject(mobEntry.GetBaseAddress);
			Fight.StartFight(mobEntry.Guid);
			return true;
		}
		//Logging.Write("no target, use horn");
		GoToTask.ToPositionAndIntecractWithGameObject(startPosition, hornId);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(41936);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(41936);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Supplies Needed: Fjarnskaggl (Herbalism)</Name>
      <QuestId>
        <int>41298</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="3289.554" Y="1329.331" Z="113.1263" />
          <Vector3 X="3053.065" Y="1220.233" Z="132.2504" />
          <Vector3 X="2987.603" Y="1176.879" Z="135.4995" />
          <Vector3 X="2919.707" Y="1157.428" Z="145.2433" />
          <Vector3 X="2895.644" Y="1106.766" Z="139.9082" />
          <Vector3 X="2905.562" Y="1074.945" Z="132.9204" />
          <Vector3 X="2916.156" Y="1047.274" Z="123.4215" />
          <Vector3 X="2991.092" Y="984.4733" Z="128.7679" />
          <Vector3 X="3028.116" Y="955.1765" Z="131.0361" />
          <Vector3 X="3079.875" Y="967.8478" Z="134.8304" />
          <Vector3 X="3103.049" Y="981.5535" Z="136.0644" />
          <Vector3 X="3126.585" Y="996.6143" Z="132.4667" />
          <Vector3 X="3201.646" Y="974.3463" Z="133.6331" />
          <Vector3 X="3238.616" Y="979.4639" Z="141.6766" />
          <Vector3 X="3287.036" Y="915.7682" Z="143.0733" />
          <Vector3 X="3338.595" Y="953.5525" Z="140.6947" />
          <Vector3 X="3325.087" Y="1017.936" Z="133.6949" />
          <Vector3 X="3319.302" Y="1063.972" Z="123.6485" />
          <Vector3 X="3369.898" Y="1097.543" Z="126.7208" />
          <Vector3 X="3436.091" Y="1136.024" Z="136.3492" />
          <Vector3 X="3465.43" Y="1153.674" Z="131.9691" />
          <Vector3 X="3485.226" Y="1212.749" Z="120.9839" />
          <Vector3 X="3440.644" Y="1240.147" Z="120.8471" />
          <Vector3 X="3415.763" Y="1291.913" Z="122.0399" />
          <Vector3 X="3353.84" Y="1310.355" Z="120.9688" />
          <Vector3 X="3311.405" Y="1348.675" Z="110.5301" />
          <Vector3 X="3248.581" Y="1356.225" Z="117.5769" />
        </HotSpots>
        <EntryIdObjects>
          <int>244777</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>40</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.CompleteHerbalism(41298, 1);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Supplies Needed: Fjarnskaggl (Herbalism) (Turn In)</Name>
      <QuestId>
        <int>41298</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif
public class SuppliesNeededFjarnskagglHerbalismTurnIn : QuestClass
{
	int _questId = 41298;
	public SuppliesNeededFjarnskagglHerbalismTurnIn()
	{
		Name = "Supplies Needed: Fjarnskaggl (Herbalism) (Turn In)";
		QuestId.Add(_questId);
		Step.AddRange(new[] { 0 });
	}
	public override bool CanConditions()
	{
		return WorldQuest.CompleteHerbalism(_questId, 1);
	}
	public override bool HasQuest()
	{
		return CanConditions();
	}
	public override bool IsComplete()
	{
		return WorldQuest.CompleteHerbalism(_questId);
	}
	public override bool IsCompleted()
	{
		return !CanConditions();
	}
	public override bool Pulse()
	{
		return TurnIn();
	}
}</Code>
      </QuestClass>
      <ObjectiveCount1>40</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
  </EasyQuests>
  <Script>camelot10\Libs\WorldQuest.cs
camelot10\Libs\Questing.cs
camelot10\Libs\Fisher.cs
</Script>
  <OffMeshConnections>
    <OffMeshConnection>
      <Path>
        <Vector3 X="2573.187" Y="1169.766" Z="206.7684" />
        <Vector3 X="2574.943" Y="1172.306" Z="206.7684" />
        <Vector3 X="2582.592" Y="1176.872" Z="199.0332" />
        <Vector3 X="2577.26" Y="1190.005" Z="189.1034" />
      </Path>
      <ContinentId>1220</ContinentId>
      <Name>Gates of Valor (jump to west)</Name>
    </OffMeshConnection>
  </OffMeshConnections>
</EasyQuestProfile>