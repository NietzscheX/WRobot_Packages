<?xml version="1.0" encoding="utf-16"?>
<EasyQuestProfile xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <QuestsSorted>
    <QuestsSorted Action="RunCode" NameClass="// Map ID = Suramar  //  &#xD;&#xA;robotManager.Helpful.Var.SetVar(&quot;WorldQuestCurrentMapId&quot;, 1033);" />
    <QuestsSorted Action="WriteLog" NameClass="Suramar NE-SE-E-N-(NW)-C-S-SW-W profile start" />
    <QuestsSorted Action="Pulse" NameClass="TravelToSuramar" />
    <QuestsSorted Action="None" NameClass="=== NW === " />
    <QuestsSorted Action="Pulse" NameClass="NotThereNotThenNotForever" />
    <QuestsSorted Action="Pulse" NameClass="TheAnglerManglerFishing" />
    <QuestsSorted Action="Pulse" NameClass="TheBattleRagesOn" />
    <QuestsSorted Action="Pulse" NameClass="WANTEDSiegemasterAedrin" />
    <QuestsSorted Action="Pulse" NameClass="WANTEDSiegemasterAedrin2" />
    <QuestsSorted Action="Pulse" NameClass="AirSuperiority" />
    <QuestsSorted Action="Pulse" NameClass="AirSuperiorityEjectVehicle" />
    <QuestsSorted Action="Pulse" NameClass="TheMagicofFlight" />
    <QuestsSorted Action="Pulse" NameClass="TheMagicofFlightGetUnderBridge" />
    <QuestsSorted Action="Pulse" NameClass="AncientGuidance" />
    <QuestsSorted Action="Pulse" NameClass="FlightMastersWhistle" />
    <QuestsSorted Action="None" NameClass="=== CENTER === " />
    <QuestsSorted Action="WriteLog" NameClass="Suramar NE-SE-E-N-(NW)-C-S-SW-W profile complete. Loading next profile." />
    <QuestsSorted Action="LoadProfile" NameClass="camelot10\Legion world quests\Suramar\[110] Suramar C.xml" />
  </QuestsSorted>
  <NpcQuest>
    <NPCQuest Id="97140" Name="Первая чародейка Талисра" GameObject="false">
      <PickUpQuests />
      <TurnInQuests>
        <int>42421</int>
      </TurnInQuests>
      <Position X="1734.486" Y="4599.241" Z="96.28265" />
    </NPCQuest>
  </NpcQuest>
  <Npc />
  <Blackspots>
    <Blackspot X="2094.86841" Y="4027.04565" Z="219.471191" Radius="30" />
    <Blackspot X="1487.42529" Y="4546.066" Z="123.546295" Radius="21" />
    <Blackspot X="2247.62378" Y="4221.041" Z="274.195862" Radius="22" />
    <Blackspot X="2367.89087" Y="4493.347" Z="261.013336" Radius="4.6" />
    <Blackspot X="2368.62231" Y="4496.402" Z="260.508179" Radius="4.6" />
    <Blackspot X="2368.80176" Y="4499.93945" Z="260.2146" Radius="4.6" />
    <Blackspot X="2368.91919" Y="4502.60352" Z="260.2185" Radius="4.6" />
    <Blackspot X="2368.62842" Y="4505.898" Z="260.085571" Radius="4.6" />
    <Blackspot X="2366.98022" Y="4508.839" Z="259.4887" Radius="4.6" />
    <Blackspot X="2364.26074" Y="4510.96973" Z="259.1518" Radius="4.6" />
    <Blackspot X="2360.426" Y="4513.10547" Z="257.197876" Radius="4.6" />
    <Blackspot X="2359.27783" Y="4515.341" Z="256.8019" Radius="4.6" />
    <Blackspot X="2356.66187" Y="4517.496" Z="256.402557" Radius="4.6" />
    <Blackspot X="2355.6543" Y="4518.08447" Z="256.251343" Radius="4.6" />
    <Blackspot X="2352.68359" Y="4517.76074" Z="259.414246" Radius="4.6" />
    <Blackspot X="2351.39258" Y="4517.088" Z="259.9789" Radius="4.6" />
    <Blackspot X="2349.03638" Y="4515.486" Z="256.009125" Radius="4.6" />
    <Blackspot X="2344.653" Y="4517.745" Z="256.380981" Radius="4.6" />
    <Blackspot X="2342.30249" Y="4517.477" Z="256.582916" Radius="4.6" />
    <Blackspot X="2340.84888" Y="4516.335" Z="256.103363" Radius="4.6" />
    <Blackspot X="2340.5022" Y="4516.001" Z="256.1711" Radius="4.6" />
    <Blackspot X="2339.33179" Y="4514.89746" Z="256.550079" Radius="4.6" />
    <Blackspot X="2338.095" Y="4513.797" Z="256.961975" Radius="4.6" />
    <Blackspot X="2336.94" Y="4512.79248" Z="257.350525" Radius="4.6" />
    <Blackspot X="2335.626" Y="4511.5083" Z="257.769958" Radius="4.6" />
    <Blackspot X="2334.19629" Y="4510.015" Z="258.2107" Radius="4.6" />
    <Blackspot X="2333.29761" Y="4508.942" Z="258.6263" Radius="4.6" />
    <Blackspot X="2333.258" Y="4508.32129" Z="258.79007" Radius="4.6" />
    <Blackspot X="2333.10522" Y="4506.615" Z="259.261261" Radius="4.6" />
    <Blackspot X="2333.0376" Y="4504.545" Z="259.778168" Radius="4.6" />
    <Blackspot X="2332.79785" Y="4501.687" Z="260.560669" Radius="4.6" />
    <Blackspot X="2332.79443" Y="4499.784" Z="260.904541" Radius="4.6" />
    <Blackspot X="2333.21436" Y="4498.69434" Z="260.932129" Radius="4.6" />
    <Blackspot X="2334.12769" Y="4496.40869" Z="260.963379" Radius="4.6" />
    <Blackspot X="2334.70435" Y="4494.63574" Z="261.0628" Radius="4.6" />
    <Blackspot X="2338.21362" Y="4496.459" Z="258.643677" Radius="4.6" />
    <Blackspot X="2340.31836" Y="4495.09668" Z="258.642944" Radius="4.6" />
    <Blackspot X="2340.88477" Y="4494.23975" Z="258.66745" Radius="4.6" />
    <Blackspot X="2344.00537" Y="4488.448" Z="259.610382" Radius="4.6" />
    <Blackspot X="2528.966" Y="4533.24658" Z="200.603348" Radius="10" />
  </Blackspots>
  <BlackGuids />
  <EasyQuests>
    <EasyQuest>
      <Name>+FlightMastersWhistle</Name>
      <QuestId />
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>//FLIGHT MASTERS WHISTLE START
public sealed class FlightMastersWhistle : wManager.Wow.Class.QuestClass
{
	uint whistleId = 141605;

	public FlightMastersWhistle()
	{
		Name = "+FlightMastersWhistle";
		QuestId.AddRange(new[] { 0 });
		Step = new System.Collections.Generic.List&lt;int&gt; { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
		StepAutoDetect = new[] { false, false, false, false, false, false, false, false, false, false };
		PickUpQuestOnItem = false;
		PickUpQuestOnItemID = 0;
		GossipOptionItem = 1;
		WoWClass = wManager.Wow.Enums.WoWClass.None;
		MinLevel = 0;
		MaxLevel = 999;
		RequiredQuest = 0;
	}

	public override bool CanConditions()
	{
		return WorldQuest.Whistle.Can();
	}

	public override bool IsComplete()
	{
		return !WorldQuest.Whistle.Can();
	}

	public override bool IsCompleted()
	{
		return IsComplete();
	}

	public override bool HasQuest()
	{
		return CanConditions();
	}

	public override bool Pulse()
	{
		WorldQuest.Whistle.Use();
		return true;
	}

}
//FLIGHT MASTERS WHISTLE END</Code>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>		var timeLeft = wManager.Wow.Helpers.Lua.LuaDoString&lt;double&gt;("local startTime, duration, enable = GetItemCooldown(" + 141605 + "); return startTime + duration - GetTime();");
		return !ObjectManager.Me.IsIndoors &amp;&amp; timeLeft &lt;= 0;</CanCondition>
      <IsCompleteCondition>		var timeLeft = wManager.Wow.Helpers.Lua.LuaDoString&lt;double&gt;("local startTime, duration, enable = GetItemCooldown(" + 141605 + "); return startTime + duration - GetTime();");
		return ObjectManager.Me.IsIndoors || timeLeft &gt; 0;</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>+Travel To Suramar</Name>
      <QuestId />
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.Travel.ToZone(WorldQuest.MapId.Suramar);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Air Superiority</Name>
      <QuestId>
        <int>43445</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var questId = 43445;
		var startPosition = new Vector3(2637.728, 5136.227, 145.8077, "None");
		var npcId = 110565;
		var victims = new List&lt;int&gt;() {
			114299, //Imperial Spellbreaker
			114300, //Imperial Arcanist
			114303, //Spell Seeker Construct
			114301, //Nightborne Invader
			114304, //Nightborne Infiltrator
			114305, //Nightborne Siegecaster
			114298, //Nightborne Kill Credit
		};
		var attackSpellId = 203148;
		var maxDistance = 120;

		if (!ObjectManager.Me.PlayerUsingVehicle)
		{
			GoToTask.ToPositionAndIntecractWithNpc(startPosition, npcId);
			return true;
		}

		var mobEntry = ObjectManager.GetNearestWoWUnit(ObjectManager.GetWoWUnitByEntry(victims));
		if (mobEntry != null &amp;&amp; mobEntry.IsAlive &amp;&amp; mobEntry.IsAttackable &amp;&amp; mobEntry.IsValid)
		{
			if (mobEntry.Position.DistanceTo(ObjectManager.Me.Position) &lt; maxDistance)
			{
				wManager.Wow.Helpers.Lua.RunMacroText("/click OverrideActionBarButton1");
				Thread.Sleep(Usefuls.Latency);
				wManager.Wow.Helpers.ClickOnTerrain.Pulse(mobEntry.Position);
				wManager.Wow.Helpers.Usefuls.WaitIsCasting();
				Thread.Sleep(2 * 2000);
				return true;
			}
		}
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(43445);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(43445);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Air Superiority (Eject Vehicle)</Name>
      <QuestId />
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		if (!ObjectManager.Me.PlayerUsingVehicle)
		{
			wManager.Wow.Helpers.Lua.RunMacroText("/click OverrideActionBarButton2");
			Thread.Sleep(10 * 1000);
		}
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return ObjectManager.Me.PlayerUsingVehicle;</CanCondition>
      <IsCompleteCondition>return !ObjectManager.Me.PlayerUsingVehicle;</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Ancient Guidance</Name>
      <QuestId>
        <int>44802</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var portPosition = new Vector3(2638.773, 4600.535, 258.6463, "None");
		var portId = 116373;

		var npcId = 103055;
		var npcPosition = new Vector3(2771.767, 4364, 418.814, "None");

		var victims = new List&lt;int&gt;() {
			115880, //Qui'mar &lt;Firesoul&gt;
			115881, //Vis'ileth &lt;Manasoul&gt;
			115882, //Al'anath &lt;Frostsoul&gt;
		};

		if (ObjectManager.Me.Position.DistanceTo(npcPosition) &gt; 100)
		{
			GoToTask.ToPositionAndIntecractWithNpc(portPosition, portId);
			return true;
		}

		var npcEntry = ObjectManager.GetNearestWoWUnit(ObjectManager.GetWoWUnitByEntry(npcId));
		if (npcEntry != null &amp;&amp; npcEntry.IsValid &amp;&amp; npcEntry.IsAlive &amp;&amp; npcEntry.Position.Z &lt; npcPosition.Z + 5)
		{
			GoToTask.ToPositionAndIntecractWithNpc(npcPosition, npcId, 1);
		}

		MountTask.DismountMount();
		WorldQuest.TryKill(npcPosition, victims);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(this);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(this);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Not There, Not Then, Not Forever</Name>
      <QuestId>
        <int>44857</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="2655.831" Y="5484.295" Z="163.5006" />
          <Vector3 X="2571.06" Y="5495.501" Z="153.9891" />
          <Vector3 X="2675.175" Y="5535.202" Z="187.1514" />
          <Vector3 X="2661.316" Y="5634.756" Z="194.8913" />
          <Vector3 X="2678.387" Y="5591.785" Z="195.2405" />
          <Vector3 X="2620.475" Y="5648.844" Z="187.3795" />
          <Vector3 X="2588.045" Y="5623.458" Z="177.928" />
          <Vector3 X="2615.155" Y="5715.473" Z="182.7827" />
          <Vector3 X="2586.758" Y="5754.531" Z="169.1823" />
          <Vector3 X="2550.987" Y="5711.598" Z="160.1106" />
          <Vector3 X="2542.39" Y="5539.174" Z="159.7272" />
        </HotSpots>
        <EntryTarget>
          <int>106764</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>10</ObjectiveCount1>
      <ObjectiveCount2>7</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(this);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(this);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Angler Mangler (Fishing)</Name>
      <QuestId>
        <int>41283</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="2860.888" Y="5222.514" Z="142.5118" Type="Swimming" />
          <Vector3 X="2883.531" Y="5217.395" Z="142.6598" Type="Swimming" />
          <Vector3 X="2836.06" Y="5223.608" Z="142.646" Type="Swimming" />
        </HotSpots>
        <EntryTarget>
          <int>104331</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.CanFishing(41283);</CanCondition>
      <IsCompleteCondition>return WorldQuest.CompleteFishing(41283);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Battle Rages On</Name>
      <QuestId>
        <int>43435</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="2743.185" Y="5113.137" Z="174.4485" />
          <Vector3 X="2767.575" Y="5117.679" Z="174.6865" />
          <Vector3 X="2773.965" Y="5094.219" Z="174.6809" />
          <Vector3 X="2764.24" Y="5096.644" Z="174.6438" />
          <Vector3 X="2806.654" Y="5103.984" Z="174.452" />
          <Vector3 X="2803.399" Y="5138.752" Z="174.5491" />
          <Vector3 X="2770.694" Y="5164.968" Z="174.9837" />
          <Vector3 X="2736.541" Y="5162.45" Z="174.1974" />
          <Vector3 X="2743.938" Y="5072.288" Z="174.6443" />
          <Vector3 X="2755.24" Y="4975.846" Z="198.8137" />
          <Vector3 X="2807.819" Y="4943.521" Z="198.7313" />
          <Vector3 X="2767.65" Y="4937.29" Z="198.6789" />
        </HotSpots>
        <EntryTarget>
          <int>101784</int>
          <int>101783</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(43435);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(43435);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Magic of Flight</Name>
      <QuestId>
        <int>43777</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>public sealed class TheMagicofFlight : QuestClass
{
	static int _questId = 43777;
	static uint _bubbleBuffId = 228185;
	static int _flightBubbleId = 110657;
	static int _arcaneArtifactId = 110664;
	static Vector3 _startPosition = new Vector3(2571.907, 4515.744, 234.3352);
	static Vector3 _startFlightPosition = new Vector3(2544.909, 4529.673, 231.8074);
	static Vector3 _underBridgeCenter = new Vector3(2576.495, 4511.933, 202.0948, "None");
	static List&lt;Vector3&gt; pathFromBridge = new List&lt;Vector3&gt;() {
			new Vector3(2536.274f, 4550.407f, 203.4669f, "None"),
			new Vector3(2535.565f, 4553.547f, 201.7341f, "None"),
			new Vector3(2534.047f, 4560.269f, 200.3249f, "None"),
			new Vector3(2532.309f, 4567.969f, 194.3217f, "None"),
			new Vector3(2530.7f, 4575.096f, 183.8088f, "None"),
			new Vector3(2529.065f, 4582.337f, 168.2459f, "None"),
			new Vector3(2527.67f, 4588.517f, 151.0724f, "Swimming"),
		};

	void Test()
	{
		GoToTask.ToPosition(new Vector3(2544.909, 4529.673, 231.8074));
	}

	public TheMagicofFlight()
	{
		Name = "The Magic of Flight";
		QuestId.Add(_questId);
		Step.AddRange(new[] { 0, 0, 0, 0, 0 });
	}

	public bool IsOnQuest()
	{
		foreach (var questId in QuestId)
		{
			if (questId &gt; 0 &amp;&amp; WorldQuest.Can(questId))
			{
				return true;
			}
		}
		return false;
	}
	public override bool IsComplete()
	{
		if (!IsOnQuest())
		{
			return true;
		}
		return false;
	}
	public override bool CanConditions()
	{
		return !IsComplete();
	}
	public override bool IsCompleted()
	{
		return false;
	}
	public override bool HasQuest()
	{
		return true;
	}
	public override bool Pulse()
	{
		if (!Quest.HasQuest(_questId))
		{
			//Logging.Write("$Goto quest");
			GoToTask.ToPosition(_startPosition);
			return true;
		}
		/*while (FlightBubble() != null)
		while (ObjectManager.Me.HaveBuff(_bubbleBuffId) || FlightBubble() != null)
		{
			MoveInBubble();
		}
		//*/
		if (StartBubble() == null &amp;&amp; FlightBubble() == null)
		{
			if (IsUnderBridge)
			{
				//Logging.Write("$Under BRIDGE. Move out of here");
				PulseFromBridge();
			}
			else
			{
				//Logging.Write("$Goto start flight position and use ground mount");
				GoToTask.ToPosition(_startFlightPosition);
				Thread.Sleep(Usefuls.Latency * 3);
				//MountTask.DismountMount();
				MountTask.Mount(true, MountTask.MountCapacity.Ground);
			}
		}
		if (StartBubble() != null &amp;&amp; FlightBubble() == null)
		{
			StartMove();
		}
		//*
		while (FlightBubble() != null &amp;&amp; IsOnQuest() &amp;&amp; Conditions.InGameAndConnectedAndAliveAndProductStartedNotInPause)
		{
			MoveInBubble();
		}
		//*/
		return true;
	}

	WoWUnit FlightBubble()
	{
		return ObjectManager.GetObjectWoWUnit()
		.Where(u =&gt; u.IsValid &amp;&amp; u.Entry == _flightBubbleId &amp;&amp; u.GetMove &amp;&amp; u.GetDistance &lt; 10)
		.OrderBy(u =&gt; u.GetDistance2D)
		.FirstOrDefault();
	}

	WoWUnit StartBubble()
	{
		return ObjectManager.GetObjectWoWUnit()
		.Where(u =&gt; u.IsValid &amp;&amp; u.Entry == _flightBubbleId &amp;&amp; !u.GetMove &amp;&amp; u.GetDistanceZ &lt; 230f)
		.OrderBy(u =&gt; u.GetDistance2D)
		.FirstOrDefault();
	}

	WoWUnit ArcaneArtifact()
	{
		return ObjectManager.GetObjectWoWUnit()
		.Where(u =&gt; u.IsValid &amp;&amp; u.Entry == _arcaneArtifactId &amp;&amp; u.GetDistance &lt; 4.4f)
		.OrderBy(u =&gt; u.GetDistance2D)
		.FirstOrDefault();
	}

	void MoveInBubble()
	{
		var bubble = FlightBubble();
		var artifact = ArcaneArtifact();

		if (artifact != null)
		{
			//Logging.Write("#Interacting with artefact");
			Interact.InteractGameObject(artifact.GetBaseAddress);
			Usefuls.WaitIsCastingAndLooting();
			return;
		}
		if (bubble == null)
		{
			//Logging.Write("#Waiting for a bubble");
			Thread.Sleep(Others.Random(1000, 3000));
			return;
		}

		//Logging.Write("#Moving in bubble");
		MovementManager.MoveTo(bubble.Position);
	}

	void StartMove()
	{
		var bubble = StartBubble();
		if (bubble == null)
		{
			//Logging.Write("@Waiting for start bubble");
			return;
		}
		MovementManager.Face(bubble);
		Thread.Sleep(Others.Random(3000, 4000));
		//Logging.Write("@Moving to bubble");
		Move.Forward(Move.MoveAction.PressKey, 1000);
		Thread.Sleep(Others.Random(500, 1000));
		//GoToTask.ToPosition(bubble.Position);
	}


	public static bool IsUnderBridge
	{
		get
		{
			var pos = ObjectManager.Me.Position;
			return pos.DistanceTo(_underBridgeCenter) &lt; 50 &amp;&amp; pos.Z &lt; _startFlightPosition.Z;
		}
	}

	public static bool PulseFromBridge()
	{
		WorldQuest.MovePath(pathFromBridge);
		return true;
	}

}</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(43777);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(43777);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Magic of Flight (Get Under Bridge)</Name>
      <QuestId>
        <int>43777</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>TheMagicofFlight.PulseFromBridge();
return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return TheMagicofFlight.IsUnderBridge;</CanCondition>
      <IsCompleteCondition>return !TheMagicofFlight.IsUnderBridge;</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>WANTED: Siegemaster Aedrin</Name>
      <QuestId>
        <int>44023</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(2605.245, 4547.22, 234.3328, "None");
		var mobs = new List&lt;int&gt;() { 110438 };
		WorldQuest.TryKillElite(campPosition, mobs);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.CanGroup(44023);</CanCondition>
      <IsCompleteCondition>return WorldQuest.CompleteGroup(44023);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>WANTED: Siegemaster Aedrin 2</Name>
      <QuestId>
        <int>44012</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(2605.245, 4547.22, 234.3328, "None");
		var mobs = new List&lt;int&gt;() { 110438 };
		WorldQuest.TryKillElite(campPosition, mobs);
		return true;
</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.CanGroup(44012);</CanCondition>
      <IsCompleteCondition>return WorldQuest.CompleteGroup(44012);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
  </EasyQuests>
  <Script>camelot10\Libs\WorldQuest.cs</Script>
  <OffMeshConnections />
</EasyQuestProfile>