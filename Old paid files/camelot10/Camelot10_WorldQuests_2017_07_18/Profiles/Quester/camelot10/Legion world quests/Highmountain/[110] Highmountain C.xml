<?xml version="1.0" encoding="utf-16"?>
<EasyQuestProfile xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <QuestsSorted>
    <QuestsSorted Action="RunCode" NameClass="// Map ID = Highmountain  //  &#xD;&#xA;robotManager.Helpful.Var.SetVar(&quot;WorldQuestCurrentMapId&quot;, 1024);" />
    <QuestsSorted Action="WriteLog" NameClass="Highmountain W-NE-N-NW-SW-(C)-S-E-SE profile start" />
    <QuestsSorted Action="Pulse" NameClass="TravelToHighmountain" />
    <QuestsSorted Action="None" NameClass=" === CENTER === " />
    <QuestsSorted Action="Pulse" NameClass="AssaultonThunderTotem" />
    <QuestsSorted Action="Pulse" NameClass="ThunderTotemCleanupDetail" />
    <QuestsSorted Action="Pulse" NameClass="LivelyHighmountainSalmonFishing" />
    <QuestsSorted Action="Pulse" NameClass="FromtheSkiesTheyFel3Invasion" />
    <QuestsSorted Action="Pulse" NameClass="FromtheSkiesTheyFel2Invasion" />
    <QuestsSorted Action="Pulse" NameClass="FromtheSkiesTheyFel1Invasion" />
    <QuestsSorted Action="Pulse" NameClass="UlgromInvasionGroup" />
    <QuestsSorted Action="Pulse" NameClass="FuryRoad" />
    <QuestsSorted Action="RunCode" NameClass="WorldQuest.SetDefaultSettings();" />
    <QuestsSorted Action="Pulse" NameClass="WANTEDSekhan" />
    <QuestsSorted Action="Pulse" NameClass="WANTEDSekhan2" />
    <QuestsSorted Action="Pulse" NameClass="TheMagicofFlightHighmountain" />
    <QuestsSorted Action="Pulse" NameClass="CriticalCrops1" />
    <QuestsSorted Action="Pulse" NameClass="CriticalCrops2" />
    <QuestsSorted Action="Pulse" NameClass="BearsBehavingBadly" />
    <QuestsSorted Action="Pulse" NameClass="BoilbackPlague" />
    <QuestsSorted Action="Pulse" NameClass="FoxflowerClusterHerbalism" />
    <QuestsSorted Action="Pulse" NameClass="CommanderZarthakInvasionGroup" />
    <QuestsSorted Action="Pulse" NameClass="BalinarInvasionGroup" />
    <QuestsSorted Action="Pulse" NameClass="LeyRace" />
    <QuestsSorted Action="Pulse" NameClass="FelwortHerbalism" />
    <QuestsSorted Action="Pulse" NameClass="SlabofBacon2Cooking" />
    <QuestsSorted Action="Pulse" NameClass="BrimstoneDestroyerMining" />
    <QuestsSorted Action="Pulse" NameClass="PrimalPayback1" />
    <QuestsSorted Action="Pulse" NameClass="PrimalPayback2" />
    <QuestsSorted Action="Pulse" NameClass="PrimalPaybackBear" />
    <QuestsSorted Action="Pulse" NameClass="PrimalPaybackMoose" />
    <QuestsSorted Action="RunCode" NameClass="WorldQuest.SetDefaultSettings();" />
    <QuestsSorted Action="RunCode" NameClass="/* ENABLE SKINNING*/ wManager.wManagerSetting.CurrentSetting.SkinNinja = true; wManager.wManagerSetting.CurrentSetting.SkinMobs = true;" />
    <QuestsSorted Action="Pulse" NameClass="ThickIronhornHideSkinning" />
    <QuestsSorted Action="RunCode" NameClass="WorldQuest.SetDefaultSettings();" />
    <QuestsSorted Action="Pulse" NameClass="IxdrelothInvasionGroup" />
    <QuestsSorted Action="Pulse" NameClass="WANTEDBristlemaul" />
    <QuestsSorted Action="Pulse" NameClass="WANTEDBristlemaul2" />
    <QuestsSorted Action="Pulse" NameClass="GofromBristlemaulCave" />
    <QuestsSorted Action="Pulse" NameClass="FelhideSkinning" />
    <QuestsSorted Action="Pulse" NameClass="BitestoneBurglary1" />
    <QuestsSorted Action="Pulse" NameClass="BitestoneBurglary2" />
    <QuestsSorted Action="Pulse" NameClass="BitestoneEnclaveMoveOutside" />
    <QuestsSorted Action="Pulse" NameClass="WaterofLife3" />
    <QuestsSorted Action="Pulse" NameClass="WaterofLife1" />
    <QuestsSorted Action="Pulse" NameClass="WaterofLife2" />
    <QuestsSorted Action="Pulse" NameClass="WaterofLifeMoveoutside" />
    <QuestsSorted Action="Pulse" NameClass="ReturntotheRiver" />
    <QuestsSorted Action="Pulse" NameClass="DANGERDurguth" />
    <QuestsSorted Action="Pulse" NameClass="SlabofBaconCooking" />
    <QuestsSorted Action="Pulse" NameClass="WANTEDSlumber" />
    <QuestsSorted Action="Pulse" NameClass="WANTEDSlumber2" />
    <QuestsSorted Action="Pulse" NameClass="ReturntotheCrag2" />
    <QuestsSorted Action="Pulse" NameClass="ReturntotheCrag1" />
    <QuestsSorted Action="Pulse" NameClass="ReturntotheCrag3" />
    <QuestsSorted Action="Pulse" NameClass="SeaofFeathers2" />
    <QuestsSorted Action="Pulse" NameClass="SeaofFeathers1" />
    <QuestsSorted Action="Pulse" NameClass="RitualistsinOurMidsts1" />
    <QuestsSorted Action="Pulse" NameClass="RitualistsinOurMidsts2" />
    <QuestsSorted Action="Pulse" NameClass="RitualistsinOurMidsts3" />
    <QuestsSorted Action="Pulse" NameClass="GofromCrystalFissure" />
    <QuestsSorted Action="Pulse" NameClass="OrgrokkInvasionGroup" />
    <QuestsSorted Action="Pulse" NameClass="FelhideNorthSkinning" />
    <QuestsSorted Action="Pulse" NameClass="UnstablePortal1" />
    <QuestsSorted Action="Pulse" NameClass="UnstablePortal2" />
    <QuestsSorted Action="Pulse" NameClass="WANTEDMajesticElderhorn" />
    <QuestsSorted Action="Pulse" NameClass="WANTEDMajesticElderhorn2" />
    <QuestsSorted Action="Pulse" NameClass="WANTEDSharaFelbreath" />
    <QuestsSorted Action="Pulse" NameClass="WANTEDSharaFelbreath2" />
    <QuestsSorted Action="Pulse" NameClass="WANTEDDevouringDarkness" />
    <QuestsSorted Action="Pulse" NameClass="WANTEDDevouringDarkness2" />
    <QuestsSorted Action="Pulse" NameClass="GofromCandleRockCave" />
    <QuestsSorted Action="Pulse" NameClass="CrawliacsLegacy3" />
    <QuestsSorted Action="Pulse" NameClass="CrawliacsLegacy2" />
    <QuestsSorted Action="Pulse" NameClass="CrawliacsLegacy1" />
    <QuestsSorted Action="Pulse" NameClass="WANTEDCrawshuktheHungry" />
    <QuestsSorted Action="Pulse" NameClass="WANTEDCrawshuktheHungry2" />
    <QuestsSorted Action="Pulse" NameClass="FlightMastersWhistle" />
    <QuestsSorted Action="None" NameClass=" === S === " />
    <QuestsSorted Action="WriteLog" NameClass="Highmountain W-NE-N-NW-SW-(C)-S-E-SE profile complete. Loading next profile." />
    <QuestsSorted Action="LoadProfile" NameClass="camelot10\Legion world quests\Highmountain\[110] Highmountain S.xml" />
  </QuestsSorted>
  <NpcQuest>
    <NPCQuest Id="106902" Name="Ранза Серое Перо" GameObject="false">
      <PickUpQuests />
      <TurnInQuests>
        <int>42233</int>
      </TurnInQuests>
      <Position X="4112.049" Y="4445.559" Z="768.3419" Type="Flying" />
    </NPCQuest>
  </NpcQuest>
  <Npc />
  <Blackspots>
    <Blackspot X="5613.4" Y="3585.03" Z="236.862839" Radius="50" />
    <Blackspot X="4546.696" Y="3889.54028" Z="749.4648" Radius="35" />
    <Blackspot X="4325.32373" Y="3813.26367" Z="866.516" Radius="45" />
    <Blackspot X="4413.438" Y="3924.48267" Z="739.789368" Radius="8" />
    <Blackspot X="4429.10938" Y="3919.45239" Z="740.669861" Radius="8" />
    <Blackspot X="4448.16" Y="3912.53931" Z="742.572449" Radius="8" />
    <Blackspot X="4461.515" Y="3913.595" Z="742.545532" Radius="8" />
    <Blackspot X="4472.42969" Y="3919.50317" Z="742.7639" Radius="8" />
    <Blackspot X="4483.38428" Y="3928.41455" Z="743.4006" Radius="8" />
  </Blackspots>
  <BlackGuids />
  <EasyQuests>
    <EasyQuest>
      <Name>+FlightMastersWhistle</Name>
      <QuestId />
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>//FLIGHT MASTERS WHISTLE START
public sealed class FlightMastersWhistle : wManager.Wow.Class.QuestClass
{
	uint whistleId = 141605;

	public FlightMastersWhistle()
	{
		Name = "+FlightMastersWhistle";
		QuestId.AddRange(new[] { 0 });
		Step = new System.Collections.Generic.List&lt;int&gt; { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
		StepAutoDetect = new[] { false, false, false, false, false, false, false, false, false, false };
		PickUpQuestOnItem = false;
		PickUpQuestOnItemID = 0;
		GossipOptionItem = 1;
		WoWClass = wManager.Wow.Enums.WoWClass.None;
		MinLevel = 0;
		MaxLevel = 999;
		RequiredQuest = 0;
	}

	public override bool CanConditions()
	{
		return WorldQuest.Whistle.Can();
	}

	public override bool IsComplete()
	{
		return !WorldQuest.Whistle.Can();
	}

	public override bool IsCompleted()
	{
		return IsComplete();
	}

	public override bool HasQuest()
	{
		return CanConditions();
	}

	public override bool Pulse()
	{
		WorldQuest.Whistle.Use();
		return true;
	}

}
//FLIGHT MASTERS WHISTLE END</Code>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>		var timeLeft = wManager.Wow.Helpers.Lua.LuaDoString&lt;double&gt;("local startTime, duration, enable = GetItemCooldown(" + 141605 + "); return startTime + duration - GetTime();");
		return !ObjectManager.Me.IsIndoors &amp;&amp; timeLeft &lt;= 0;</CanCondition>
      <IsCompleteCondition>		var timeLeft = wManager.Wow.Helpers.Lua.LuaDoString&lt;double&gt;("local startTime, duration, enable = GetItemCooldown(" + 141605 + "); return startTime + duration - GetTime();");
		return ObjectManager.Me.IsIndoors || timeLeft &gt; 0;</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>+Travel To Highmountain</Name>
      <QuestId />
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.Travel.ToZone(WorldQuest.MapId.Highmountain);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Assault on Thunder Totem</Name>
      <QuestId>
        <int>41705</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="4098.75" Y="4325.49" Z="768.2136" />
          <Vector3 X="4111.583" Y="4303.583" Z="768.0649" />
          <Vector3 X="4150.984" Y="4377.975" Z="768.0549" />
          <Vector3 X="4113.5" Y="4404.26" Z="768.3662" />
        </HotSpots>
        <EntryTarget>
          <int>104615</int>
          <int>111184</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(41705);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(41705);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Balinar (Invasion Group)</Name>
      <QuestId>
        <int>46191</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(3628.116, 5177.448, 640.4178, "None");
		var mobs = new List&lt;int&gt;() {
			117066, // http://www.wowhead.com/npc=117066/balinar-the-culler
		};
		WorldQuest.TryKillElite(campPosition, mobs);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.CompleteInvasionGroup(this);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Bears Behaving Badly</Name>
      <QuestId>
        <int>40978</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="4918.921" Y="5028.197" Z="782.5269" />
          <Vector3 X="4886.484" Y="5061.785" Z="777.0053" />
          <Vector3 X="4919.336" Y="5081.807" Z="781.6668" />
          <Vector3 X="4949.712" Y="5054.58" Z="785.5406" />
          <Vector3 X="4983.518" Y="5038.508" Z="788.1023" />
        </HotSpots>
        <EntryIdObjects>
          <int>246685</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>10</ObjectiveCount1>
      <ObjectiveCount2>13</ObjectiveCount2>
      <ObjectiveCount3>10</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(40978);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(40978);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Bitestone Burglary 1</Name>
      <QuestId>
        <int>40925</int>
      </QuestId>
      <QuestType>InteractWithNpc</QuestType>
      <QuestClass xsi:type="InteractWithNpcEasyQuestClass">
        <HotSpots>
          <Vector3 X="3537.369" Y="4710.299" Z="706.7689" />
        </HotSpots>
        <GossipOptionNpcInteractWith>1</GossipOptionNpcInteractWith>
        <Macro />
        <IgnoreIfDead>false</IgnoreIfDead>
        <EntryIdTarget>
          <int>102366</int>
        </EntryIdTarget>
        <Range>4.5</Range>
      </QuestClass>
      <ObjectiveCount1>10</ObjectiveCount1>
      <ObjectiveCount2>20</ObjectiveCount2>
      <ObjectiveCount3>10</ObjectiveCount3>
      <ObjectiveCount4>7</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(40925);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(40925, 1);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Bitestone Burglary 2</Name>
      <QuestId>
        <int>40925</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="3374.266" Y="4488.327" Z="705.4899" />
          <Vector3 X="3369.25" Y="4508.617" Z="704.7571" />
          <Vector3 X="3406.193" Y="4441.927" Z="704.8989" />
          <Vector3 X="3373.198" Y="4548.905" Z="704.3768" />
          <Vector3 X="3372.302" Y="4527.416" Z="704.792" />
          <Vector3 X="3398.324" Y="4578.661" Z="704.7164" />
          <Vector3 X="3415.614" Y="4563.066" Z="704.0183" />
        </HotSpots>
        <EntryIdObjects>
          <int>246966</int>
          <int>246967</int>
          <int>246658</int>
          <int>246579</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>10</ObjectiveCount1>
      <ObjectiveCount2>20</ObjectiveCount2>
      <ObjectiveCount3>10</ObjectiveCount3>
      <ObjectiveCount4>7</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(40925);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(40925, 2);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Bitestone Enclave (Move Outside)</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="3493.938" Y="4595.988" Z="682.5074" />
          <Vector3 X="3498.955" Y="4601.968" Z="684.3144" />
          <Vector3 X="3504.321" Y="4607.619" Z="686.4941" />
          <Vector3 X="3509.623" Y="4613.244" Z="689.1348" />
          <Vector3 X="3514.958" Y="4618.903" Z="692.1067" />
          <Vector3 X="3520.248" Y="4624.069" Z="695.4104" />
          <Vector3 X="3527.101" Y="4627.676" Z="698.4104" />
          <Vector3 X="3530.599" Y="4634.095" Z="700.7515" />
          <Vector3 X="3533.493" Y="4641.229" Z="702.5349" />
          <Vector3 X="3536.885" Y="4648.053" Z="703.5623" />
          <Vector3 X="3540.503" Y="4654.919" Z="704.3952" />
          <Vector3 X="3543.964" Y="4661.486" Z="705.1185" />
          <Vector3 X="3547.668" Y="4668.312" Z="705.3387" />
          <Vector3 X="3550.717" Y="4675.48" Z="705.4508" />
          <Vector3 X="3553.165" Y="4682.724" Z="705.7203" />
          <Vector3 X="3554.163" Y="4690.445" Z="705.9379" />
          <Vector3 X="3552.958" Y="4697.856" Z="706.1814" />
          <Vector3 X="3550.177" Y="4704.704" Z="706.5741" />
          <Vector3 X="3543.913" Y="4709.172" Z="706.9685" />
          <Vector3 X="3538.565" Y="4714.595" Z="707.0969" />
          <Vector3 X="3534.353" Y="4721.26" Z="707.283" />
          <Vector3 X="3532.474" Y="4728.663" Z="707.947" />
          <Vector3 X="3533.094" Y="4736.43" Z="708.8097" />
          <Vector3 X="3535.588" Y="4743.447" Z="710.1856" />
          <Vector3 X="3538.393" Y="4750.386" Z="712.5355" />
          <Vector3 X="3541.975" Y="4757.624" Z="713.9051" />
          <Vector3 X="3546.073" Y="4764.054" Z="714.1887" />
          <Vector3 X="3551.032" Y="4770.864" Z="714.0058" />
          <Vector3 X="3555.07" Y="4776.4" Z="712.5122" />
          <Vector3 X="3557.294" Y="4779.467" Z="711.7429" />
        </Path>
        <IsCompleteWhenAtLastPath>false</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>false</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return ObjectManager.Me.IsIndoors &amp;&amp; ObjectManager.Me.Position.DistanceTo(new Vector3(3460.721, 4509.168, 679.8773, "None")) &lt; 350;</CanCondition>
      <IsCompleteCondition>return !ObjectManager.Me.IsIndoors || ObjectManager.Me.Position.DistanceTo(new Vector3(3460.721, 4509.168, 679.8773, "None")) &gt; 350;</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Boilback Plague</Name>
      <QuestId>
        <int>40980</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="5044.046" Y="5029.212" Z="787.4358" />
          <Vector3 X="5032.584" Y="5053.276" Z="790.7043" />
          <Vector3 X="5008.697" Y="5022.11" Z="789.5864" />
          <Vector3 X="4987.073" Y="5028.861" Z="790.1517" />
          <Vector3 X="4910.935" Y="5023.941" Z="783.087" />
          <Vector3 X="4949.002" Y="5045.52" Z="785.2683" />
          <Vector3 X="4894.56" Y="5072.096" Z="778.3639" />
          <Vector3 X="4926.631" Y="5084.657" Z="782.3118" />
        </HotSpots>
        <EntryTarget>
          <int>102361</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(40980);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(40980);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Brimstone Destroyer (Mining)</Name>
      <QuestId>
        <int>41209</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(4385.371, 4507.125, 688.6159, "None");
		var corpseId = 247956;
		var mobId = 93237;

		if (ObjectManager.Me.Position.DistanceTo(campPosition) &gt; 100)
		{
			GoToTask.ToPosition(campPosition);
			return true;
		}

		var corpseEntry = ObjectManager.GetNearestWoWGameObject(ObjectManager.GetWoWGameObjectByEntry(corpseId));
		if (corpseEntry != null &amp;&amp; corpseEntry.IsValid)
		{
			GoToTask.ToPositionAndIntecractWithGameObject(corpseEntry.Position, corpseEntry.Entry);
			Thread.Sleep(3 * 1000);
			return true;
		}

		var mobEntry = ObjectManager.GetNearestWoWUnit(ObjectManager.GetWoWUnitByEntry(mobId));
		if (mobEntry != null &amp;&amp; mobEntry.IsValid &amp;&amp; mobEntry.IsAlive &amp;&amp; mobEntry.IsAttackable)
		{
			Interact.InteractGameObject(mobEntry.GetBaseAddress);
			Fight.StartFight(mobEntry.Guid);
			return true;
		}
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.CompleteMining(41209);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Commander Zarthak (Invasion Group)</Name>
      <QuestId>
        <int>46183</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(3885.392, 5152.024, 645.377, "None");
		var mobs = new List&lt;int&gt;() {
			117971, // http://www.wowhead.com/npc=117971/commander-zarthak
		};
		WorldQuest.TryKillElite(campPosition, mobs);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.CompleteInvasionGroup(this);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Crawliac's Legacy 1</Name>
      <QuestId>
        <int>41622</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="4995.463" Y="4086.475" Z="808.4976" />
          <Vector3 X="5033.005" Y="4075.284" Z="792.7599" />
          <Vector3 X="5055.661" Y="4125.496" Z="804.8677" />
          <Vector3 X="5066.314" Y="4141.744" Z="812.3721" />
          <Vector3 X="5101.255" Y="4093.104" Z="798.7769" />
          <Vector3 X="5076.673" Y="4077.047" Z="792.8083" />
        </HotSpots>
        <EntryTarget>
          <int>94983</int>
          <int>94984</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(41622);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(41622, 1);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Crawliac's Legacy 2</Name>
      <QuestId>
        <int>41622</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="4995.463" Y="4086.475" Z="808.4976" />
          <Vector3 X="5033.005" Y="4075.284" Z="792.7599" />
          <Vector3 X="5055.661" Y="4125.496" Z="804.8677" />
          <Vector3 X="5076.541" Y="4142.452" Z="813.0942" />
          <Vector3 X="5101.255" Y="4093.104" Z="798.7769" />
          <Vector3 X="5076.673" Y="4077.047" Z="792.8083" />
        </HotSpots>
        <EntryTarget>
          <int>94986</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(41622);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(41622, 2);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Crawliac's Legacy 3</Name>
      <QuestId>
        <int>41622</int>
      </QuestId>
      <QuestType>InteractWithNpc</QuestType>
      <QuestClass xsi:type="InteractWithNpcEasyQuestClass">
        <HotSpots>
          <Vector3 X="4995.463" Y="4086.475" Z="808.4976" />
          <Vector3 X="5033.005" Y="4075.284" Z="792.7599" />
          <Vector3 X="5055.661" Y="4125.496" Z="804.8677" />
          <Vector3 X="5091.393" Y="4142.809" Z="811.459" />
          <Vector3 X="5101.255" Y="4093.104" Z="798.7769" />
          <Vector3 X="5076.673" Y="4077.047" Z="792.8083" />
        </HotSpots>
        <GossipOptionNpcInteractWith>1</GossipOptionNpcInteractWith>
        <Macro />
        <IgnoreIfDead>false</IgnoreIfDead>
        <EntryIdTarget>
          <int>104531</int>
        </EntryIdTarget>
        <Range>4.5</Range>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(41622);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(41622, 3);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Critical Crops 1</Name>
      <QuestId>
        <int>41095</int>
      </QuestId>
      <QuestType>InteractWithNpc</QuestType>
      <QuestClass xsi:type="InteractWithNpcEasyQuestClass">
        <HotSpots>
          <Vector3 X="4159.979" Y="4624.891" Z="652.9979" />
          <Vector3 X="4233.382" Y="4624.976" Z="652.2772" />
          <Vector3 X="4193.093" Y="4607.873" Z="654.7675" />
        </HotSpots>
        <GossipOptionNpcInteractWith>-1</GossipOptionNpcInteractWith>
        <Macro />
        <IgnoreIfDead>false</IgnoreIfDead>
        <EntryIdTarget>
          <int>102890</int>
          <int>102887</int>
          <int>102882</int>
          <int>102917</int>
        </EntryIdTarget>
        <Range>4.5</Range>
      </QuestClass>
      <ObjectiveCount1>10</ObjectiveCount1>
      <ObjectiveCount2>3</ObjectiveCount2>
      <ObjectiveCount3>5</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(41095);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(41095, 1);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Critical Crops 2</Name>
      <QuestId>
        <int>41095</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="4193.479" Y="4643.115" Z="652.5092" />
          <Vector3 X="4182.377" Y="4607.354" Z="654.3491" />
          <Vector3 X="4201.041" Y="4630.208" Z="652.365" />
          <Vector3 X="4215.109" Y="4611.205" Z="654.9206" />
        </HotSpots>
        <EntryTarget>
          <int>94691</int>
          <int>94688</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>10</ObjectiveCount1>
      <ObjectiveCount2>3</ObjectiveCount2>
      <ObjectiveCount3>5</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(41095);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(41095);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>DANGER: Durguth</Name>
      <QuestId>
        <int>41093</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(3473.28, 4538.153, 831.7071, "None");
		var mobs = new List&lt;int&gt;() { 96072 };
		WorldQuest.TryKillRaid(campPosition, mobs);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.CanRaid(41093);</CanCondition>
      <IsCompleteCondition>return WorldQuest.CompleteRaid(41093);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Felhide (North) (Skinning)</Name>
      <QuestId>
        <int>41560</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(5806.513, 4571.967, 681.7751, "None");
		if (ObjectManager.Me.Position.DistanceTo(campPosition) &gt; 100)
		{
			GoToTask.ToPosition(campPosition);
			return true;
		}

		var corpseId = 248041;
		var corpseEntry = ObjectManager.GetNearestWoWGameObject(ObjectManager.GetWoWGameObjectByEntry(corpseId));
		if (corpseEntry != null &amp;&amp; corpseEntry.IsValid)
		{
			GoToTask.ToPositionAndIntecractWithGameObject(corpseEntry.Position, corpseEntry.Entry);
			return true;
		}

		var mobId = 103675;
		var mobEntry = ObjectManager.GetNearestWoWUnit(ObjectManager.GetWoWUnitByEntry(mobId));
		if (mobEntry != null &amp;&amp; mobEntry.IsValid &amp;&amp; mobEntry.IsAlive &amp;&amp; mobEntry.IsAttackable)
		{
			Interact.InteractGameObject(mobEntry.GetBaseAddress);
			Fight.StartFight(mobEntry.Guid);
			return true;
		}
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.CompleteSkinning(41560);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Felhide (Skinning)</Name>
      <QuestId>
        <int>41239</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(5049.536, 4696.926, 976.4151, "None");
		if (ObjectManager.Me.Position.DistanceTo(campPosition) &gt; 100)
		{
			GoToTask.ToPosition(campPosition);
			return true;
		}

		var corpseId = 247422;
		var corpseEntry = ObjectManager.GetNearestWoWGameObject(ObjectManager.GetWoWGameObjectByEntry(corpseId));
		if (corpseEntry != null &amp;&amp; corpseEntry.IsValid)
		{
			GoToTask.ToPositionAndIntecractWithGameObject(corpseEntry.Position, corpseEntry.Entry);
			return true;
		}

		var mobId = 103675;
		var mobEntry = ObjectManager.GetNearestWoWUnit(ObjectManager.GetWoWUnitByEntry(mobId));
		if (mobEntry != null &amp;&amp; mobEntry.IsValid &amp;&amp; mobEntry.IsAlive &amp;&amp; mobEntry.IsAttackable)
		{
			Interact.InteractGameObject(mobEntry.GetBaseAddress);
			Fight.StartFight(mobEntry.Guid);
			return true;
		}
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.CanSkinning(41239);</CanCondition>
      <IsCompleteCondition>return WorldQuest.CompleteSkinning(41239);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Felwort (Herbalism)</Name>
      <QuestId>
        <int>41511</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="4321.178" Y="4764.112" Z="646.0489" />
        </HotSpots>
        <EntryIdObjects>
          <int>247999</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.CompleteHerbalism(41511);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Foxflower Cluster (Herbalism)</Name>
      <QuestId>
        <int>41228</int>
      </QuestId>
      <QuestType>InteractWithNpc</QuestType>
      <QuestClass xsi:type="InteractWithNpcEasyQuestClass">
        <HotSpots>
          <Vector3 X="3845.044" Y="4922.636" Z="640.3101" />
        </HotSpots>
        <GossipOptionNpcInteractWith>1</GossipOptionNpcInteractWith>
        <Macro />
        <IgnoreIfDead>false</IgnoreIfDead>
        <EntryIdTarget>
          <int>103648</int>
        </EntryIdTarget>
        <Range>4.5</Range>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.CanHerbalism(41228);</CanCondition>
      <IsCompleteCondition>return WorldQuest.CompleteHerbalism(41228);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>From the Skies They Fel 1 (Invasion)</Name>
      <QuestId>
        <int>46197</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="3996.622" Y="3989.751" Z="880.2611" />
          <Vector3 X="3991.78" Y="4037.779" Z="882.5343" />
          <Vector3 X="4057.926" Y="3991.869" Z="882.3036" />
          <Vector3 X="4041.486" Y="4018.042" Z="881.9331" />
          <Vector3 X="4111.398" Y="4036.128" Z="880.5609" />
          <Vector3 X="4104.941" Y="4064.341" Z="885.553" />
          <Vector3 X="4173.175" Y="4071.341" Z="881.5753" />
          <Vector3 X="4187.961" Y="4074.573" Z="878.3511" />
        </HotSpots>
        <EntryTarget>
          <int>119489</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>3</ObjectiveCount2>
      <ObjectiveCount3>5</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.CompleteInvasion(this, 1);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>From the Skies They Fel 2 (Invasion)</Name>
      <QuestId>
        <int>46197</int>
      </QuestId>
      <QuestType>InteractWithNpc</QuestType>
      <QuestClass xsi:type="InteractWithNpcEasyQuestClass">
        <HotSpots>
          <Vector3 X="3996.622" Y="3989.751" Z="880.2611" />
          <Vector3 X="3991.78" Y="4037.779" Z="882.5343" />
          <Vector3 X="4056.397" Y="3991.924" Z="882.3267" />
          <Vector3 X="4041.486" Y="4018.042" Z="881.9331" />
          <Vector3 X="4111.398" Y="4036.128" Z="880.5609" />
          <Vector3 X="4104.941" Y="4064.341" Z="885.553" />
          <Vector3 X="4173.175" Y="4071.341" Z="881.5753" />
          <Vector3 X="4187.961" Y="4074.573" Z="878.3511" />
        </HotSpots>
        <GossipOptionNpcInteractWith>1</GossipOptionNpcInteractWith>
        <Macro />
        <IgnoreIfDead>false</IgnoreIfDead>
        <EntryIdTarget>
          <int>119491</int>
        </EntryIdTarget>
        <Range>4.5</Range>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>3</ObjectiveCount2>
      <ObjectiveCount3>5</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.CompleteInvasion(this, 2);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>From the Skies They Fel 3 (Invasion)</Name>
      <QuestId>
        <int>46197</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="4155.675" Y="4095.989" Z="881.4385" />
        </HotSpots>
        <EntryTarget>
          <int>119490</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>3</ObjectiveCount2>
      <ObjectiveCount3>5</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.CompleteInvasion(this, 3);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Fury Road</Name>
      <QuestId>
        <int>41014</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public sealed class FuryRoad : QuestClass
{
	Vector3 _npcPos = new Vector3(4388.214, 4226.452, 733.4879, "None");
	int _npcId = 102689;
	int _rageShard = 102665;
	uint _mountItemId = 133944;
	List&lt;int&gt; _mobs = new List&lt;int&gt;() {
		102743, //elem
		102524, //spider
	};
	List&lt;Vector3&gt; _hotspots = new List&lt;Vector3&gt;()
	{
		new Vector3(4455.332, 4112.133, 754.9517, "None"),
		new Vector3(4463.749, 3996.265, 749.0197, "None"),
		new Vector3(4388.621, 3969.487, 749.426, "None"),
		new Vector3(4451.074, 3895.117, 753.6714, "None"),
	};
	public FuryRoad()
	{
		Name = "Fury Road";
		QuestId.Add(41014);
		Step.AddRange(new[] { 1 });
	}
	void Log(string text)
	{
		Logging.WriteDebug("[" + Name + "] " + text);
	}
	bool TryMount()
	{
		if (ObjectManager.Me.PlayerUsingVehicle)
			return false;

		if (ItemsManager.HasItemById(_mountItemId))
		{
			MountTask.DismountMount();
			Log("mount. use ite");
			ItemsManager.UseItem(_mountItemId);
			Usefuls.WaitIsCasting();
			return true;
		}
		GoToTask.ToPosition(_npcPos);
		MountTask.DismountMount();
		Log("mount. interact npc");
		GoToTask.ToPositionAndIntecractWithNpc(_npcPos, _npcId, 1);
		return true;
	}
	public override bool Pulse()
	{
		if (TryMount())
			return true;

		var target = ObjectManager.Me.TargetObject;
		if (target != null &amp;&amp; target.IsAlive &amp;&amp; target.IsAttackable &amp;&amp; target.IsValid)
		{
			var targetPosition = target.Position;
			var dist = ObjectManager.Me.Position.DistanceTo(targetPosition);
			if (dist &gt; 10)
			{
				GoToTask.ToPosition(targetPosition, 10);
				return true;
			}
			MovementManager.StopMove();
			Thread.Sleep(Usefuls.Latency * 2);
			MovementManager.Face(target);
			Thread.Sleep(Usefuls.Latency * 2);
			//Logging.Write("attack 1");
			Lua.RunMacroText("/click [overridebar][vehicleui][possessbar,@vehicle,exists]OverrideActionBarButton1");
			Thread.Sleep(Usefuls.Latency * 2);
			return true;
		}
		FindTarget();

		var p = _hotspots[Others.Random(0, _hotspots.Count - 1)];
		GoToTask.ToPosition(p, 10, true, (c) =&gt; {
			if (FindTarget())
				return false;

			return true;
		});
		return true;
	}
	bool FindTarget()
	{
		var mob = ObjectManager.GetNearestWoWUnit(ObjectManager.GetWoWUnitByEntry(_mobs));
		if (mob != null &amp;&amp; mob.IsValid &amp;&amp; mob.IsAlive)
		{
			Log("found victim");
			MovementManager.StopMove();
			Interact.InteractGameObject(mob.GetBaseAddress);
			Thread.Sleep(Usefuls.Latency + 150);
			return true;
		}
		return false;
	}
	public override bool IsComplete()
	{
		return WorldQuest.Complete(this);
	}
	public override bool HasQuest()
	{
		return true;
	}
	public override bool IsCompleted()
	{
		return false;
	}
}</Code>
      </QuestClass>
      <ObjectiveCount1>100</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(41014);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(41014);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Go from Bristlemaul Cave</Name>
      <QuestId />
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>public sealed class GofromBristlemaulCave : QuestClass
{
	public GofromBristlemaulCave()
	{
		Name = "Go from Bristlemaul Cave";
		QuestId.AddRange(new[] { 0 });
		Step = new List&lt;int&gt; { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
		StepAutoDetect = new[] { false, false, false, false, false, false, false, false, false, false };
		PickUpQuestOnItem = false;
		PickUpQuestOnItemID = 0;
		GossipOptionItem = 1;
		WoWClass = wManager.Wow.Enums.WoWClass.None;
		MinLevel = 0;
		MaxLevel = 999;
		RequiredQuest = 0;
	}

	public override bool CanConditions()
	{
		var pathStart = path[0];
		var pathEnd = path[path.Count - 2];
		var maxDist = pathStart.DistanceTo(pathEnd);
		var result = ObjectManager.Me.IsIndoors &amp;&amp; ObjectManager.Me.Position.DistanceTo(pathStart) &lt; maxDist;
		return result;
	}

	public override bool IsComplete()
	{
		var pathStart = path[0];
		var pathEnd = path[path.Count - 2];
		var maxDist = pathStart.DistanceTo(pathEnd);
		var result = !ObjectManager.Me.IsIndoors || ObjectManager.Me.Position.DistanceTo(pathStart) &gt; maxDist;
		if (result)
			MovementManager.StopMove();

		return result;
	}

	public override bool IsCompleted()
	{
		return IsComplete();
	}

	public override bool HasQuest()
	{
		return CanConditions();
	}

	public override bool Pulse()
	{
		WorldQuest.MovePath(path);
		return true;
	}

	List&lt;Vector3&gt; path = new List&lt;Vector3&gt;() {
new Vector3(4816.783f, 4992.847f, 772.652f, "None"),
new Vector3(4815.448f, 5000.064f, 773.0466f, "None"),
new Vector3(4814.115f, 5005.003f, 773.6508f, "None"),
new Vector3(4812.783f, 5009.942f, 776.2006f, "None"),
new Vector3(4811.066f, 5014.682f, 778.8673f, "None"),
new Vector3(4809.327f, 5019.417f, 779.5809f, "None"),
new Vector3(4808.313f, 5024.42f, 778.423f, "None"),
new Vector3(4808.334f, 5029.486f, 776.6592f, "None"),
new Vector3(4808.583f, 5034.037f, 775.1682f, "None"),
};


}</Code>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Go from Candle Rock Cave</Name>
      <QuestId />
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>public sealed class GofromCandleRockCave : QuestClass
{
	public GofromCandleRockCave()
	{
		Name = "Go from Candle Rock Cave";
		QuestId.AddRange(new[] { 0 });
		Step = new List&lt;int&gt; { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
		StepAutoDetect = new[] { false, false, false, false, false, false, false, false, false, false };
		PickUpQuestOnItem = false;
		PickUpQuestOnItemID = 0;
		GossipOptionItem = 1;
		WoWClass = wManager.Wow.Enums.WoWClass.None;
		MinLevel = 0;
		MaxLevel = 999;
		RequiredQuest = 0;
	}

	public override bool CanConditions()
	{
		var pathStart = path[0];
		var pathEnd = path[path.Count - 2];
		var maxDist = pathStart.DistanceTo(pathEnd);
		var result = ObjectManager.Me.IsIndoors &amp;&amp; ObjectManager.Me.Position.DistanceTo(pathStart) &lt; maxDist;
		return result;
	}

	public override bool IsComplete()
	{
		var pathStart = path[0];
		var pathEnd = path[path.Count - 2];
		var maxDist = pathStart.DistanceTo(pathEnd);
		var result = !ObjectManager.Me.IsIndoors || ObjectManager.Me.Position.DistanceTo(pathStart) &gt; maxDist;
		if (result)
			MovementManager.StopMove();

		return result;
	}

	public override bool IsCompleted()
	{
		return IsComplete();
	}

	public override bool HasQuest()
	{
		return CanConditions();
	}

	public override bool Pulse()
	{
		WorldQuest.MovePath(path);
		return true;
	}

	List&lt;Vector3&gt; path = new List&lt;Vector3&gt;() {
new Vector3(4975.61f, 3798.251f, 733.3929f, "None"),
new Vector3(4971.219f, 3800.69f, 732.8475f, "None"),
new Vector3(4968.109f, 3802.326f, 732.4863f, "None"),
new Vector3(4961.951f, 3805.649f, 732.7764f, "None"),
new Vector3(4959.531f, 3808.171f, 733.3426f, "None"),
new Vector3(4955.353f, 3813.794f, 733.2537f, "None"),
new Vector3(4953.299f, 3816.628f, 733.3724f, "None"),
new Vector3(4949.25f, 3822.294f, 733.1723f, "None"),
new Vector3(4945.688f, 3828.166f, 733.2136f, "None"),
new Vector3(4941.667f, 3833.959f, 733.2692f, "None"),
new Vector3(4935.817f, 3837.612f, 733.6095f, "None"),
new Vector3(4928.928f, 3837.503f, 734.6689f, "None"),
new Vector3(4925.57f, 3836.521f, 735.3426f, "None"),
new Vector3(4922.134f, 3835.665f, 736.1966f, "None"),
new Vector3(4918.777f, 3834.864f, 737.0627f, "None"),
new Vector3(4915.43f, 3833.829f, 738.0515f, "None"),
new Vector3(4912.151f, 3832.564f, 739.7743f, "None"),
new Vector3(4909.398f, 3830.749f, 741.4313f, "None"),
new Vector3(4907.125f, 3828.122f, 743.0826f, "None"),
new Vector3(4904.798f, 3825.481f, 744.0919f, "None"),
new Vector3(4902.466f, 3822.842f, 745.2136f, "None"),
new Vector3(4897.97f, 3817.56f, 746.8267f, "None"),
new Vector3(4895.739f, 3814.873f, 748.1378f, "None"),
new Vector3(4893.522f, 3812.111f, 749.4644f, "None"),
new Vector3(4891.354f, 3809.411f, 751.1407f, "None"),
new Vector3(4889.184f, 3806.708f, 752.6441f, "None"),
new Vector3(4886.979f, 3803.962f, 753.7838f, "None"),
new Vector3(4884.768f, 3801.188f, 754.6452f, "None"),
new Vector3(4882.817f, 3798.349f, 756.293f, "None"),
new Vector3(4880.835f, 3795.446f, 757.6165f, "None"),
new Vector3(4878.859f, 3792.494f, 758.7498f, "None"),
new Vector3(4876.714f, 3789.758f, 759.2367f, "None"),
new Vector3(4871.657f, 3784.984f, 757.9845f, "None"),
new Vector3(4866.497f, 3782.738f, 758.6375f, "None"),
};


}</Code>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Go from Crystal Fissure</Name>
      <QuestId />
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>public sealed class GofromCrystalFissure : QuestClass
{
	public GofromCrystalFissure()
	{
		Name = "Go from Crystal Fissure";
		QuestId.AddRange(new[] { 0 });
		Step = new List&lt;int&gt; { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
		StepAutoDetect = new[] { false, false, false, false, false, false, false, false, false, false };
		PickUpQuestOnItem = false;
		PickUpQuestOnItemID = 0;
		GossipOptionItem = 1;
		WoWClass = wManager.Wow.Enums.WoWClass.None;
		MinLevel = 0;
		MaxLevel = 999;
		RequiredQuest = 0;
	}

	public override bool CanConditions()
	{
		var pathStart = path[0];
		var pathEnd = path[path.Count - 2];
		var maxDist = pathStart.DistanceTo(pathEnd);
		var result = ObjectManager.Me.IsIndoors &amp;&amp; ObjectManager.Me.Position.DistanceTo(pathStart) &lt; maxDist;
		return result;
	}

	public override bool IsComplete()
	{
		var pathStart = path[0];
		var pathEnd = path[path.Count - 2];
		var maxDist = pathStart.DistanceTo(pathEnd);
		var result = !ObjectManager.Me.IsIndoors || ObjectManager.Me.Position.DistanceTo(pathStart) &gt; maxDist;
		if (result)
			MovementManager.StopMove();

		return result;
	}

	public override bool IsCompleted()
	{
		return IsComplete();
	}

	public override bool HasQuest()
	{
		return CanConditions();
	}

	public override bool Pulse()
	{
		WorldQuest.MovePath(path);
		return true;
	}

	Vector3 centerPosition = new Vector3(4438.718, 3961.032, 714.0961, "None");
	List&lt;Vector3&gt; path = new List&lt;Vector3&gt;() {
new Vector3(4438.484f, 3959.676f, 713.4509f, "None"),
new Vector3(4441.727f, 3962.458f, 714.9365f, "None"),
new Vector3(4447.49f, 3966.382f, 716.4183f, "None"),
new Vector3(4450.407f, 3968.366f, 717.691f, "None"),
new Vector3(4453.296f, 3970.353f, 719.979f, "None"),
new Vector3(4456.324f, 3971.748f, 722.7979f, "None"),
new Vector3(4459.46f, 3973.238f, 725.6797f, "None"),
new Vector3(4462.211f, 3975.495f, 728.2944f, "None"),
new Vector3(4464.637f, 3977.849f, 731.3804f, "None"),
new Vector3(4466.941f, 3980.563f, 734.9625f, "None"),
new Vector3(4468.339f, 3983.757f, 737.2121f, "None"),
new Vector3(4468.624f, 3987.179f, 738.6955f, "None"),
new Vector3(4468.555f, 3990.664f, 740.1704f, "None"),
new Vector3(4468.083f, 3994.099f, 741.5629f, "None"),
new Vector3(4467.039f, 3997.454f, 742.5934f, "None"),
new Vector3(4467.248f, 4004.393f, 743.6794f, "None"),
new Vector3(4468.358f, 4007.776f, 744.6397f, "None"),
new Vector3(4471.625f, 4013.869f, 745.6696f, "None"),
new Vector3(4473.481f, 4016.927f, 745.8361f, "None"),
new Vector3(4475.298f, 4019.918f, 745.8359f, "None"),
new Vector3(4478.883f, 4025.824f, 745.7605f, "None"),
new Vector3(4480.546f, 4028.921f, 745.4481f, "None"),
new Vector3(4484.074f, 4034.795f, 744.7281f, "None"),
new Vector3(4485.578f, 4038.055f, 744.5351f, "None"),
new Vector3(4487.912f, 4044.568f, 744.3201f, "None"),
new Vector3(4488.746f, 4048.017f, 744.223f, "None"),
new Vector3(4489.273f, 4055.002f, 744.3146f, "None"),
new Vector3(4489.518f, 4061.918f, 744.066f, "None"),
new Vector3(4485.471f, 4067.437f, 743.7935f, "None"),
new Vector3(4483.251f, 4070.207f, 743.7236f, "None"),
new Vector3(4481.063f, 4072.938f, 743.6378f, "None"),
new Vector3(4478.843f, 4075.707f, 743.6346f, "None"),
new Vector3(4474.465f, 4081.169f, 743.6231f, "None"),
new Vector3(4470.083f, 4086.636f, 743.7969f, "None"),
new Vector3(4466.208f, 4090.924f, 744.3784f, "None"),
new Vector3(4463.18f, 4095.059f, 744.8374f, "None"),
new Vector3(4461.486f, 4098.145f, 744.8165f, "None"),
new Vector3(4457.016f, 4107.429f, 747.641f, "None"),
new Vector3(4455.095f, 4110.988f, 749.6176f, "None"),
new Vector3(4452.98f, 4114.904f, 752.3882f, "None"),
new Vector3(4450.836f, 4118.876f, 755.1632f, "None"),
new Vector3(4448.665f, 4122.899f, 757.8908f, "None"),
new Vector3(4446.563f, 4126.792f, 760.5313f, "None"),
new Vector3(4444.073f, 4130.593f, 763.2424f, "None"),
new Vector3(4441.602f, 4134.332f, 765.9006f, "None"),
new Vector3(4439.167f, 4138.093f, 767.8658f, "None"),
new Vector3(4436.89f, 4142.021f, 768.3896f, "None"),
new Vector3(4434.898f, 4146.006f, 768.2954f, "None"),
new Vector3(4432.356f, 4149.799f, 767.5864f, "None"),
new Vector3(4429.925f, 4153.567f, 766.9624f, "None"),
new Vector3(4427.561f, 4157.315f, 766.6261f, "None"),
new Vector3(4425.208f, 4161.228f, 765.8287f, "None"),
new Vector3(4423.452f, 4164.334f, 764.5794f, "None"),
};


}
</Code>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Ix'dreloth (Invasion Group)</Name>
      <QuestId>
        <int>46186</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(5054.566, 5026.553, 785.7975, "None");
		var mobs = new List&lt;int&gt;() {
			117059, // http://www.wowhead.com/npc=117059/ixdreloth
		};
		WorldQuest.TryKillElite(campPosition, mobs);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.CompleteInvasionGroup(this);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Ley Race</Name>
      <QuestId>
        <int>43764</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		wManager.wManagerSetting.CurrentSetting.SearchRadius = 200;
		var leyLineNodeId = 114655;
		var manapardId = 110903;
		var manapardPosition = new Vector3(4127.934, 5400.782, 626.9832, "None");
		if (!ObjectManager.Me.PlayerUsingVehicle)
		{
			wManager.wManagerSetting.ClearBlacklistOfCurrentProductSession();
			GoToTask.ToPositionAndIntecractWithNpc(manapardPosition, manapardId);
			return true;
		}
		var path = new List&lt;Vector3&gt;()
		{
			new Vector3(4135.341, 5440.21, 625.8992, "None"), //0
			new Vector3(4168.164, 5513.889, 619.3168, "None"), //1
			new Vector3(4222.249, 5560.51, 585.6458, "None"), //2
			new Vector3(4270.908, 5622.57, 538.3563, "None"), //3
			new Vector3(4239.36, 5752.646, 476.7571, "None"), //4
			new Vector3(4280.316, 5770.931, 445.6219, "None"), //5
			new Vector3(4358.905, 5662.21, 437.5728, "None"), //6
			new Vector3(4591.202, 5543.097, 317.5366, "None"), //7
			new Vector3(4709.949, 5526.827, 260.176, "None"), //8
			new Vector3(4886.458, 5495.872, 205.0331, "None"), //9
			new Vector3(5000.439, 5456.046, 158.4985, "None"), //10
			new Vector3(5050.832, 5532.134, 117.711, "None"), //11
			new Vector3(5191.457, 5494.921, 87.26007, "None"), //12
			new Vector3(5304.333, 5500.99, 36.35192, "None"), //13
			new Vector3(5380.213, 5608.091, 6.008808, "None"), //14
			new Vector3(5340.643, 5631.277, 1.093823, "None"), //15
			new Vector3(5301.645, 5685.274, 0.7545351, "None"), //16
			new Vector3(5244.342, 5659.583, 0.2780897, "None"), //17
			new Vector3(5194.039, 5687.56, 2.334733, "None"), //18
			new Vector3(5158.024, 5715.193, 1.295734, "None"), //19
			new Vector3(5146.766, 5785.895, 10.22643, "None"), //20
			new Vector3(4970.456, 6010.322, 34.61591, "None"), //21
			new Vector3(4845.816, 5864.874, 28.60215, "None"), //22
			new Vector3(4942.119, 5800.668, 30.07456, "None"), //23
			new Vector3(4888.849, 5756.559, 40.79932, "None"), //24
			new Vector3(5007.545, 5751.548, 29.882, "None"), //25
			new Vector3(5032.547, 5592.643, 95.94849, "None"), //26
			new Vector3(5050.832, 5532.134, 117.711, "None"), //27
		};
		for (int i = 0; i &lt; path.Count; i++)
		{
			if (WorldQuest.Complete(this))
				return true;

			if (GoToTask.ToPosition(path[i]))
			{
				//Logging.Write("reach point #" + i);
			}
		}
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(this);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(this);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Lively Highmountain Salmon (Fishing)</Name>
      <QuestId>
        <int>41596</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var path = new List&lt;Vector3&gt;() {
			new Vector3(3942.622f, 4071.319f, 883.5193f, "None"),
			new Vector3(3946.047f, 4070.161f, 883.7166f, "None"),
			new Vector3(3953.189f, 4069.022f, 882.0162f, "None"),
			new Vector3(3960.049f, 4066.737f, 881.7559f, "None"),
			new Vector3(3966.438f, 4063.204f, 881.8575f, "None"),
			new Vector3(3971.916f, 4058.076f, 881.8823f, "None"),
			new Vector3(3976.783f, 4052.707f, 881.9202f, "None"),
			new Vector3(3982.228f, 4047.452f, 882.0671f, "None"),
			new Vector3(3987.669f, 4042.714f, 882.0505f, "None"),
			new Vector3(3992.466f, 4037.36f, 882.6466f, "None"),
			new Vector3(3997.965f, 4032.243f, 883.2745f, "None"),
			new Vector3(4004.128f, 4028.303f, 883.3296f, "None"),
			new Vector3(4010.536f, 4024.948f, 883.5715f, "None"),
			new Vector3(4017.111f, 4021.812f, 882.9442f, "None"),
			new Vector3(4023.494f, 4018.203f, 882.3851f, "None"),
			new Vector3(4028.509f, 4012.705f, 881.3776f, "None"),
			new Vector3(4030.531f, 4006.216f, 879.3751f, "Swimming"),
			new Vector3(4031.831f, 4002.495f, 878.5428f, "Swimming"),
			new Vector3(4030.53f, 3992.98f, 882.879f, "None"),
			new Vector3(4024.202f, 3989.133f, 882.6617f, "None"),
			new Vector3(4017.162f, 3987.562f, 882.4576f, "None"),
			new Vector3(4010.012f, 3985.962f, 882.2938f, "None"),
			new Vector3(4002.72f, 3984.144f, 882.1934f, "None"),
			new Vector3(3995.601f, 3983.169f, 881.9835f, "None"),
			new Vector3(3988.274f, 3982.881f, 882.1459f, "None"),
			new Vector3(3980.912f, 3982.057f, 882.2061f, "None"),
			new Vector3(3974.105f, 3981.008f, 884.1434f, "None"),
			new Vector3(3970.063f, 3977.547f, 886.5502f, "None"),
			new Vector3(3964.237f, 3972.844f, 888.9738f, "None"),
			new Vector3(3957.289f, 3972.866f, 889.0936f, "None"),
			new Vector3(3954.648f, 3978.077f, 888.5692f, "None"),
			new Vector3(3953.029f, 3985.141f, 888.1447f, "None"),
			new Vector3(3951.324f, 3992.411f, 887.7092f, "None"),
			new Vector3(3948.992f, 3999.166f, 887.2856f, "None"),
			new Vector3(3946.171f, 4006.238f, 886.8466f, "None"),
			new Vector3(3942.371f, 4012.343f, 886.7134f, "None"),
			new Vector3(3937.103f, 4017.363f, 887.106f, "None"),
			new Vector3(3933.972f, 4023.825f, 886.9006f, "None"),
			new Vector3(3935.181f, 4031.289f, 886.5609f, "None"),
			new Vector3(3936.74f, 4038.442f, 885.5239f, "None"),
			new Vector3(3938.207f, 4045.448f, 885.0989f, "None"),
			new Vector3(3939.306f, 4052.923f, 884.6355f, "None"),
			new Vector3(3939.721f, 4060.213f, 884.1749f, "None"),
			new Vector3(3940.345f, 4067.521f, 883.7159f, "None"),
			new Vector3(3941.544f, 4073.201f, 883.3694f, "None"),
		};
		Fisher.Loop(path, 260004); //http://www.wowhead.com/object=260004/lively-highmountain-salmon-school
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>10</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.CanFishing(41596);</CanCondition>
      <IsCompleteCondition>return WorldQuest.CompleteFishing(41596);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Orgrokk (Invasion Group)</Name>
      <QuestId>
        <int>46188</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(4623.898, 4043.083, 949.6552, "None");
		var mobs = new List&lt;int&gt;() {
			117053, // http://www.wowhead.com/npc=117053/orgrokk
		};
		WorldQuest.TryKillElite(campPosition, mobs);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.CompleteInvasionRaid(this);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Primal Payback (Bear)</Name>
      <QuestId>
        <int>41057</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var questId = 41057;
		var startPosition = new Vector3(4675.083, 4798.682, 687.8568, "None");
		var npcId = 101957;
		var maxDist = 30;
		if (!Quest.HasQuest(questId))
		{
			//Logging.Write("go to quest loca");
			GoToTask.ToPosition(startPosition);
			return true;
		}
		if (!WorldQuest.Complete(questId, 1) || !ObjectManager.Me.PlayerUsingVehicle)
		{
			//Logging.Write("npc start");
			GoToTask.ToPositionAndIntecractWithNpc(startPosition, npcId, 1);
			return true;
		}

		//combat
		var target = ObjectManager.Me.TargetObject;
		if (target != null &amp;&amp; target.IsAlive &amp;&amp; target.IsAttackable &amp;&amp; target.IsValid)
		{
			var dist = ObjectManager.Me.Position.DistanceTo(target.Position);
			if (dist &gt; maxDist)
			{
				//Logging.Write("victim found. move closer");
				var wp = wManager.Wow.Helpers.PathFinder.FindPath(target.Position);
				wManager.Wow.Helpers.MovementManager.Go(wp);
				return true;
			}
			else if (dist &gt; 5) //charge
			{
				//Logging.Write("victim attack1");
				MovementManager.Face(ObjectManager.Target);
				wManager.Wow.Helpers.Lua.RunMacroText("/click [overridebar][vehicleui][possessbar,@vehicle,exists]OverrideActionBarButton1");
				Thread.Sleep(Usefuls.Latency);
				return true;
			}
			else //melee
			{
				//Logging.Write("victim attack2");
				MovementManager.Face(ObjectManager.Target);
				wManager.Wow.Helpers.Lua.RunMacroText("/click [overridebar][vehicleui][possessbar,@vehicle,exists]OverrideActionBarButton2");
				Thread.Sleep(Usefuls.Latency);
			}
			return true;
		}

		var mobs = new List&lt;int&gt;() {
			102982,
			102983,
			102993,
		};
		var mobEntry = ObjectManager.GetNearestWoWUnit(ObjectManager.GetWoWUnitByEntry(mobs));
		if (mobEntry != null &amp;&amp; mobEntry.IsAlive &amp;&amp; mobEntry.IsAttackable &amp;&amp; mobEntry.IsValid)
		{
			//Logging.Write("victim target");
			MovementManager.StopMove();
			Interact.InteractGameObject(mobEntry.GetBaseAddress);
			Thread.Sleep(Usefuls.Latency + 150);
			return true;
		}

		//patrol
		var path = new List&lt;Vector3&gt;() {
			new Vector3(4714.62f, 4814.435f, 691.9564f, "None"),
			new Vector3(4716.437f, 4802.326f, 690.2117f, "None"),
			new Vector3(4710.629f, 4789.495f, 688.67f, "None"),
			new Vector3(4711.508f, 4775.806f, 687.8579f, "None"),
			new Vector3(4715.144f, 4761.984f, 688.2568f, "None"),
			new Vector3(4720.827f, 4748.459f, 689.6182f, "None"),
			new Vector3(4723.918f, 4733.966f, 687.8304f, "None"),
			new Vector3(4729.761f, 4721.977f, 686.3732f, "None"),
			new Vector3(4731.932f, 4707.557f, 686.9549f, "None"),
			new Vector3(4732.366f, 4692.813f, 687.8372f, "None"),
			new Vector3(4735.985f, 4678.81f, 689.624f, "None"),
			new Vector3(4743.443f, 4666.16f, 691.2869f, "None"),
			new Vector3(4751.139f, 4653.472f, 694.2708f, "None"),
			new Vector3(4760.876f, 4643.314f, 695.972f, "None"),
			new Vector3(4769.201f, 4632.37f, 697.4388f, "None"),
			new Vector3(4770.97f, 4618.04f, 697.2657f, "None"),
			new Vector3(4777.32f, 4604.952f, 696.2117f, "None"),
			new Vector3(4775.549f, 4591.038f, 693.7479f, "None"),
			new Vector3(4769.377f, 4578.374f, 690.7996f, "None"),
			new Vector3(4758.991f, 4572.069f, 688.1912f, "None"),
		};
		//Logging.Write("patroling");
		MovementManager.GoLoop(path);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(41057);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(41057);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Primal Payback (Moose)</Name>
      <QuestId>
        <int>41055</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var questId = 41055;
		var startPosition = new Vector3(4675.083, 4798.682, 687.8568, "None");
		var npcId = 101957;
		var maxDist = 45;
		if (!Quest.HasQuest(questId))
		{
			//Logging.Write("go to quest loca");
			GoToTask.ToPosition(startPosition);
			return true;
		}
		if (!WorldQuest.Complete(questId, 1) || !ObjectManager.Me.PlayerUsingVehicle)
		{
			//Logging.Write("npc start");
			GoToTask.ToPositionAndIntecractWithNpc(startPosition, npcId, 1);
			return true;
		}

		//combat
		var target = ObjectManager.Me.TargetObject;
		if (target != null &amp;&amp; target.IsAlive &amp;&amp; target.IsAttackable &amp;&amp; target.IsValid)
		{
			var dist = ObjectManager.Me.Position.DistanceTo(target.Position);
			if (dist &gt; maxDist)
			{
				//Logging.Write("victim found. move closer");
				var wp = wManager.Wow.Helpers.PathFinder.FindPath(target.Position);
				wManager.Wow.Helpers.MovementManager.Go(wp);
				return true;
			}
			else if (dist &gt; 5) //charge
			{
				//Logging.Write("victim attack1");
				MovementManager.Face(ObjectManager.Target);
				wManager.Wow.Helpers.Lua.LuaDoString("OverrideActionBarButton1:Click()");
				Thread.Sleep(3 * 1000);
				return true;
			}
			return true;
		}

		var mobs = new List&lt;int&gt;() {
			102929,
			102946,
		};
		var mobEntry = ObjectManager.GetNearestWoWUnit(ObjectManager.GetWoWUnitByEntry(mobs));
		if (mobEntry != null &amp;&amp; mobEntry.IsAlive &amp;&amp; mobEntry.IsAttackable &amp;&amp; mobEntry.IsValid)
		{
			//Logging.Write("victim target");
			MovementManager.StopMove();
			Interact.InteractGameObject(mobEntry.GetBaseAddress);
			Thread.Sleep(Usefuls.Latency + 150);
			return true;
		}

		//patrol
		var path = new List&lt;Vector3&gt;() {
			new Vector3(4714.62f, 4814.435f, 691.9564f, "None"),
			new Vector3(4716.437f, 4802.326f, 690.2117f, "None"),
			new Vector3(4710.629f, 4789.495f, 688.67f, "None"),
			new Vector3(4711.508f, 4775.806f, 687.8579f, "None"),
			new Vector3(4715.144f, 4761.984f, 688.2568f, "None"),
			new Vector3(4720.827f, 4748.459f, 689.6182f, "None"),
			new Vector3(4723.918f, 4733.966f, 687.8304f, "None"),
			new Vector3(4729.761f, 4721.977f, 686.3732f, "None"),
			new Vector3(4731.932f, 4707.557f, 686.9549f, "None"),
			new Vector3(4732.366f, 4692.813f, 687.8372f, "None"),
			new Vector3(4735.985f, 4678.81f, 689.624f, "None"),
			new Vector3(4743.443f, 4666.16f, 691.2869f, "None"),
			new Vector3(4751.139f, 4653.472f, 694.2708f, "None"),
			new Vector3(4760.876f, 4643.314f, 695.972f, "None"),
			new Vector3(4769.201f, 4632.37f, 697.4388f, "None"),
			new Vector3(4770.97f, 4618.04f, 697.2657f, "None"),
			new Vector3(4777.32f, 4604.952f, 696.2117f, "None"),
			new Vector3(4775.549f, 4591.038f, 693.7479f, "None"),
			new Vector3(4769.377f, 4578.374f, 690.7996f, "None"),
			new Vector3(4758.991f, 4572.069f, 688.1912f, "None"),
		};
		//Logging.Write("patroling");
		MovementManager.GoLoop(path);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(41055);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(41055);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Primal Payback 1</Name>
      <QuestId>
        <int>39462</int>
      </QuestId>
      <QuestType>InteractWithNpc</QuestType>
      <QuestClass xsi:type="InteractWithNpcEasyQuestClass">
        <HotSpots>
          <Vector3 X="4675.083" Y="4798.682" Z="687.8566" />
        </HotSpots>
        <GossipOptionNpcInteractWith>1</GossipOptionNpcInteractWith>
        <Macro />
        <IgnoreIfDead>false</IgnoreIfDead>
        <EntryIdTarget>
          <int>101957</int>
        </EntryIdTarget>
        <Range>4.5</Range>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(39462);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(39462, 1);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Primal Payback 2</Name>
      <QuestId>
        <int>39462</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		if (WorldQuest.Complete(39462, 2))
		{
			wManager.wManagerSetting.ClearBlacklistOfCurrentProductSession();
			wManager.wManagerSetting.CurrentSetting.UseFlyingMount = true;
			wManager.wManagerSetting.CurrentSetting.UseGroundMount = true;
			wManager.wManagerSetting.CurrentSetting.UseMount = true;
			wManager.Wow.Helpers.Conditions.ForceIgnoreIsAttacked = false;
			wManager.wManagerSetting.CurrentSetting.DontStartFighting = false;
			//Logging.Write("quest complete");
			Usefuls.EjectVehicle();
			return true;
		}

		var narissaPos = new Vector3(4675.083, 4798.682, 687.8566, "None");
		var narissaId = 101957;
		if (!ObjectManager.Me.PlayerUsingVehicle)
		{
			//Logging.Write("not in cat. going to narissa");
			// enable mount and fight
			wManager.wManagerSetting.ClearBlacklistOfCurrentProductSession();
			wManager.wManagerSetting.CurrentSetting.UseFlyingMount = true;
			wManager.wManagerSetting.CurrentSetting.UseGroundMount = true;
			wManager.wManagerSetting.CurrentSetting.UseMount = true;
			wManager.Wow.Helpers.Conditions.ForceIgnoreIsAttacked = false;
			wManager.wManagerSetting.CurrentSetting.DontStartFighting = false;

			wManager.Wow.Bot.Tasks.GoToTask.ToPositionAndIntecractWithNpc(narissaPos, narissaId, 1);

			// disable mount and fight
			wManager.wManagerSetting.CurrentSetting.UseFlyingMount = false;
			wManager.wManagerSetting.CurrentSetting.UseGroundMount = false;
			wManager.wManagerSetting.CurrentSetting.UseMount = false;
			wManager.wManagerSetting.CurrentSetting.DontStartFighting = true;
			wManager.Wow.Helpers.Conditions.ForceIgnoreIsAttacked = true;
			return true;
		}

		var target = ObjectManager.Me.TargetObject;
		if (target != null &amp;&amp; target.IsAlive &amp;&amp; target.IsAttackable &amp;&amp; target.IsValid)
		{
			var dist = ObjectManager.Me.Position.DistanceTo(target.Position);
			if (dist &gt; 44)
			{
				//Logging.Write("target too far. getting closer");
				var wp = wManager.Wow.Helpers.PathFinder.FindPath(target.Position);
				wManager.Wow.Helpers.MovementManager.Go(wp);
				return true;
			}
			if (dist &gt; 5)
			{
				MovementManager.Face(ObjectManager.Target);
				//Logging.Write("cat attack 1. not in melee");
				wManager.Wow.Helpers.Lua.RunMacroText("/click [overridebar][vehicleui][possessbar,@vehicle,exists]OverrideActionBarButton1");
				Thread.Sleep(Usefuls.Latency);
				return true;
			}

			MovementManager.Face(ObjectManager.Target);
			//Logging.Write("cat attack 2. melee");
			wManager.Wow.Helpers.Lua.RunMacroText("/click [overridebar][vehicleui][possessbar,@vehicle,exists]OverrideActionBarButton2");
			Thread.Sleep(Usefuls.Latency);
			return true;
		}

		var hunters = new List&lt;int&gt;() { 101996, 101997 };
		var mobEntry = ObjectManager.GetNearestWoWUnit(ObjectManager.GetWoWUnitByEntry(hunters));
		if (mobEntry != null &amp;&amp; mobEntry.IsAlive &amp;&amp; mobEntry.IsAttackable &amp;&amp; mobEntry.IsValid)
		{
			//Logging.Write("found victim");
			MovementManager.StopMove();
			Interact.InteractGameObject(mobEntry.GetBaseAddress);
			Thread.Sleep(Usefuls.Latency + 150);
			return true;
		}

		var path = new List&lt;Vector3&gt;() {
			new Vector3(4712.095f, 4755.923f, 689.9666f, "None"),
			new Vector3(4727.142f, 4733.25f, 687.064f, "None"),
			new Vector3(4735.701f, 4704.631f, 686.9873f, "None"),
			new Vector3(4742.291f, 4675.895f, 689.9357f, "None"),
			new Vector3(4761.506f, 4652.89f, 694.6928f, "None"),
			new Vector3(4773.054f, 4625.331f, 697.9083f, "None"),
			new Vector3(4775.387f, 4595.73f, 694.4069f, "None"),
			new Vector3(4773.939f, 4624.405f, 697.8874f, "None"),
			new Vector3(4755.623f, 4647.903f, 695.3759f, "None"),
			new Vector3(4752.866f, 4677.318f, 692.7076f, "None"),
			new Vector3(4745.737f, 4705.534f, 691.5308f, "None"),
			new Vector3(4731.101f, 4731.548f, 685.9631f, "None"),
			new Vector3(4715.571f, 4757.229f, 689.3682f, "None"),
		};
		//Logging.Write("no hunters around. patroling");
		MovementManager.GoLoop(path);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(39462);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(39462, 2);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Return to the Crag 1</Name>
      <QuestId>
        <int>41789</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="4810.224" Y="4397.466" Z="710.1839" />
          <Vector3 X="4820.465" Y="4377.01" Z="717.3193" />
          <Vector3 X="4811.482" Y="4481.765" Z="705.9052" />
          <Vector3 X="4742.215" Y="4330.932" Z="711.5392" />
        </HotSpots>
        <EntryTarget>
          <int>94152</int>
          <int>94153</int>
          <int>95693</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(41789);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(41789, 1);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Return to the Crag 2</Name>
      <QuestId>
        <int>41789</int>
      </QuestId>
      <QuestType>InteractWithNpc</QuestType>
      <QuestClass xsi:type="InteractWithNpcEasyQuestClass">
        <HotSpots>
          <Vector3 X="4760.333" Y="4391.458" Z="700.0966" />
          <Vector3 X="4776.7" Y="4334.219" Z="718.0129" />
          <Vector3 X="4840.194" Y="4335.003" Z="736.7248" />
          <Vector3 X="4830.942" Y="4428.806" Z="719.7078" />
          <Vector3 X="4777.624" Y="4438.167" Z="701.6587" />
        </HotSpots>
        <GossipOptionNpcInteractWith>-1</GossipOptionNpcInteractWith>
        <Macro />
        <IgnoreIfDead>false</IgnoreIfDead>
        <EntryIdTarget>
          <int>104531</int>
        </EntryIdTarget>
        <Range>4.5</Range>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(41789);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(41789, 2);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Return to the Crag 3</Name>
      <QuestId>
        <int>41789</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="4777.624" Y="4438.167" Z="701.6587" />
          <Vector3 X="4759.188" Y="4366.905" Z="705.5843" />
          <Vector3 X="4713.123" Y="4395.896" Z="683.9932" />
          <Vector3 X="4713.759" Y="4437.585" Z="681.1579" />
        </HotSpots>
        <EntryTarget>
          <int>94386</int>
          <int>94196</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(41789);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(41789, 3);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Return to the River</Name>
      <QuestId>
        <int>41144</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="3871.149" Y="4944.233" Z="638.2043" />
          <Vector3 X="3892.558" Y="4972.451" Z="632.3187" />
          <Vector3 X="3935.719" Y="4947.2" Z="621.4633" />
          <Vector3 X="3839.487" Y="4909.607" Z="639.8508" />
          <Vector3 X="3825.737" Y="4906.828" Z="643.9515" />
        </HotSpots>
        <EntryTarget>
          <int>95013</int>
          <int>94687</int>
          <int>96124</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>13</ObjectiveCount1>
      <ObjectiveCount2>13</ObjectiveCount2>
      <ObjectiveCount3>25</ObjectiveCount3>
      <ObjectiveCount4>13</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(41144);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(41144);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Ritualists in Our Midsts 1</Name>
      <QuestId>
        <int>40966</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="4439.244" Y="3935.039" Z="719.2921" />
        </HotSpots>
        <EntryTarget>
          <int>102501</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>7</ObjectiveCount1>
      <ObjectiveCount2>3</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(40966);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(40966, 1);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Ritualists in Our Midsts 2</Name>
      <QuestId>
        <int>40966</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="4492.948" Y="3933.26" Z="744.2689" />
          <Vector3 X="4480.799" Y="3968.812" Z="739.8403" />
          <Vector3 X="4420.106" Y="3999.051" Z="743.7344" />
          <Vector3 X="4465.632" Y="4002.83" Z="743.6627" />
          <Vector3 X="4495.903" Y="4052.332" Z="744.6489" />
        </HotSpots>
        <EntryTarget>
          <int>101644</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>7</ObjectiveCount1>
      <ObjectiveCount2>3</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(40966);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(40966, 2);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Ritualists in Our Midsts 3</Name>
      <QuestId>
        <int>40966</int>
      </QuestId>
      <QuestType>InteractWithNpc</QuestType>
      <QuestClass xsi:type="InteractWithNpcEasyQuestClass">
        <HotSpots>
          <Vector3 X="4453.649" Y="3996.322" Z="743.59" />
          <Vector3 X="4480.799" Y="3968.812" Z="739.8405" />
          <Vector3 X="4424.915" Y="3994.84" Z="742.2316" />
          <Vector3 X="4498.191" Y="4081.691" Z="743.7396" />
          <Vector3 X="4479.272" Y="4022.478" Z="745.7081" />
        </HotSpots>
        <GossipOptionNpcInteractWith>1</GossipOptionNpcInteractWith>
        <Macro />
        <IgnoreIfDead>false</IgnoreIfDead>
        <EntryIdTarget>
          <int>102795</int>
        </EntryIdTarget>
        <Range>4.5</Range>
      </QuestClass>
      <ObjectiveCount1>7</ObjectiveCount1>
      <ObjectiveCount2>3</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(40966);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(40966, 3);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Sea of Feathers 1</Name>
      <QuestId>
        <int>41691</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="5518.481" Y="4806.583" Z="662.5637" />
          <Vector3 X="5511.272" Y="4789.572" Z="659.1748" />
          <Vector3 X="5543.566" Y="4776.94" Z="667.1871" />
          <Vector3 X="5577.237" Y="4756.503" Z="670.6312" />
          <Vector3 X="5467.708" Y="4795.054" Z="655.7036" />
        </HotSpots>
        <EntryTarget>
          <int>95310</int>
          <int>95270</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>4</ObjectiveCount1>
      <ObjectiveCount2>4</ObjectiveCount2>
      <ObjectiveCount3>6</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(41691);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(41691);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Sea of Feathers 2</Name>
      <QuestId>
        <int>41691</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="5558.377" Y="4800.686" Z="663.6368" />
          <Vector3 X="5512.95" Y="4737.304" Z="662.4407" />
          <Vector3 X="5454.563" Y="4820.41" Z="657.2831" />
          <Vector3 X="5522.355" Y="4825.723" Z="664.8697" />
        </HotSpots>
        <EntryIdObjects>
          <int>243401</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>4</ObjectiveCount1>
      <ObjectiveCount2>4</ObjectiveCount2>
      <ObjectiveCount3>6</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(41691);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(41691, 2);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Slab of Bacon (Cooking)</Name>
      <QuestId>
        <int>41242</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="5422.465" Y="4619.912" Z="628.9608" />
        </HotSpots>
        <EntryTarget>
          <int>103681</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.CanCooking(41242);</CanCondition>
      <IsCompleteCondition>return WorldQuest.CompleteCooking(41242);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Slab of Bacon 2 (Cooking)</Name>
      <QuestId>
        <int>41549</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="4616.133" Y="4702.277" Z="680.1316" />
        </HotSpots>
        <EntryTarget>
          <int>103681</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.CompleteCooking(41549);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Magic of Flight (Highmountain)</Name>
      <QuestId>
        <int>43766</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public class TheMagicofFlightHighmountain : QuestClass
{
	static int _questID = 43766;
	static Vector3 _startPosition = new Vector3(4103.099, 4520.735, 641.2788);
	public TheMagicofFlightHighmountain()
	{
		Name = "The Magic of Flight (Highmountain)";
		QuestId.Add(43766);
		Step.AddRange(new[] { 1 });
	}
	void Log(string text)
	{
		//Logging.WriteDebug("[" + Name + "] " + text);
	}
	public override bool Pulse()
	{
		if (!Quest.HasQuest(43766) || ObjectManager.Me.Position.Z &lt; 2 || ObjectManager.Me.Position.DistanceTo2D(_startPosition) &gt; 200)
		{
			GoToTask.ToPosition(_startPosition);
			return true;
		}
		MoveInBubble();
		return true;
	}

	void MoveInBubble()
	{
		var bubble = FlightBubble();
		var artifact = ArcaneArtifact();

		if (artifact != null)
		{
			Log("Interacting with artifact");
			Interact.InteractGameObject(artifact.GetBaseAddress);
			Usefuls.WaitIsCastingAndLooting();
			Thread.Sleep(Others.Random(100, 200));
			return;
		}

		if (bubble == null)
		{
			Log("Waiting for a bubble");
			Thread.Sleep(Others.Random(100, 200));
			return;
		}
		Log("Moving in bubble");
		MovementManager.MoveTo(bubble.Position);
		Thread.Sleep(Others.Random(100, 200));
	}

	public WoWUnit FlightBubble()
	{
		return ObjectManager.GetObjectWoWUnit()
			.Where(u =&gt; u.IsValid &amp;&amp; u.Entry == 110657 &amp;&amp; u.GetMove &amp;&amp; u.GetDistance &lt; 10)
			.OrderBy(u =&gt; u.GetDistance)
			.FirstOrDefault();
	}
	public WoWUnit ArcaneArtifact()
	{
		return ObjectManager.GetObjectWoWUnit()
			.Where(u =&gt; u.IsValid &amp;&amp; u.Entry == 110664 &amp;&amp; u.GetDistance &lt; 5)
			.OrderBy(u =&gt; u.GetDistance)
			.FirstOrDefault();
	}
	public override bool IsComplete()
	{
		return WorldQuest.Complete(this);
	}
	public override bool IsCompleted()
	{
		return false;
	}
	public override bool HasQuest()
	{
		return true;
	}

}</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Thick Ironhorn Hide (Skinning)</Name>
      <QuestId>
        <int>41232</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="4676.624" Y="4735.471" Z="685.7773" />
          <Vector3 X="4689.768" Y="4702.364" Z="685.3281" />
          <Vector3 X="4753.978" Y="4702.729" Z="694.98" />
          <Vector3 X="4737.082" Y="4647.854" Z="692.7324" />
          <Vector3 X="4704.639" Y="4808.431" Z="690.1341" />
          <Vector3 X="4668.52" Y="4818.071" Z="690.1825" />
          <Vector3 X="4728.615" Y="4859.701" Z="710.4691" />
          <Vector3 X="4753.143" Y="4875.194" Z="724.8552" />
          <Vector3 X="4738.268" Y="4808.67" Z="702.6313" />
        </HotSpots>
        <EntryTarget>
          <int>94151</int>
          <int>95268</int>
          <int>94386</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>12</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.CompleteSkinning(41232);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Thunder Totem Cleanup Detail</Name>
      <QuestId>
        <int>44823</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var startPosition = new Vector3(4137.918, 4371.598, 768.4141, "None");
		var drumsObjectsId = new List&lt;int&gt;() {
			266655, //250903, //Large Ceremonial Drum
			266689, //250904, //Medium Ceremonial Drum
			250905, //Small Ceremonial Drum
		};

		var maxDist = 75;
		var mobsId = new List&lt;int&gt;() {
			108145, //drum thief
		};

		if (ObjectManager.Me.Position.DistanceTo(startPosition) &gt; maxDist)
		{
			GoToTask.ToPosition(startPosition);
			return true;
		}
		var drumEntry = ObjectManager.GetNearestWoWGameObject(ObjectManager.GetWoWGameObjectByEntry(drumsObjectsId));
		if (drumEntry != null &amp;&amp; drumEntry.IsValid &amp;&amp; drumEntry.Position.DistanceTo(startPosition) &lt; maxDist)
		{
			GoToTask.ToPositionAndIntecractWithGameObject(drumEntry.Position, drumEntry.Entry);
			return true;
		}

		var mobEntry = ObjectManager.GetNearestWoWUnit(ObjectManager.GetWoWUnitByEntry(mobsId));
		if (mobEntry != null &amp;&amp; mobEntry.IsValid &amp;&amp; mobEntry.IsAlive &amp;&amp; mobEntry.IsAttackable &amp;&amp; mobEntry.Position.DistanceTo(startPosition) &lt; maxDist)
		{
			Fight.StartFight(mobEntry.Guid);
			return true;
		}
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>20</ObjectiveCount1>
      <ObjectiveCount2>20</ObjectiveCount2>
      <ObjectiveCount3>20</ObjectiveCount3>
      <ObjectiveCount4>10</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(44823);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(44823);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Tiny Poacher, Tiny Animals (Pet Battle)</Name>
      <QuestId>
        <int>40282</int>
      </QuestId>
      <QuestType>InteractWithNpc</QuestType>
      <QuestClass xsi:type="InteractWithNpcEasyQuestClass">
        <HotSpots>
          <Vector3 X="5266.792" Y="4725.909" Z="647.1906" />
        </HotSpots>
        <GossipOptionNpcInteractWith>1</GossipOptionNpcInteractWith>
        <Macro />
        <IgnoreIfDead>false</IgnoreIfDead>
        <EntryIdTarget>
          <int>99150</int>
        </EntryIdTarget>
        <Range>4.5</Range>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Ulgrom (Invasion Group)</Name>
      <QuestId>
        <int>46190</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(3922.688, 3869.511, 905.6642, "None");
		var mobs = new List&lt;int&gt;() {
			117967, // http://www.wowhead.com/npc=117967/ulgrom
		};
		WorldQuest.TryKillElite(campPosition, mobs);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.CompleteInvasionGroup(this);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Unstable Portal 1</Name>
      <QuestId>
        <int>41428</int>
      </QuestId>
      <QuestType>InteractWithNpc</QuestType>
      <QuestClass xsi:type="InteractWithNpcEasyQuestClass">
        <HotSpots>
          <Vector3 X="5581.376" Y="4359.032" Z="661.9677" />
          <Vector3 X="5584.896" Y="4213.487" Z="657.0905" />
          <Vector3 X="5769.35" Y="4162.359" Z="652.277" />
          <Vector3 X="5783.902" Y="4285.834" Z="659.1969" />
        </HotSpots>
        <GossipOptionNpcInteractWith>1</GossipOptionNpcInteractWith>
        <Macro />
        <IgnoreIfDead>false</IgnoreIfDead>
        <EntryIdTarget>
          <int>104339</int>
        </EntryIdTarget>
        <Range>4.5</Range>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>4</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(41428);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(41428, 1);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Unstable Portal 2</Name>
      <QuestId>
        <int>41428</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="5681.41" Y="4266.069" Z="695.4335" />
        </HotSpots>
        <EntryIdObjects>
          <int>247896</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>4</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(41428);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(41428, 2);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>WANTED: Bristlemaul</Name>
      <QuestId>
        <int>41828</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(4807.989, 5023.147, 778.937, "None");
		var mobs = new List&lt;int&gt;() { 97449 }; //Bristlemaul
		WorldQuest.TryKillElite(campPosition, mobs);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.CanGroup(41828);</CanCondition>
      <IsCompleteCondition>return WorldQuest.CompleteGroup(41828);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>WANTED: Bristlemaul 2</Name>
      <QuestId>
        <int>44290</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(4807.989, 5023.147, 778.937, "None");
		var mobs = new List&lt;int&gt;() { 97449 }; //Bristlemaul
		WorldQuest.TryKillElite(campPosition, mobs);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.CanGroup(44290);</CanCondition>
      <IsCompleteCondition>return WorldQuest.CompleteGroup(44290);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>WANTED: Crawshuk the Hungry</Name>
      <QuestId>
        <int>41826</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var enterPosition = new Vector3(5095.698, 4187.245, 825.9832, "None");
		var campPosition = new Vector3(5046.101f, 4252.368f, 896.8216f, "None");
		var maxDist = campPosition.DistanceTo(enterPosition) + 0.1f;
		if (ObjectManager.Me.Position.DistanceTo(campPosition) &gt; 75)
		{
			enterPosition = robotManager.Helpful.Math.GetRandomPointInCircle(enterPosition, 4);
			if (GoToTask.ToPosition(enterPosition))
			{
				var path = new List&lt;Vector3&gt;() {
					new Vector3(5090.734f, 4199.345f, 833.4974f, "None"),
					new Vector3(5086.747f, 4206.828f, 842.5191f, "None"),
					new Vector3(5083.027f, 4213.149f, 849.5789f, "None"),
					new Vector3(5079.154f, 4219.534f, 856.2755f, "None"),
					new Vector3(5071.096f, 4231.677f, 869.0281f, "None"),
					new Vector3(5065.948f, 4237.087f, 875.6895f, "None"),
					new Vector3(5053.024f, 4242.273f, 885.7952f, "None"),
					new Vector3(5046.101f, 4252.368f, 896.8216f, "None"),
				};
				WorldQuest.MovePath(path);
			}
		}
		var mobs = new List&lt;int&gt;() { 97345 }; //Crawshuk the Hungry
		WorldQuest.TryKillElite(campPosition, mobs);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.CanGroup(41826);</CanCondition>
      <IsCompleteCondition>return WorldQuest.CompleteGroup(41826);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>WANTED: Crawshuk the Hungry 2</Name>
      <QuestId>
        <int>44291</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var enterPosition = new Vector3(5095.698, 4187.245, 825.9832, "None");
		var campPosition = new Vector3(5046.101f, 4252.368f, 896.8216f, "None");
		var maxDist = campPosition.DistanceTo(enterPosition) + 0.1f;
		if (ObjectManager.Me.Position.DistanceTo(campPosition) &gt; 75)
		{
			enterPosition = robotManager.Helpful.Math.GetRandomPointInCircle(enterPosition, 4);
			if (GoToTask.ToPosition(enterPosition))
			{
				var path = new List&lt;Vector3&gt;() {
					new Vector3(5090.734f, 4199.345f, 833.4974f, "None"),
					new Vector3(5086.747f, 4206.828f, 842.5191f, "None"),
					new Vector3(5083.027f, 4213.149f, 849.5789f, "None"),
					new Vector3(5079.154f, 4219.534f, 856.2755f, "None"),
					new Vector3(5071.096f, 4231.677f, 869.0281f, "None"),
					new Vector3(5065.948f, 4237.087f, 875.6895f, "None"),
					new Vector3(5053.024f, 4242.273f, 885.7952f, "None"),
					new Vector3(5046.101f, 4252.368f, 896.8216f, "None"),
				};
				WorldQuest.MovePath(path);
			}
		}
		var mobs = new List&lt;int&gt;() { 97345 }; //Crawshuk the Hungry
		WorldQuest.TryKillElite(campPosition, mobs);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.CanGroup(44291);</CanCondition>
      <IsCompleteCondition>return WorldQuest.CompleteGroup(44291);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>WANTED: Devouring Darkness</Name>
      <QuestId>
        <int>43617</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var path = new List&lt;Vector3&gt;() {
new Vector3(4871.461f, 3785.187f, 757.9955f, "None"),
new Vector3(4874.068f, 3788.568f, 759.3705f, "None"),
new Vector3(4876.235f, 3791.379f, 759.2426f, "None"),
new Vector3(4880.472f, 3796.872f, 757.3395f, "None"),
new Vector3(4882.605f, 3799.638f, 755.8673f, "None"),
new Vector3(4884.768f, 3802.443f, 754.3779f, "None"),
new Vector3(4886.914f, 3805.226f, 753.4667f, "None"),
new Vector3(4889.03f, 3807.969f, 752.2623f, "None"),
new Vector3(4891.172f, 3810.72f, 750.6067f, "None"),
new Vector3(4893.36f, 3813.424f, 749.1165f, "None"),
new Vector3(4895.594f, 3816.182f, 747.8481f, "None"),
new Vector3(4897.919f, 3818.797f, 746.3937f, "None"),
new Vector3(4900.262f, 3821.341f, 745.5726f, "None"),
new Vector3(4902.666f, 3823.895f, 744.8717f, "None"),
new Vector3(4905.088f, 3826.46f, 743.7534f, "None"),
new Vector3(4907.595f, 3828.948f, 742.5284f, "None"),
new Vector3(4910.214f, 3831.183f, 741.1848f, "None"),
new Vector3(4912.973f, 3833.031f, 739.2838f, "None"),
new Vector3(4915.997f, 3834.767f, 737.7474f, "None"),
new Vector3(4919.135f, 3836.3f, 736.8931f, "None"),
new Vector3(4922.535f, 3837.137f, 735.9918f, "None"),
new Vector3(4925.995f, 3837.499f, 735.1986f, "None"),
new Vector3(4929.479f, 3837.269f, 734.6047f, "None"),
new Vector3(4936.224f, 3835.328f, 733.824f, "None"),
new Vector3(4942.512f, 3832.305f, 733.2559f, "None"),
new Vector3(4947.231f, 3827.29f, 733.2492f, "None"),
new Vector3(4951.903f, 3822.5f, 733.3777f, "None"),
new Vector3(4953.344f, 3819.134f, 733.4602f, "None"),
new Vector3(4955.684f, 3812.53f, 733.2687f, "None"),
new Vector3(4957.406f, 3805.96f, 733.7299f, "None"),
new Vector3(4959.537f, 3803.178f, 733.5113f, "None"),
new Vector3(4964.655f, 3798.435f, 733.2399f, "None"),
new Vector3(4967.507f, 3796.394f, 733.4309f, "None"),
new Vector3(4970.58f, 3794.665f, 733.6218f, "None"),
new Vector3(4973.836f, 3793.374f, 733.813f, "None"),
new Vector3(4980.702f, 3792.181f, 734.1965f, "None"),
new Vector3(4984.142f, 3792.645f, 734.8936f, "None"),
new Vector3(4987.425f, 3793.878f, 735.7233f, "None"),
new Vector3(4990.541f, 3795.472f, 736.563f, "None"),
new Vector3(4995.738f, 3799.998f, 738.2153f, "None"),
new Vector3(4997.702f, 3802.884f, 739.0603f, "None"),
new Vector3(4999f, 3806.127f, 739.9222f, "None"),
new Vector3(4999.943f, 3809.483f, 740.5938f, "None"),
new Vector3(5000.419f, 3812.984f, 741.2299f, "None"),
new Vector3(5000.621f, 3816.429f, 741.8479f, "None"),
new Vector3(4998.983f, 3819.51f, 742.6553f, "None"),
new Vector3(4995.188f, 3825.17f, 743.5904f, "None"),
new Vector3(4992.093f, 3831.094f, 743.8594f, "None"),
};
		var pathStart = path[0];
		var pathEnd = path[path.Count - 2];
		var maxDist = pathStart.DistanceTo(pathEnd);
		var minDist = 10;
		if (ObjectManager.Me.Position.DistanceTo(pathEnd) &gt; maxDist) //!ObjectManager.Me.IsIndoors
		{
			GoToTask.ToPosition(path[1]);
			return true;
		}
		if (ObjectManager.Me.Position.DistanceTo(pathEnd) &lt; minDist)
		{
			var mobs = new List&lt;int&gt;() { 100495 }; //Devouring Darkness
			WorldQuest.TryKillElite(pathEnd, mobs);
			return true;
		}
		WorldQuest.MovePath(path);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.CanGroup(43617);</CanCondition>
      <IsCompleteCondition>return WorldQuest.CompleteGroup(43617);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>WANTED: Devouring Darkness 2</Name>
      <QuestId>
        <int>43455</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var path = new List&lt;Vector3&gt;() {
new Vector3(4871.461f, 3785.187f, 757.9955f, "None"),
new Vector3(4874.068f, 3788.568f, 759.3705f, "None"),
new Vector3(4876.235f, 3791.379f, 759.2426f, "None"),
new Vector3(4880.472f, 3796.872f, 757.3395f, "None"),
new Vector3(4882.605f, 3799.638f, 755.8673f, "None"),
new Vector3(4884.768f, 3802.443f, 754.3779f, "None"),
new Vector3(4886.914f, 3805.226f, 753.4667f, "None"),
new Vector3(4889.03f, 3807.969f, 752.2623f, "None"),
new Vector3(4891.172f, 3810.72f, 750.6067f, "None"),
new Vector3(4893.36f, 3813.424f, 749.1165f, "None"),
new Vector3(4895.594f, 3816.182f, 747.8481f, "None"),
new Vector3(4897.919f, 3818.797f, 746.3937f, "None"),
new Vector3(4900.262f, 3821.341f, 745.5726f, "None"),
new Vector3(4902.666f, 3823.895f, 744.8717f, "None"),
new Vector3(4905.088f, 3826.46f, 743.7534f, "None"),
new Vector3(4907.595f, 3828.948f, 742.5284f, "None"),
new Vector3(4910.214f, 3831.183f, 741.1848f, "None"),
new Vector3(4912.973f, 3833.031f, 739.2838f, "None"),
new Vector3(4915.997f, 3834.767f, 737.7474f, "None"),
new Vector3(4919.135f, 3836.3f, 736.8931f, "None"),
new Vector3(4922.535f, 3837.137f, 735.9918f, "None"),
new Vector3(4925.995f, 3837.499f, 735.1986f, "None"),
new Vector3(4929.479f, 3837.269f, 734.6047f, "None"),
new Vector3(4936.224f, 3835.328f, 733.824f, "None"),
new Vector3(4942.512f, 3832.305f, 733.2559f, "None"),
new Vector3(4947.231f, 3827.29f, 733.2492f, "None"),
new Vector3(4951.903f, 3822.5f, 733.3777f, "None"),
new Vector3(4953.344f, 3819.134f, 733.4602f, "None"),
new Vector3(4955.684f, 3812.53f, 733.2687f, "None"),
new Vector3(4957.406f, 3805.96f, 733.7299f, "None"),
new Vector3(4959.537f, 3803.178f, 733.5113f, "None"),
new Vector3(4964.655f, 3798.435f, 733.2399f, "None"),
new Vector3(4967.507f, 3796.394f, 733.4309f, "None"),
new Vector3(4970.58f, 3794.665f, 733.6218f, "None"),
new Vector3(4973.836f, 3793.374f, 733.813f, "None"),
new Vector3(4980.702f, 3792.181f, 734.1965f, "None"),
new Vector3(4984.142f, 3792.645f, 734.8936f, "None"),
new Vector3(4987.425f, 3793.878f, 735.7233f, "None"),
new Vector3(4990.541f, 3795.472f, 736.563f, "None"),
new Vector3(4995.738f, 3799.998f, 738.2153f, "None"),
new Vector3(4997.702f, 3802.884f, 739.0603f, "None"),
new Vector3(4999f, 3806.127f, 739.9222f, "None"),
new Vector3(4999.943f, 3809.483f, 740.5938f, "None"),
new Vector3(5000.419f, 3812.984f, 741.2299f, "None"),
new Vector3(5000.621f, 3816.429f, 741.8479f, "None"),
new Vector3(4998.983f, 3819.51f, 742.6553f, "None"),
new Vector3(4995.188f, 3825.17f, 743.5904f, "None"),
new Vector3(4992.093f, 3831.094f, 743.8594f, "None"),
};
		var pathStart = path[0];
		var pathEnd = path[path.Count - 2];
		var maxDist = pathStart.DistanceTo(pathEnd);
		var minDist = 10;
		if (ObjectManager.Me.Position.DistanceTo(pathEnd) &gt; maxDist) //!ObjectManager.Me.IsIndoors
		{
			GoToTask.ToPosition(path[1]);
			return true;
		}
		if (ObjectManager.Me.Position.DistanceTo(pathEnd) &lt; minDist)
		{
			var mobs = new List&lt;int&gt;() { 100495 }; //Devouring Darkness
			WorldQuest.TryKillElite(pathEnd, mobs);
			return true;
		}
		WorldQuest.MovePath(path);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.CanGroup(43455);</CanCondition>
      <IsCompleteCondition>return WorldQuest.CompleteGroup(43455);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>WANTED: Majestic Elderhorn</Name>
      <QuestId>
        <int>41818</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(5391.439, 4354.375, 686.2007, "None");
		var mobs = new List&lt;int&gt;() { 96410 }; //Majestic Elderhorn
		WorldQuest.TryKillElite(campPosition, mobs);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.CanGroup(41818);</CanCondition>
      <IsCompleteCondition>return WorldQuest.CompleteGroup(41818);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>WANTED: Majestic Elderhorn 2</Name>
      <QuestId>
        <int>44292</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(5391.439, 4354.375, 686.2007, "None");
		var mobs = new List&lt;int&gt;() { 96410 }; //Majestic Elderhorn
		WorldQuest.TryKillElite(campPosition, mobs);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.CanGroup(44292);</CanCondition>
      <IsCompleteCondition>return WorldQuest.CompleteGroup(44292);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>WANTED: Sekhan</Name>
      <QuestId>
        <int>41844</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(4340.031, 4455.743, 685.0071, "None");
		var mobs = new List&lt;int&gt;() { 101077 };
		WorldQuest.TryKillElite(campPosition, mobs);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.CanGroup(41844);</CanCondition>
      <IsCompleteCondition>return WorldQuest.CompleteGroup(41844);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>WANTED: Sekhan 2</Name>
      <QuestId>
        <int>44294</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(4340.031, 4455.743, 685.0071, "None");
		var mobs = new List&lt;int&gt;() { 101077 };
		WorldQuest.TryKillElite(campPosition, mobs);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.CanGroup(44294);</CanCondition>
      <IsCompleteCondition>return WorldQuest.CompleteGroup(44294);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>WANTED: Shara Felbreath</Name>
      <QuestId>
        <int>41821</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(5715.95, 4094.058, 618.2546, "None");
		var mobs = new List&lt;int&gt;() { 97093 };
		WorldQuest.TryKillElite(campPosition, mobs);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.CanGroup(41821);</CanCondition>
      <IsCompleteCondition>return WorldQuest.CompleteGroup(41821);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>WANTED: Shara Felbreath 2</Name>
      <QuestId>
        <int>43619</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(5715.95, 4094.058, 618.2546, "None");
		var mobs = new List&lt;int&gt;() { 97093 };
		WorldQuest.TryKillElite(campPosition, mobs);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.CanGroup(43619);</CanCondition>
      <IsCompleteCondition>return WorldQuest.CompleteGroup(43619);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>WANTED: Slumber</Name>
      <QuestId>
        <int>41838</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(5427.283, 4728.745, 664.9713, "None");
		var mobs = new List&lt;int&gt;() { 98890 }; //Slumber
		WorldQuest.TryKillElite(campPosition, mobs);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.CanGroup(41838);</CanCondition>
      <IsCompleteCondition>return WorldQuest.CompleteGroup(41838);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>WANTED: Slumber 2</Name>
      <QuestId>
        <int>44293</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(5427.283, 4728.745, 664.9713, "None");
		var mobs = new List&lt;int&gt;() { 98890 }; //Slumber
		WorldQuest.TryKillElite(campPosition, mobs);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.CanGroup(44293);</CanCondition>
      <IsCompleteCondition>return WorldQuest.CompleteGroup(44293);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Water of Life (Move outside)</Name>
      <QuestId>
        <int>41145</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var path = new List&lt;Vector3&gt;() {
new Vector3(4198.444f, 5038.478f, 696.2563f, "None"),
new Vector3(4198.362f, 5044.931f, 697.6699f, "None"),
new Vector3(4198.275f, 5051.848f, 697.7636f, "None"),
new Vector3(4198.23f, 5055.438f, 697.7659f, "None"),
new Vector3(4198.186f, 5058.931f, 697.1258f, "None"),
new Vector3(4198.098f, 5065.896f, 696.9979f, "None"),
new Vector3(4197.939f, 5072.906f, 698.4681f, "None"),
new Vector3(4197.718f, 5076.371f, 699.9075f, "None"),
new Vector3(4197.489f, 5079.829f, 700.439f, "None"),
new Vector3(4197.226f, 5083.312f, 700.9698f, "None"),
new Vector3(4196.955f, 5086.893f, 701.2936f, "None"),
new Vector3(4196.43f, 5093.838f, 701.655f, "None"),
new Vector3(4196.086f, 5097.341f, 701.7927f, "None"),
new Vector3(4195.725f, 5100.836f, 701.7151f, "None"),
new Vector3(4194.833f, 5107.774f, 700.6171f, "None"),
new Vector3(4192.021f, 5114.073f, 698.1923f, "None"),
new Vector3(4189.422f, 5116.437f, 695.4277f, "None"),
new Vector3(4186.465f, 5118.333f, 693.211f, "None"),
new Vector3(4183.418f, 5120.054f, 690.7544f, "None"),
new Vector3(4180.341f, 5121.631f, 688.4427f, "None"),
new Vector3(4177.11f, 5123.123f, 686.4516f, "None"),
new Vector3(4173.91f, 5124.233f, 685.0626f, "None"),
new Vector3(4170.382f, 5124.594f, 683.4858f, "None"),
new Vector3(4166.874f, 5124.603f, 682.5858f, "None"),
new Vector3(4163.593f, 5123.713f, 681.2923f, "None"),
new Vector3(4160.529f, 5121.911f, 680.1812f, "None"),
new Vector3(4157.614f, 5119.936f, 678.614f, "None"),
new Vector3(4154.843f, 5117.893f, 676.7349f, "None"),
new Vector3(4152.27f, 5115.514f, 676.2828f, "None"),
new Vector3(4150.125f, 5112.744f, 676.3145f, "None"),
new Vector3(4148.599f, 5109.582f, 676.1614f, "None"),
new Vector3(4148.174f, 5106.101f, 675.1944f, "None"),
new Vector3(4148.818f, 5100.224f, 674.0756f, "None"),
new Vector3(4153.199f, 5095.043f, 671.8838f, "None"),
new Vector3(4155.733f, 5092.66f, 669.5632f, "None"),
new Vector3(4158.283f, 5090.211f, 667.0684f, "None"),
new Vector3(4160.818f, 5087.778f, 664.7803f, "None"),
new Vector3(4163.303f, 5085.393f, 662.3951f, "None"),
new Vector3(4165.891f, 5083.007f, 661.3084f, "None"),
new Vector3(4168.71f, 5080.93f, 660.8756f, "None"),
new Vector3(4171.698f, 5079.134f, 660.0472f, "None"),
new Vector3(4174.734f, 5077.31f, 660.1003f, "None"),
new Vector3(4180.56f, 5073.572f, 660.3729f, "None"),
new Vector3(4183.222f, 5071.299f, 660.4193f, "None"),
new Vector3(4188.544f, 5066.688f, 660.5752f, "None"),
new Vector3(4191.189f, 5064.396f, 660.6772f, "None"),
new Vector3(4193.861f, 5062.081f, 660.8398f, "None"),
new Vector3(4198.838f, 5057.218f, 659.6903f, "None"),
new Vector3(4203.456f, 5052.021f, 659.1437f, "None"),
new Vector3(4205.194f, 5049.012f, 656.9203f, "None"),
new Vector3(4206.752f, 5045.87f, 654.1224f, "None"),
new Vector3(4207.667f, 5042.466f, 653.0919f, "None"),
new Vector3(4207.685f, 5038.947f, 652.2861f, "None"),
new Vector3(4205.697f, 5032.351f, 652.2861f, "None"),
new Vector3(4204.201f, 5029.118f, 652.2861f, "None"),
new Vector3(4201.148f, 5022.772f, 652.2885f, "None"),
new Vector3(4199.535f, 5019.666f, 652.541f, "None"),
new Vector3(4197.418f, 5016.885f, 652.7777f, "None"),
new Vector3(4192.647f, 5011.783f, 652.2058f, "None"),
new Vector3(4190.129f, 5009.365f, 650.8047f, "None"),
new Vector3(4187.263f, 5007.527f, 649.2766f, "None"),
new Vector3(4183.76f, 5006.911f, 647.7792f, "None"),
new Vector3(4180.353f, 5007.456f, 646.5397f, "None"),
new Vector3(4177.205f, 5009.059f, 646.184f, "None"),
new Vector3(4172.262f, 5013.987f, 645.8032f, "None"),
new Vector3(4168.038f, 5019.505f, 644.5916f, "None"),
new Vector3(4163.412f, 5024.675f, 645.355f, "None"),
new Vector3(4160.214f, 5026.181f, 646.1751f, "None"),
new Vector3(4153.771f, 5024.388f, 646.1962f, "None"),
new Vector3(4150.715f, 5022.541f, 646.2145f, "None"),
new Vector3(4144.771f, 5018.891f, 646.3221f, "None"),
new Vector3(4141.729f, 5017.023f, 646.5186f, "None"),
new Vector3(4138.778f, 5015.155f, 647.515f, "None"),
new Vector3(4135.82f, 5013.265f, 648.4423f, "None"),
new Vector3(4130.155f, 5009.599f, 649.8385f, "None"),
new Vector3(4128.597f, 5006.529f, 650.665f, "None"),
new Vector3(4126.454f, 4999.833f, 651.6893f, "None"),
new Vector3(4125.334f, 4996.562f, 652.5908f, "None"),
new Vector3(4123.574f, 4993.49f, 653.4633f, "None"),
new Vector3(4120.999f, 4991.192f, 654.2582f, "None"),
new Vector3(4118.008f, 4989.299f, 655.0916f, "None"),
new Vector3(4114.846f, 4987.951f, 655.9217f, "None"),
new Vector3(4111.427f, 4986.975f, 656.7859f, "None"),
new Vector3(4108.102f, 4986.076f, 657.6304f, "None"),
new Vector3(4104.671f, 4985.256f, 658.481f, "None"),
new Vector3(4101.276f, 4984.494f, 659.3149f, "None"),
new Vector3(4097.853f, 4983.737f, 660.152f, "None"),
new Vector3(4094.438f, 4982.999f, 660.9636f, "None"),
new Vector3(4091.01f, 4982.258f, 661.7784f, "None"),
new Vector3(4087.632f, 4981.552f, 662.5779f, "None"),
new Vector3(4084.206f, 4980.84f, 663.3887f, "None"),
new Vector3(4080.745f, 4980.084f, 663.5439f, "None"),
new Vector3(4074.05f, 4978.064f, 663.3261f, "None"),
new Vector3(4067.667f, 4975.117f, 662.1521f, "None"),
new Vector3(4064.526f, 4973.542f, 660.7767f, "None"),
new Vector3(4058.286f, 4970.417f, 658.9214f, "None"),
new Vector3(4055.175f, 4968.859f, 656.8159f, "None"),
};

		MovementManager.Go(path); // or MovementManager.GoLoop(path);
		var timer = new robotManager.Helpful.Timer(180 * 1000);
		while (MovementManager.InMovement &amp;&amp; !timer.IsReady)
		{
			Thread.Sleep(1000);
		}
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>		var entrancePos = new Vector3(4073.31, 4975.634, 663.1201, "None");
		var stuckCenterPosition = new Vector3(4198.444, 5038.478, 696.2563, "None");
		var maxDist = entrancePos.DistanceTo(stuckCenterPosition) - 10;
		var meToEntrance = ObjectManager.Me.Position.DistanceTo(entrancePos);
		var meToStuck = ObjectManager.Me.Position.DistanceTo(stuckCenterPosition);
		return (meToStuck &lt; maxDist);</CanCondition>
      <IsCompleteCondition>		var entrancePos = new Vector3(4073.31, 4975.634, 663.1201, "None");
		var stuckCenterPosition = new Vector3(4198.444, 5038.478, 696.2563, "None");
		var maxDist = entrancePos.DistanceTo(stuckCenterPosition) - 10;
		var meToEntrance = ObjectManager.Me.Position.DistanceTo(entrancePos);
		var meToStuck = ObjectManager.Me.Position.DistanceTo(stuckCenterPosition);
		return (meToStuck &gt; maxDist);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Water of Life 1</Name>
      <QuestId>
        <int>41145</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="4118.098" Y="5095.568" Z="676.226" />
        </HotSpots>
        <EntryTarget>
          <int>95866</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(41145);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(41145, 1);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Water of Life 2</Name>
      <QuestId>
        <int>41145</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="4149.474" Y="5098.817" Z="673.6896" />
        </HotSpots>
        <EntryTarget>
          <int>95916</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(41145);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(41145, 2);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Water of Life 3</Name>
      <QuestId>
        <int>41145</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="4144.983" Y="5018.894" Z="646.3202" />
          <Vector3 X="4196.036" Y="5012.84" Z="652.7025" />
          <Vector3 X="4191.743" Y="5065.237" Z="660.6703" />
        </HotSpots>
        <EntryIdObjects>
          <int>247106</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(41145);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(41145, 3);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
  </EasyQuests>
  <Script>camelot10\Libs\WorldQuest.cs
camelot10\Libs\Fisher.cs</Script>
  <OffMeshConnections>
    <OffMeshConnection>
      <Path>
        <Vector3 X="4397.82" Y="3936.036" Z="704.3261" />
        <Vector3 X="4405.394" Y="3935.344" Z="708.5215" />
      </Path>
      <ContinentId>1220</ContinentId>
      <Name>Crystal Fissure Rock (in)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="4405.394" Y="3935.344" Z="708.5215" />
        <Vector3 X="4399.209" Y="3938.844" Z="705.0188" />
      </Path>
      <ContinentId>1220</ContinentId>
      <Name>Crystal Fissure Rock (out)</Name>
    </OffMeshConnection>
  </OffMeshConnections>
</EasyQuestProfile>