<?xml version="1.0" encoding="utf-16"?>
<EasyQuestProfile xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <QuestsSorted>
    <QuestsSorted Action="RunCode" NameClass="// Map ID = Azsuna //  &#xD;&#xA;robotManager.Helpful.Var.SetVar(&quot;WorldQuestCurrentMapId&quot;, 1015);" />
    <QuestsSorted Action="WriteLog" NameClass="Azsuna E-(SE)-S-C-SW-W-NW-NE-N profile start" />
    <QuestsSorted Action="Pulse" NameClass="TravelToAzsuna" />
    <QuestsSorted Action="None" NameClass=" === SE === " />
    <QuestsSorted Action="Pulse" NameClass="DANGERDeepclaw" />
    <QuestsSorted Action="Pulse" NameClass="InvestigationatMakrana3" />
    <QuestsSorted Action="Pulse" NameClass="InvestigationatMakrana2" />
    <QuestsSorted Action="Pulse" NameClass="InvestigationatMakrana1" />
    <QuestsSorted Action="Pulse" NameClass="InvestigationatMakrana4" />
    <QuestsSorted Action="Pulse" NameClass="GofromMakrana" />
    <QuestsSorted Action="RunCode" NameClass="WorldQuest.SetDefaultSettings();" />
    <QuestsSorted Action="Pulse" NameClass="SlabofBacon" />
    <QuestsSorted Action="Pulse" NameClass="TheEternalMages" />
    <QuestsSorted Action="Pulse" NameClass="PiracyDoesntPay2" />
    <QuestsSorted Action="Pulse" NameClass="PiracyDoesntPay1" />
    <QuestsSorted Action="Pulse" NameClass="HeadsoftheFleet1" />
    <QuestsSorted Action="Pulse" NameClass="HeadsoftheFleet2" />
    <QuestsSorted Action="Pulse" NameClass="HeadsoftheFleet3" />
    <QuestsSorted Action="Pulse" NameClass="GofromDeadMansBaycave" />
    <QuestsSorted Action="Pulse" NameClass="HeadsoftheFleet4" />
    <QuestsSorted Action="RunCode" NameClass="/* DISABLE TAXI */ wManager.wManagerSetting.CurrentSetting.FlightMasterTaxiDistance = 1f;" />
    <QuestsSorted Action="Pulse" NameClass="DANGERChiefTreasurerJabrill" />
    <QuestsSorted Action="RunCode" NameClass="WorldQuest.SetDefaultSettings();" />
    <QuestsSorted Action="Pulse" NameClass="DEADLYWitheredJimRaid" />
    <QuestsSorted Action="Pulse" NameClass="FlightMastersWhistle" />
    <QuestsSorted Action="None" NameClass=" === S === " />
    <QuestsSorted Action="WriteLog" NameClass="Azsuna E-(SE)-S-C-SW-W-NW-NE-N profile complete. Loading next profile." />
    <QuestsSorted Action="LoadProfile" NameClass="camelot10\Legion world quests\Azsuna\[110] Azsuna S.xml" />
  </QuestsSorted>
  <NpcQuest>
    <NPCQuest Id="107376" Name="Веридий Фэллон" GameObject="false">
      <PickUpQuests />
      <TurnInQuests>
        <int>42420</int>
      </TurnInQuests>
      <Position X="-14.23958" Y="6740.421" Z="55.58792" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="107379" Name="Марин Острое Крыло" GameObject="false">
      <PickUpQuests />
      <TurnInQuests>
        <int>42422</int>
      </TurnInQuests>
      <Position X="-1441.083" Y="6656.882" Z="12.00218" Type="Flying" />
    </NPCQuest>
  </NpcQuest>
  <Npc>
    <Npc>
      <Position X="-89.1441" Y="6951.358" Z="14.10544" />
      <Entry>89640</Entry>
      <Name>Falara Nightsong</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Vendor</Type>
      <ContinentId>Troll_Raid</ContinentId>
    </Npc>
    <Npc>
      <Position X="-89.1441" Y="6951.358" Z="14.10544" />
      <Entry>89640</Entry>
      <Name>Falara Nightsong</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Repair</Type>
      <ContinentId>Troll_Raid</ContinentId>
    </Npc>
    <Npc>
      <Position X="-64.97396" Y="6966.936" Z="15.38536" />
      <Entry>255795</Entry>
      <Name>Mailbox</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Mailbox</Type>
      <ContinentId>Troll_Raid</ContinentId>
    </Npc>
  </Npc>
  <Blackspots>
    <Blackspot X="-860.5573" Y="6374.5166" Z="3.11308312" Radius="50" />
    <Blackspot X="-791.648" Y="6326.975" Z="0.553877652" Radius="50" />
    <Blackspot X="-812.50415" Y="6312.662" Z="2.283756" Radius="50" />
    <Blackspot X="-23.1238632" Y="6748.2085" Z="59.13228" Radius="7" />
    <Blackspot X="-351.975159" Y="7312.652" Z="13.5357246" Radius="30" />
    <Blackspot X="-5.37290239" Y="6748.08545" Z="54.1952972" Radius="4.5" />
    <Blackspot X="-4.22966433" Y="6749.82568" Z="53.5116653" Radius="4.5" />
    <Blackspot X="-5.77222633" Y="6752.862" Z="53.53658" Radius="4.5" />
    <Blackspot X="-4.19731474" Y="6755.39258" Z="53.5140381" Radius="4.5" />
    <Blackspot X="-5.72050238" Y="6756.73535" Z="53.51235" Radius="4.5" />
    <Blackspot X="-7.67723131" Y="6758.5" Z="53.51271" Radius="4.5" />
    <Blackspot X="-10.3004" Y="6756.835" Z="53.53486" Radius="4.5" />
    <Blackspot X="-12.399457" Y="6757.21826" Z="53.51388" Radius="4.5" />
    <Blackspot X="-13.2697487" Y="6757.94531" Z="53.51388" Radius="4.5" />
    <Blackspot X="-15.68126" Y="6757.59961" Z="53.51212" Radius="4.5" />
    <Blackspot X="-16.76365" Y="6756.68457" Z="53.51212" Radius="4.5" />
    <Blackspot X="-17.8612862" Y="6755.671" Z="54.616024" Radius="4.5" />
    <Blackspot X="-17.2268314" Y="6753.95361" Z="54.487915" Radius="4.5" />
    <Blackspot X="-16.79893" Y="6752.92871" Z="53.5341873" Radius="4.5" />
    <Blackspot X="-16.774168" Y="6751.42529" Z="53.5243759" Radius="4.5" />
    <Blackspot X="-18.270752" Y="6749.50928" Z="53.5125046" Radius="4.5" />
    <Blackspot X="-17.4260464" Y="6747.754" Z="54.1315" Radius="4.5" />
    <Blackspot X="-17.2756557" Y="6747.433" Z="54.28461" Radius="4.5" />
    <Blackspot X="-15.0290136" Y="6747.449" Z="54.86828" Radius="4.5" />
    <Blackspot X="-15.0290136" Y="6747.449" Z="54.86828" Radius="4.5" />
    <Blackspot X="-13.1993227" Y="6746.435" Z="55.4964" Radius="4.5" />
    <Blackspot X="-14.0600929" Y="6763.44043" Z="59.2949944" Radius="4.5" />
    <Blackspot X="-17.87424" Y="6762.263" Z="59.7764549" Radius="4.5" />
    <Blackspot X="-20.2226524" Y="6760.531" Z="58.7727776" Radius="4.5" />
    <Blackspot X="-22.7059479" Y="6759.4375" Z="58.9474945" Radius="4.5" />
    <Blackspot X="-24.3471069" Y="6757.6665" Z="58.9377365" Radius="4.5" />
    <Blackspot X="-24.0713863" Y="6754.96436" Z="58.3962479" Radius="4.5" />
    <Blackspot X="-25.37011" Y="6752.101" Z="58.4442825" Radius="4.5" />
    <Blackspot X="-26.4230366" Y="6749.53027" Z="58.9992" Radius="4.5" />
    <Blackspot X="-28.0527477" Y="6746.997" Z="59.07371" Radius="4.5" />
    <Blackspot X="-28.8253326" Y="6743.79834" Z="58.7662048" Radius="4.5" />
    <Blackspot X="-29.6960869" Y="6740.95" Z="59.1957626" Radius="4.5" />
    <Blackspot X="-30.8598518" Y="6737.86035" Z="59.3999825" Radius="4.5" />
    <Blackspot X="-31.4121971" Y="6735.58838" Z="59.4405861" Radius="4.5" />
    <Blackspot X="-31.93684" Y="6733.32568" Z="59.5073624" Radius="4.5" />
    <Blackspot X="-31.9424343" Y="6730.55127" Z="59.6523666" Radius="4.5" />
    <Blackspot X="-31.5570221" Y="6727.8623" Z="59.81874" Radius="4.5" />
    <Blackspot X="-30.7411118" Y="6724.93262" Z="59.8541641" Radius="4.5" />
    <Blackspot X="-29.85031" Y="6722.228" Z="59.84433" Radius="4.5" />
    <Blackspot X="-29.4073181" Y="6720.11865" Z="59.7339325" Radius="4.5" />
    <Blackspot X="-24.7204933" Y="6716.44434" Z="52.3624153" Radius="4.5" />
    <Blackspot X="-22.67361" Y="6713.58936" Z="49.65601" Radius="4.5" />
    <Blackspot X="-23.1462841" Y="6708.165" Z="46.8479156" Radius="4.5" />
    <Blackspot X="-20.9105225" Y="6706.44531" Z="47.11523" Radius="4.5" />
    <Blackspot X="-19.1509075" Y="6705.015" Z="47.1774025" Radius="4.5" />
    <Blackspot X="-17.27232" Y="6703.562" Z="47.012085" Radius="4.5" />
    <Blackspot X="-14.7849817" Y="6702.978" Z="47.1986961" Radius="4.5" />
    <Blackspot X="-13.2156658" Y="6701.78955" Z="46.80121" Radius="4.5" />
    <Blackspot X="-10.5815525" Y="6700.68652" Z="46.676796" Radius="4.5" />
    <Blackspot X="-7.455841" Y="6699.835" Z="48.6674728" Radius="4.5" />
    <Blackspot X="-6.846608" Y="6698.07764" Z="49.7911263" Radius="4.5" />
    <Blackspot X="-5.90148544" Y="6696.39258" Z="50.56527" Radius="4.5" />
    <Blackspot X="2812.454" Y="6377.735" Z="215.227966" Radius="7" />
    <Blackspot X="-11.9736185" Y="5936.599" Z="0.19548744" Radius="8" />
    <Blackspot X="-722.209045" Y="7290.39844" Z="20.689249" Radius="12" />
    <Blackspot X="-163.694778" Y="7161.018" Z="7.441296" Radius="15" />
    <Blackspot X="-563.234253" Y="7486.928" Z="86.68256" Radius="10" />
    <Blackspot X="-754.9315" Y="7289.968" Z="15.2590923" Radius="21" />
    <Blackspot X="-217.947845" Y="7155.20166" Z="7.43502855" Radius="12" />
    <Blackspot X="99.5783539" Y="6763.194" Z="46.29018" Radius="6" />
  </Blackspots>
  <BlackGuids />
  <EasyQuests>
    <EasyQuest>
      <Name>+FlightMastersWhistle</Name>
      <QuestId />
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>//FLIGHT MASTERS WHISTLE START
public sealed class FlightMastersWhistle : wManager.Wow.Class.QuestClass
{
	uint whistleId = 141605;

	public FlightMastersWhistle()
	{
		Name = "+FlightMastersWhistle";
		QuestId.AddRange(new[] { 0 });
		Step = new System.Collections.Generic.List&lt;int&gt; { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
		StepAutoDetect = new[] { false, false, false, false, false, false, false, false, false, false };
		PickUpQuestOnItem = false;
		PickUpQuestOnItemID = 0;
		GossipOptionItem = 1;
		WoWClass = wManager.Wow.Enums.WoWClass.None;
		MinLevel = 0;
		MaxLevel = 999;
		RequiredQuest = 0;
	}

	public override bool CanConditions()
	{
		return WorldQuest.Whistle.Can();
	}

	public override bool IsComplete()
	{
		return !WorldQuest.Whistle.Can();
	}

	public override bool IsCompleted()
	{
		return IsComplete();
	}

	public override bool HasQuest()
	{
		return CanConditions();
	}

	public override bool Pulse()
	{
		WorldQuest.Whistle.Use();
		return true;
	}

}
//FLIGHT MASTERS WHISTLE END</Code>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>+Travel To Azsuna</Name>
      <QuestId />
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.Travel.ToZone(WorldQuest.MapId.Azsuna);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>DANGER: Chief Treasurer Jabrill</Name>
      <QuestId>
        <int>43121</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(-1582.561, 5975.03, 1.495756, "None");
		var mobs = new List&lt;int&gt;() {
			109677, // http://www.wowhead.com/npc=109677/chief-treasurer-jabrill
		};
		WorldQuest.TryKillElite(campPosition, mobs);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.CompleteGroup(this);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>DANGER: Deepclaw</Name>
      <QuestId>
        <int>43175</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(-954.3042, 6130.419, 6.511233, "None");
		var mobs = new List&lt;int&gt;() 
		{
			109702, // Deepclaw
		};
		WorldQuest.TryKillElite(campPosition, mobs);
		return true;
</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.CompleteGroup(this);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>DEADLY: Withered J'im (Raid)</Name>
      <QuestId>
        <int>44287</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var enterPosition = new Vector3(-1500.85, 6535.819, 8.422263, "None");
		var campPosition = new Vector3(-1691.865, 6379.422, 58.84177, "None");
		if (ObjectManager.Me.Position.DistanceTo(enterPosition) &gt; 400)
		{
			enterPosition = robotManager.Helpful.Math.GetRandomPointInCircle(enterPosition, 9);
			GoToTask.ToPosition(enterPosition);
		}
		var mobs = new List&lt;int&gt;() { 102075 };
		WorldQuest.TryKillRaid(campPosition, mobs);
		return true;
</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.CanRaid(44287);</CanCondition>
      <IsCompleteCondition>return WorldQuest.CompleteRaid(44287);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Go from Dead Man's Bay cave</Name>
      <QuestId />
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>public sealed class GofromDeadMansBaycave : QuestClass
{
	public GofromDeadMansBaycave()
	{
		Name = "Go from Dead Man's Bay cave";
		QuestId.AddRange(new[] { 0 });
		Step = new List&lt;int&gt; { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
		StepAutoDetect = new[] { false, false, false, false, false, false, false, false, false, false };
		PickUpQuestOnItem = false;
		PickUpQuestOnItemID = 0;
		GossipOptionItem = 1;
		WoWClass = wManager.Wow.Enums.WoWClass.None;
		MinLevel = 0;
		MaxLevel = 999;
		RequiredQuest = 0;
	}

	public override bool CanConditions()
	{
		var pathStart = path[0];
		var pathEnd = path[path.Count - 2];
		var maxDist = pathStart.DistanceTo(pathEnd);
		var result = ObjectManager.Me.IsIndoors &amp;&amp; ObjectManager.Me.Position.DistanceTo(pathStart) &lt; maxDist;
		return result;
	}

	public override bool IsComplete()
	{
		var pathStart = path[0];
		var pathEnd = path[path.Count - 2];
		var maxDist = pathStart.DistanceTo(pathEnd);
		var result = !ObjectManager.Me.IsIndoors || ObjectManager.Me.Position.DistanceTo(pathStart) &gt; maxDist;
		if (result)
			MovementManager.StopMove();

		return result;
	}

	public override bool IsCompleted()
	{
		return IsComplete();
	}

	public override bool HasQuest()
	{
		return CanConditions();
	}

	public override bool Pulse()
	{
		WorldQuest.MovePath(path);
		return true;
	}

	List&lt;Vector3&gt; path = new List&lt;Vector3&gt;() {
new Vector3(-1306.326f, 5823.356f, -0.3795076f, "None"),
new Vector3(-1305.404f, 5817.866f, -0.4883254f, "None"),
new Vector3(-1305.379f, 5814.325f, 0.06297135f, "None"),
new Vector3(-1305.353f, 5810.771f, 1.199759f, "None"),
new Vector3(-1305.326f, 5807.102f, 2.011991f, "None"),
new Vector3(-1305.144f, 5800.011f, 2.758776f, "None"),
new Vector3(-1304.974f, 5796.453f, 2.67634f, "None"),
new Vector3(-1304.881f, 5792.927f, 1.71443f, "None"),
new Vector3(-1305.108f, 5789.33f, 1.160074f, "None"),
};
}</Code>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Go from Mak'rana</Name>
      <QuestId />
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>public sealed class GofromMakrana : QuestClass
{
	public GofromMakrana()
	{
		Name = "Go from Mak'rana";
		QuestId.AddRange(new[] { 0 });
		Step = new List&lt;int&gt; { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
		StepAutoDetect = new[] { false, false, false, false, false, false, false, false, false, false };
		PickUpQuestOnItem = false;
		PickUpQuestOnItemID = 0;
		GossipOptionItem = 1;
		WoWClass = wManager.Wow.Enums.WoWClass.None;
		MinLevel = 0;
		MaxLevel = 999;
		RequiredQuest = 0;
	}

	public override bool CanConditions()
	{
		var pathStart = path[0];
		var pathEnd = path[path.Count - 2];
		var maxDist = pathStart.DistanceTo(pathEnd);
		var result = ObjectManager.Me.IsIndoors &amp;&amp; ObjectManager.Me.Position.DistanceTo(pathStart) &lt; maxDist;
		return result;
	}

	public override bool IsComplete()
	{
		var pathStart = path[0];
		var pathEnd = path[path.Count - 2];
		var maxDist = pathStart.DistanceTo(pathEnd);
		var result = !ObjectManager.Me.IsIndoors || ObjectManager.Me.Position.DistanceTo(pathStart) &gt; maxDist;
		if (result)
			MovementManager.StopMove();

		return result;
	}

	public override bool IsCompleted()
	{
		return IsComplete();
	}

	public override bool HasQuest()
	{
		return CanConditions();
	}

	public override bool Pulse()
	{
		WorldQuest.MovePath(path);
		return true;
	}

	List&lt;Vector3&gt; path = new List&lt;Vector3&gt;() {
		new Vector3(-971.553f, 5622.643f, 5.017526f, "None"),
		new Vector3(-969.3546f, 5624.986f, 3.43235f, "None"),
		new Vector3(-966.1342f, 5628.108f, 2.305355f, "Swimming"),
		new Vector3(-962.6696f, 5631.059f, 1.391932f, "Swimming"),
		new Vector3(-959.1407f, 5633.998f, 0.1019199f, "Swimming"),
		new Vector3(-955.6911f, 5636.928f, -1.062922f, "Swimming"),
		new Vector3(-952.1511f, 5639.908f, -1.875843f, "Swimming"),
		new Vector3(-948.5587f, 5642.933f, -2.681594f, "Swimming"),
		new Vector3(-944.9984f, 5645.931f, -3.480158f, "Swimming"),
		new Vector3(-941.4524f, 5648.917f, -4.275528f, "Swimming"),
		new Vector3(-937.8672f, 5651.935f, -5.079682f, "Swimming"),
		new Vector3(-934.3312f, 5654.916f, -5.853639f, "Swimming"),
		new Vector3(-930.9535f, 5658.141f, -6.427295f, "Swimming"),
		new Vector3(-927.6283f, 5661.395f, -6.836153f, "Swimming"),
		new Vector3(-924.2525f, 5664.695f, -7.215425f, "Swimming"),
		new Vector3(-920.7533f, 5667.873f, -7.250795f, "Swimming"),
		new Vector3(-917.2032f, 5671.057f, -7.274598f, "Swimming"),
		new Vector3(-913.9154f, 5674.379f, -7.340318f, "Swimming"),
		new Vector3(-910.5762f, 5677.835f, -7.460801f, "Swimming"),
		new Vector3(-907.3552f, 5681.168f, -7.581052f, "Swimming"),
		new Vector3(-904.0969f, 5684.662f, -7.605716f, "Swimming"),
		new Vector3(-901.5991f, 5688.633f, -7.274892f, "Swimming"),
		new Vector3(-899.7181f, 5692.787f, -6.711943f, "Swimming"),
		new Vector3(-897.8695f, 5697.208f, -6.029501f, "Swimming"),
		new Vector3(-896.0959f, 5701.452f, -5.373652f, "Swimming"),
		new Vector3(-894.2603f, 5705.851f, -4.794986f, "Swimming"),
		new Vector3(-892.666f, 5710.182f, -4.592954f, "Swimming"),
		new Vector3(-891.4439f, 5714.705f, -3.492041f, "Swimming"),
		new Vector3(-891.7062f, 5719.09f, -2.093535f, "Swimming"),
		new Vector3(-892.8281f, 5723.559f, -1.425604f, "Swimming"),
		new Vector3(-895.2367f, 5727.446f, -1.426556f, "Swimming"),
		new Vector3(-898.7272f, 5731.213f, -1.309607f, "None"),
		new Vector3(-901.7865f, 5733.518f, 0.06708351f, "None"),
	};
}</Code>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Heads of the Fleet 1</Name>
      <QuestId>
        <int>42624</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(-1201.207, 5820.89, 10.98679, "None");
		if (ObjectManager.Me.Position.DistanceTo(campPosition) &gt; 10)
		{
			//Logging.Write("Move to camp");
			campPosition = robotManager.Helpful.Math.GetRandomPointInCircle(campPosition, 9);
			GoToTask.ToPosition(campPosition);
		}
		var path = new List&lt;Vector3&gt;() {
			new Vector3(-1200.574f, 5822.09f, 10.81679f, "None"),
			new Vector3(-1198.528f, 5816.088f, 11.4113f, "None"),
			new Vector3(-1197.659f, 5809.276f, 11.76453f, "None"),
			new Vector3(-1198.984f, 5806.083f, 13.77146f, "None"),
			new Vector3(-1201.396f, 5803.467f, 17.59775f, "None"),
		};
		MovementManager.Go(path);
		var timer = new robotManager.Helpful.Timer(15 * 1000);
		while (MovementManager.InMovement &amp;&amp; !timer.IsReady)
		{
			//Logging.Write("Move to mob");
			Thread.Sleep(1000);
		}

		var modId = 108137;
		var mobEntry = ObjectManager.GetNearestWoWUnit(ObjectManager.GetWoWUnitByEntry(modId));
		if (mobEntry != null &amp;&amp; mobEntry.IsAlive &amp;&amp; mobEntry.IsAttackable &amp;&amp; mobEntry.IsValid)
		{
			//Logging.Write("Attack mob");
			Fight.StartFight(mobEntry.Guid);
		}
		//Logging.Write("pulse end");
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(42624);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(42624, 1);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Heads of the Fleet 2</Name>
      <QuestId>
        <int>42624</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-1251.475" Y="5905.858" Z="1.094423" />
        </HotSpots>
        <EntryTarget>
          <int>108212</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(42624);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(42624, 2);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Heads of the Fleet 3</Name>
      <QuestId>
        <int>42624</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-1304.28" Y="5825.359" Z="-0.3960066" />
        </HotSpots>
        <EntryTarget>
          <int>108174</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(42624);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(42624, 3);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Heads of the Fleet 4</Name>
      <QuestId>
        <int>42624</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-1504.222" Y="6046.151" Z="5.533989" />
        </HotSpots>
        <EntryTarget>
          <int>108186</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(42624);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(42624, 4);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Investigation at Mak'rana 1</Name>
      <QuestId>
        <int>42021</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-822.4014" Y="5763.458" Z="2.4354" />
          <Vector3 X="-805.0746" Y="5707.562" Z="5.013239" />
          <Vector3 X="-756.5326" Y="5788.686" Z="1.449833" />
          <Vector3 X="-865.0078" Y="5883.709" Z="2.03125" />
        </HotSpots>
        <EntryTarget>
          <int>89053</int>
          <int>89286</int>
          <int>104816</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(42021);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(42021, 1);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Investigation at Mak'rana 2</Name>
      <QuestId>
        <int>42021</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-822.4014" Y="5763.458" Z="2.4354" />
          <Vector3 X="-805.0746" Y="5707.562" Z="5.013239" />
          <Vector3 X="-760.1035" Y="5794.446" Z="2.674932" />
          <Vector3 X="-865.0078" Y="5883.709" Z="2.03125" />
        </HotSpots>
        <EntryTarget>
          <int>89284</int>
          <int>89283</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(42021);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(42021, 2);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Investigation at Mak'rana 3</Name>
      <QuestId>
        <int>42021</int>
      </QuestId>
      <QuestType>InteractWithNpc</QuestType>
      <QuestClass xsi:type="InteractWithNpcEasyQuestClass">
        <HotSpots>
          <Vector3 X="-848.6532" Y="5778.099" Z="2.061684" />
          <Vector3 X="-805.0746" Y="5707.562" Z="5.013239" />
          <Vector3 X="-758.3195" Y="5791.597" Z="2.204886" />
          <Vector3 X="-865.0078" Y="5883.709" Z="2.03125" />
        </HotSpots>
        <GossipOptionNpcInteractWith>1</GossipOptionNpcInteractWith>
        <Macro />
        <IgnoreIfDead>false</IgnoreIfDead>
        <EntryIdTarget>
          <int>89290</int>
        </EntryIdTarget>
        <Range>4.5</Range>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(42021);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(42021, 3);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Investigation at Mak'rana 4</Name>
      <QuestId>
        <int>42021</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public class InvestigationatMakrana4 : QuestClass
{
	List&lt;Vector3&gt; _pathInside = new List&lt;Vector3&gt;()
	{
		new Vector3(-822.231f, 5760.954f, 2.137251f, "None"),
		new Vector3(-825.682f, 5758.053f, -0.02781575f, "None"),
		new Vector3(-829.0135f, 5754.866f, -3.48205f, "Swimming"),
		new Vector3(-832.1215f, 5751.777f, -5.185045f, "Swimming"),
		new Vector3(-835.3763f, 5748.487f, -5.967247f, "Swimming"),
		new Vector3(-838.6512f, 5745.173f, -6.736954f, "Swimming"),
		new Vector3(-841.9185f, 5741.817f, -7.214794f, "Swimming"),
		new Vector3(-845.196f, 5738.451f, -7.687904f, "Swimming"),
		new Vector3(-848.4506f, 5735.108f, -8.157702f, "Swimming"),
		new Vector3(-851.7544f, 5731.714f, -8.634598f, "Swimming"),
		new Vector3(-855.0811f, 5728.297f, -9.114804f, "Swimming"),
		new Vector3(-858.3226f, 5724.968f, -9.58271f, "Swimming"),
		new Vector3(-861.5576f, 5721.646f, -10.04967f, "Swimming"),
		new Vector3(-864.8411f, 5718.234f, -10.41188f, "Swimming"),
		new Vector3(-868.1442f, 5714.826f, -10.28189f, "Swimming"),
		new Vector3(-871.5035f, 5711.491f, -10.01636f, "Swimming"),
		new Vector3(-874.8638f, 5708.301f, -9.741063f, "Swimming"),
		new Vector3(-878.3984f, 5705.011f, -9.796755f, "Swimming"),
		new Vector3(-881.833f, 5701.861f, -9.79501f, "Swimming"),
		new Vector3(-885.3115f, 5698.661f, -9.76201f, "Swimming"),
		new Vector3(-888.8282f, 5695.425f, -9.728646f, "Swimming"),
		new Vector3(-892.2649f, 5692.263f, -9.696042f, "Swimming"),
		new Vector3(-895.7781f, 5689.03f, -9.662712f, "Swimming"),
		new Vector3(-899.2354f, 5685.879f, -9.511119f, "Swimming"),
		new Vector3(-902.7277f, 5682.816f, -8.782944f, "Swimming"),
		new Vector3(-906.2485f, 5679.727f, -8.020086f, "Swimming"),
		new Vector3(-909.7762f, 5676.631f, -7.255711f, "Swimming"),
		new Vector3(-913.2375f, 5673.593f, -6.505757f, "Swimming"),
		new Vector3(-916.7941f, 5670.487f, -5.739769f, "Swimming"),
		new Vector3(-920.5111f, 5667.709f, -4.893147f, "Swimming"),
		new Vector3(-924.1814f, 5664.944f, -4.033175f, "Swimming"),
		new Vector3(-927.8851f, 5662.154f, -3.165385f, "Swimming"),
		new Vector3(-931.5999f, 5659.355f, -2.294989f, "Swimming"),
		new Vector3(-935.3035f, 5656.565f, -1.427199f, "Swimming"),
		new Vector3(-939.022f, 5653.764f, -0.555934f, "Swimming"),
		new Vector3(-942.722f, 5650.977f, 0.3109879f, "Swimming"),
		new Vector3(-946.4404f, 5648.176f, 1.182253f, "Swimming"),
		new Vector3(-950.1516f, 5645.38f, 2.05178f, "Swimming"),
		new Vector3(-953.9273f, 5642.711f, 2.885816f, "Swimming"),
		new Vector3(-957.8092f, 5640.055f, 3.269648f, "Swimming"),
		new Vector3(-961.6515f, 5637.455f, 3.268891f, "Swimming"),
		new Vector3(-965.491f, 5634.859f, 3.13131f, "Swimming"),
		new Vector3(-969.4021f, 5632.214f, 2.391967f, "Swimming"),
		new Vector3(-973.1392f, 5630.054f, 2.988882f, "Swimming"),
		new Vector3(-976.3364f, 5628.3f, 4.557153f, "None"),
	};
	Vector3 _campPosition = new Vector3(-974.6204, 5624.589, 4.759759, "None");
	List&lt;int&gt; _mobs = new List&lt;int&gt;()
	{
		//89350, //Oublion
		89287, //Queen Kraklaa
	};
	public InvestigationatMakrana4()
	{
		Name = "Investigation at Mak'rana 4";
		QuestId.Add(42021);
		Step.AddRange(new[] { 1, 1, 1, 1 });
	}
	public override bool Pulse()
	{
		if (ObjectManager.Me.IsIndoors &amp;&amp; ObjectManager.Me.Position.DistanceTo(_campPosition) &lt; 50)
		{

			WorldQuest.TryKill(_campPosition, _mobs, 95, 10);
			return true;
		}

		if (ObjectManager.Me.Position.DistanceTo(_pathInside[0]) &gt; 5)
		{
			GoToTask.ToPosition(_pathInside[0]);
			return true;
		}
		wManager.wManagerSetting.CurrentSetting.UseFlyingMount = false;
		wManager.wManagerSetting.CurrentSetting.UseGroundMount = false;
		wManager.wManagerSetting.CurrentSetting.UseMount = false;
		wManager.wManagerSetting.CurrentSetting.AquaticMountName = "";
		MountTask.DismountMount();
		WorldQuest.MovePath(_pathInside);
		return true;
	}
	public override bool HasQuest()
	{
		return true;
	}
	public override bool IsComplete()
	{
		return WorldQuest.Complete(this, 4);
	}
}
</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(42021);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(42021, 4);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Piracy Doesn't Pay 1</Name>
      <QuestId>
        <int>42623</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-1510.638" Y="6034.578" Z="4.319814" />
          <Vector3 X="-1514.606" Y="6001.12" Z="3.272866" />
          <Vector3 X="-1378.016" Y="5783.722" Z="1.038423" />
          <Vector3 X="-1349.418" Y="5785.801" Z="1.989591" />
          <Vector3 X="-1383.266" Y="5915.311" Z="4.435417" />
          <Vector3 X="-1255.554" Y="5830.276" Z="8.178862" />
          <Vector3 X="-1228.563" Y="5867.321" Z="9.806455" />
        </HotSpots>
        <EntryTarget>
          <int>108153</int>
          <int>108139</int>
          <int>108146</int>
          <int>108133</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(42623);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(42623, 1);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Piracy Doesn't Pay 2</Name>
      <QuestId>
        <int>42623</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		uint buffKeg = 214133;

		var objectKeg = 250867;
		var kegPlaces = new List&lt;Vector3&gt;()
		{
			new Vector3(-1274.356, 5864.375, 12.59145, "None"),
			new Vector3(-1332.16, 5889.444, 19.33894, "None"),
			new Vector3(-1387.074, 5910.816, 3.68103, "None"),
			new Vector3(-1392.795, 5981.913, 1.714875, "None"),
			new Vector3(-1445.396, 5982.104, 6.913754, "None"),
		};
		if (!MovementManager.InMovement)
		{
			var randomPos = kegPlaces[robotManager.Helpful.Others.Random(0, kegPlaces.Count - 1)];
			//Logging.Write("seeking keg");
			wManager.Wow.Bot.Tasks.GoToTask.ToPositionAndIntecractWithGameObject(randomPos, objectKeg);
			Thread.Sleep(Usefuls.Latency * 3);
			//Logging.Write("keg must be found");
		}

		if (ObjectManager.Me.HaveBuff(buffKeg))
		{
			//Logging.Write("drop kegg");
			wManager.Wow.Helpers.Lua.LuaDoString("ExtraActionButton1:Click()");
			Thread.Sleep(Usefuls.Latency);
			wManager.Wow.Helpers.ClickOnTerrain.Pulse(ObjectManager.Me.Position);
			wManager.Wow.Helpers.Usefuls.WaitIsCasting();
			return true;
		}

		//Logging.Write(" pulse end buff=" + ObjectManager.Me.HaveBuff(buffKeg));
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(42623);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(42623, 2);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Slab of Bacon</Name>
      <QuestId>
        <int>41552</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-1317.97" Y="5561.53" Z="1.114569" />
        </HotSpots>
        <EntryTarget>
          <int>103784</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.CanCooking(41552);</CanCondition>
      <IsCompleteCondition>return WorldQuest.CompleteCooking(41552);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Eternal Mages</Name>
      <QuestId>
        <int>42711</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-1072.069" Y="6088.493" Z="40.14105" />
          <Vector3 X="-1080.299" Y="6154.508" Z="41.91592" />
          <Vector3 X="-1079.768" Y="6048.96" Z="40.32988" />
        </HotSpots>
        <EntryTarget>
          <int>108339</int>
          <int>108340</int>
          <int>108337</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(42711);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(42711);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
  </EasyQuests>
  <Script>camelot10\Libs\WorldQuest.cs</Script>
  <OffMeshConnections />
</EasyQuestProfile>