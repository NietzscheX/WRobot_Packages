<?xml version="1.0" encoding="utf-16"?>
<EasyQuestProfile xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <QuestsSorted>
    <QuestsSorted Action="RunCode" NameClass="// Map ID = Valsharah  //  &#xD;&#xA;robotManager.Helpful.Var.SetVar(&quot;WorldQuestCurrentMapId&quot;, 1018);" />
    <QuestsSorted Action="WriteLog" NameClass="Val'sharah SE-S-W-SW-NW-N-NE-(C)-E profile start" />
    <QuestsSorted Action="Pulse" NameClass="TravelToValsharah" />
    <QuestsSorted Action="None" NameClass=" === CENTER === " />
    <QuestsSorted Action="Pulse" NameClass="NezvalInvasionGroup" />
    <QuestsSorted Action="Pulse" NameClass="BrimstoneDestroyerMining" />
    <QuestsSorted Action="Pulse" NameClass="LostWisp" />
    <QuestsSorted Action="Pulse" NameClass="SuppliesNeededDreamleafHerbalism" />
    <QuestsSorted Action="Pulse" NameClass="SuppliesNeededDreamleafHerbalismTurnIn" />
    <QuestsSorted Action="Pulse" NameClass="WorkOrderDreamleafHerbalism" />
    <QuestsSorted Action="Pulse" NameClass="WorkOrderDreamleafHerbalismTurnIn" />
    <QuestsSorted Action="Pulse" NameClass="BarrelsoFun" />
    <QuestsSorted Action="Pulse" NameClass="TempleDefense3" />
    <QuestsSorted Action="Pulse" NameClass="TempleDefense2" />
    <QuestsSorted Action="Pulse" NameClass="TempleDefense1" />
    <QuestsSorted Action="Pulse" NameClass="AgmozuulInvasionGroup" />
    <QuestsSorted Action="Pulse" NameClass="ThalxurInvasionGroup" />
    <QuestsSorted Action="Pulse" NameClass="WANTEDThondrax" />
    <QuestsSorted Action="Pulse" NameClass="WANTEDThondrax2" />
    <QuestsSorted Action="Pulse" NameClass="IntotheNightmare" />
    <QuestsSorted Action="Pulse" NameClass="PurgeoftheNightmare" />
    <QuestsSorted Action="Pulse" NameClass="FlightMastersWhistle" />
    <QuestsSorted Action="None" NameClass=" === E === " />
    <QuestsSorted Action="WriteLog" NameClass="Val'sharah SE-S-W-SW-NW-N-NE-(C)-E profile complete. Loading next profile." />
    <QuestsSorted Action="LoadProfile" NameClass="camelot10\Legion world quests\Val'sharah\[110] Val'sharah E.xml" />
  </QuestsSorted>
  <NpcQuest>
    <NPCQuest Id="106901" Name="Sylvia Hartshorn" GameObject="false">
      <PickUpQuests />
      <TurnInQuests>
        <int>42170</int>
        <int>41293</int>
        <int>41292</int>
      </TurnInQuests>
      <Position X="2274.2" Y="6592.066" Z="138.8772" Type="Flying" />
    </NPCQuest>
  </NpcQuest>
  <Npc>
    <Npc>
      <Position X="2275.108" Y="6575.564" Z="142.8352" />
      <Entry>266416</Entry>
      <Name>Mailbox</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Mailbox</Type>
      <ContinentId>Troll_Raid</ContinentId>
    </Npc>
    <Npc>
      <Position X="2319.413" Y="6611.955" Z="140.3528" />
      <Entry>93464</Entry>
      <Name>Callista Swiftglaive</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Repair</Type>
      <ContinentId>Troll_Raid</ContinentId>
    </Npc>
    <Npc>
      <Position X="2319.413" Y="6611.955" Z="140.3528" />
      <Entry>93464</Entry>
      <Name>Callista Swiftglaive</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Vendor</Type>
      <ContinentId>Troll_Raid</ContinentId>
    </Npc>
  </Npc>
  <Blackspots>
    <Blackspot X="3146.086" Y="7266.757" Z="46.64383" Radius="4.5" />
    <Blackspot X="3142.17163" Y="7268.50732" Z="46.56525" Radius="4.5" />
    <Blackspot X="3140.24316" Y="7269.603" Z="48.16084" Radius="4.5" />
    <Blackspot X="3138.153" Y="7270.972" Z="49.00696" Radius="4.5" />
    <Blackspot X="3137.63867" Y="7271.38037" Z="49.23264" Radius="4.5" />
    <Blackspot X="3135.52173" Y="7271.71973" Z="51.5348" Radius="4.5" />
    <Blackspot X="2319.98853" Y="6611.911" Z="140.352463" Radius="15" />
    <Blackspot X="2971.40283" Y="6461.225" Z="206.487732" Radius="15" />
    <Blackspot X="2963.90723" Y="6485.22949" Z="206.804871" Radius="15" />
    <Blackspot X="2957.51855" Y="6504.268" Z="206.804871" Radius="15" />
    <Blackspot X="2953.84521" Y="6518.69971" Z="206.804871" Radius="15" />
    <Blackspot X="2638.9856" Y="6558.17871" Z="148.2571" Radius="5" />
    <Blackspot X="2321.55029" Y="6612.485" Z="140.351974" Radius="30" />
    <Blackspot X="2528.405" Y="6861.30957" Z="144.632248" Radius="15" />
    <Blackspot X="3743.30542" Y="7822.881" Z="0.000902950764" Radius="200" />
    <Blackspot X="3506.508" Y="7803.71" Z="19.1566658" Radius="15" />
    <Blackspot X="3521.11548" Y="7873.169" Z="8.709135E-05" Radius="55" />
    <Blackspot X="1699.90271" Y="6601.2417" Z="86.76433" Radius="15" />
    <Blackspot X="2315.36743" Y="7547.647" Z="1.95514834" Radius="7" />
    <Blackspot X="2240.899" Y="6525.57" Z="149.156754" Radius="15" />
    <Blackspot X="2383.23364" Y="7480.35742" Z="7.79917574" Radius="150" />
    <Blackspot X="3517.587" Y="7806.50732" Z="12.8943205" Radius="35" />
    <Blackspot X="3560.90527" Y="7661.864" Z="0.000384300947" Radius="75" />
    <Blackspot X="2548.50952" Y="6403.021" Z="178.9609" Radius="15" />
  </Blackspots>
  <BlackGuids />
  <EasyQuests>
    <EasyQuest>
      <Name>+FlightMastersWhistle</Name>
      <QuestId />
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>//FLIGHT MASTERS WHISTLE START
public sealed class FlightMastersWhistle : wManager.Wow.Class.QuestClass
{
	uint whistleId = 141605;

	public FlightMastersWhistle()
	{
		Name = "+FlightMastersWhistle";
		QuestId.AddRange(new[] { 0 });
		Step = new System.Collections.Generic.List&lt;int&gt; { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
		StepAutoDetect = new[] { false, false, false, false, false, false, false, false, false, false };
		PickUpQuestOnItem = false;
		PickUpQuestOnItemID = 0;
		GossipOptionItem = 1;
		WoWClass = wManager.Wow.Enums.WoWClass.None;
		MinLevel = 0;
		MaxLevel = 999;
		RequiredQuest = 0;
	}

	public override bool CanConditions()
	{
		return WorldQuest.Whistle.Can();
	}

	public override bool IsComplete()
	{
		return !WorldQuest.Whistle.Can();
	}

	public override bool IsCompleted()
	{
		return IsComplete();
	}

	public override bool HasQuest()
	{
		return CanConditions();
	}

	public override bool Pulse()
	{
		WorldQuest.Whistle.Use();
		return true;
	}

}
//FLIGHT MASTERS WHISTLE END</Code>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>		var timeLeft = wManager.Wow.Helpers.Lua.LuaDoString&lt;double&gt;("local startTime, duration, enable = GetItemCooldown(" + 141605 + "); return startTime + duration - GetTime();");
		return !ObjectManager.Me.IsIndoors &amp;&amp; timeLeft &lt;= 0;</CanCondition>
      <IsCompleteCondition>		var timeLeft = wManager.Wow.Helpers.Lua.LuaDoString&lt;double&gt;("local startTime, duration, enable = GetItemCooldown(" + 141605 + "); return startTime + duration - GetTime();");
		return ObjectManager.Me.IsIndoors || timeLeft &gt; 0;</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>+Travel To Val'sharah</Name>
      <QuestId />
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.Travel.ToZone(WorldQuest.MapId.Valsharah);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Agmozuul (Invasion Group)</Name>
      <QuestId>
        <int>45922</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(2345.842, 6525.531, 142.3735, "None");
		var mobs = new List&lt;int&gt;() {
			117039, // http://www.wowhead.com/npc=117039/agmozuul
		};
		WorldQuest.TryKillElite(campPosition, mobs);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.CompleteInvasionGroup(this);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Barrels o' Fun</Name>
      <QuestId>
        <int>45070</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var startPosition = new Vector3(2883.835, 6731.771, 219.5374, "None");
		var questId = 45070;
		if (!Quest.HasQuest(questId) || ObjectManager.Me.Position.DistanceTo(startPosition) &gt; 50)
		{
			GoToTask.ToPosition(startPosition);
			return true;
		}

		if (Lua.LuaDoString&lt;bool&gt;("return ExtraActionButton1:IsVisible();"))
		{
			wManager.Wow.Helpers.Lua.LuaDoString("ExtraActionButton1:Click()");
			Thread.Sleep(Others.Random(1300, 2600));
		}

		var barrel = ObjectManager.GetObjectWoWUnit().FirstOrDefault(u =&gt; u.IsValid &amp;&amp; u.Entry == 115947
			&amp;&amp; u.GetDescriptorStartAddress &gt; 0 &amp;&amp; wManager.Wow.Memory.WowMemory.Memory.ReadUInt32(u.GetDescriptorStartAddress + (uint)wManager.Wow.Patchables.Descriptors.UnitFields.InteractSpellID) == 230877);

		if (barrel == null)
			return true;

		while (!barrel.IsGoodInteractDistance)
		{
			MovementManager.MoveTo(barrel);
			Thread.Sleep(1 * 1000);
		}

		Interact.InteractGameObject(barrel.GetBaseAddress);
		Thread.Sleep(3 * 1000);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(this);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(this);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Brimstone Destroyer (Mining)</Name>
      <QuestId>
        <int>41487</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(2940.763, 6880.246, 92.81075, "None");
		var corpseId = 247963;
		var mobId = 93237;

		if (ObjectManager.Me.Position.DistanceTo(campPosition) &gt; 100)
		{
			GoToTask.ToPosition(campPosition);
			return true;
		}

		var corpseEntry = ObjectManager.GetNearestWoWGameObject(ObjectManager.GetWoWGameObjectByEntry(corpseId));
		if (corpseEntry != null &amp;&amp; corpseEntry.IsValid)
		{
			GoToTask.ToPositionAndIntecractWithGameObject(corpseEntry.Position, corpseEntry.Entry);
			Thread.Sleep(3 * 1000);
			return true;
		}

		var mobEntry = ObjectManager.GetNearestWoWUnit(ObjectManager.GetWoWUnitByEntry(mobId));
		if (mobEntry != null &amp;&amp; mobEntry.IsValid &amp;&amp; mobEntry.IsAlive &amp;&amp; mobEntry.IsAttackable)
		{
			Interact.InteractGameObject(mobEntry.GetBaseAddress);
			Fight.StartFight(mobEntry.Guid);
			return true;
		}
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.CanMining(41487);</CanCondition>
      <IsCompleteCondition>return WorldQuest.CompleteMining(41487);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Into the Nightmare</Name>
      <QuestId>
        <int>42028</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="2569.917" Y="6408.098" Z="178.1032" />
          <Vector3 X="2564.871" Y="6376.73" Z="186.7793" />
          <Vector3 X="2597.547" Y="6380.802" Z="185.3893" />
          <Vector3 X="2571.592" Y="6323.515" Z="196.8689" />
          <Vector3 X="2504.448" Y="6277.326" Z="197.3097" />
          <Vector3 X="2502.743" Y="6307.407" Z="197.4841" />
          <Vector3 X="2597.919" Y="6283.546" Z="203.2473" />
        </HotSpots>
        <EntryTarget>
          <int>105902</int>
          <int>105826</int>
          <int>105823</int>
          <int>105807</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>25</ObjectiveCount1>
      <ObjectiveCount2>17</ObjectiveCount2>
      <ObjectiveCount3>13</ObjectiveCount3>
      <ObjectiveCount4>13</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(42028);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(42028);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Lost Wisp</Name>
      <QuestId>
        <int>44011</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif
public sealed class LostWisp : QuestClass
{
	Vector3 startPosition = new Vector3(2554.091, 6969.736, 151.2936, "None");
	List&lt;Vector3&gt; path = new List&lt;Vector3&gt;()
	{
		new Vector3(2583.931f, 6970.753f, 145.6227f, "None"),
		new Vector3(2580.219f, 6967.041f, 144.4227f, "None"),
		new Vector3(2577.778f, 6964.203f, 142.9954f, "None"),
		new Vector3(2574.886f, 6961.795f, 143.5116f, "None"),
		new Vector3(2571.197f, 6960.122f, 143.5111f, "None"),
		new Vector3(2567.526f, 6958.77f, 143.5112f, "None"),
		new Vector3(2563.736f, 6957.286f, 143.5111f, "None"),
		new Vector3(2560.6f, 6954.801f, 142.7938f, "None"),
		new Vector3(2558.101f, 6948.449f, 143.5355f, "None"),
		new Vector3(2557.184f, 6944.931f, 143.5582f, "None"),
		new Vector3(2556.847f, 6940.731f, 143.5808f, "None"),
		new Vector3(2557.673f, 6936.875f, 143.3044f, "None"),
		new Vector3(2559.381f, 6933.457f, 143.7932f, "None"),
		new Vector3(2561.428f, 6930.001f, 144.8661f, "None"),
		new Vector3(2562.632f, 6926.26f, 145.4075f, "None"),
		new Vector3(2562.017f, 6922.237f, 145.9075f, "None"),
		new Vector3(2561.301f, 6918.365f, 146.0148f, "None"),
		new Vector3(2561.891f, 6914.418f, 145.9564f, "None"),
		new Vector3(2562.008f, 6910.532f, 145.7076f, "None"),
		new Vector3(2560.197f, 6906.991f, 145.5774f, "None"),
		new Vector3(2557.551f, 6903.864f, 145.6276f, "None"),
		new Vector3(2554.71f, 6901.12f, 145.3839f, "None"),
		new Vector3(2551.631f, 6898.618f, 145.0558f, "None"),
		new Vector3(2548.443f, 6896.022f, 144.064f, "None"),
		new Vector3(2545.866f, 6893.114f, 143.5109f, "None"),
		new Vector3(2543.303f, 6890.011f, 143.5108f, "None"),
		new Vector3(2541.081f, 6886.645f, 143.511f, "None"),
		new Vector3(2539.57f, 6882.953f, 143.5603f, "None"),
		new Vector3(2538.428f, 6879.238f, 143.162f, "None"),
		new Vector3(2538.577f, 6872.668f, 143.5108f, "None"),
		new Vector3(2536.772f, 6869.173f, 143.5103f, "None"),
		new Vector3(2534.902f, 6865.603f, 143.5103f, "None"),
		new Vector3(2533.577f, 6862.3f, 143.511f, "None"),
		new Vector3(2533.158f, 6857.909f, 143.5108f, "None"),
		new Vector3(2534.948f, 6854.482f, 143.5103f, "None"),
		new Vector3(2537.844f, 6851.682f, 143.5116f, "None"),
		new Vector3(2541.187f, 6849.488f, 143.5106f, "None"),
		new Vector3(2544.804f, 6848.01f, 143.5116f, "None"),
		new Vector3(2548.559f, 6849.198f, 143.511f, "None"),
		new Vector3(2550.502f, 6852.54f, 143.511f, "None"),
		new Vector3(2552.669f, 6855.946f, 143.5116f, "None"),
		new Vector3(2555.49f, 6858.467f, 142.8866f, "None"),
		new Vector3(2559.443f, 6858.859f, 143.5115f, "None"),
		new Vector3(2564.119f, 6861.502f, 142.9936f, "None"),
		new Vector3(2567.098f, 6863.915f, 143.6663f, "None"),
		new Vector3(2571.034f, 6864.946f, 145.1629f, "None"),
		new Vector3(2574.904f, 6865.328f, 142.7515f, "None"),
		new Vector3(2578.895f, 6865.086f, 143.511f, "None"),
		new Vector3(2582.868f, 6864.802f, 143.5962f, "None"),
		new Vector3(2586.909f, 6864.565f, 144.6887f, "None"),
		new Vector3(2590.854f, 6864.687f, 145.2663f, "None"),
		new Vector3(2594.615f, 6865.941f, 145.6728f, "None"),
		new Vector3(2597.742f, 6868.29f, 145.4488f, "None"),
		new Vector3(2600.032f, 6871.609f, 145.3173f, "None"),
		new Vector3(2602.116f, 6875.051f, 144.9973f, "None"),
		new Vector3(2604.181f, 6878.476f, 145.494f, "None"),
		new Vector3(2606.316f, 6881.981f, 145.571f, "None"),
		new Vector3(2608.55f, 6884.771f, 145.5006f, "None"),
		new Vector3(2611.954f, 6887.42f, 145.4275f, "None"),
		new Vector3(2615.325f, 6889.406f, 147.1183f, "None"),
		new Vector3(2619.196f, 6890.619f, 145.5872f, "None"),
		new Vector3(2622.911f, 6891.699f, 145.6411f, "None"),
		new Vector3(2626.867f, 6892.732f, 146.1878f, "None"),
		new Vector3(2630.836f, 6893.891f, 146.8234f, "None"),
		new Vector3(2634.647f, 6895.107f, 147.4875f, "None"),
		new Vector3(2638.445f, 6896.632f, 147.7689f, "None"),
		new Vector3(2641.928f, 6898.419f, 146.8438f, "None"),
		new Vector3(2644.307f, 6901.98f, 146.6331f, "None"),
		new Vector3(2647.467f, 6903.869f, 146.0459f, "None"),
		new Vector3(2651.446f, 6904.806f, 146.2901f, "None"),
		new Vector3(2655.275f, 6905.784f, 147.1455f, "None"),
		new Vector3(2660.992f, 6910.005f, 146.7672f, "None"),
		new Vector3(2662.708f, 6913.341f, 146.186f, "None"),
		new Vector3(2664.307f, 6917.111f, 143.6155f, "None"),
		new Vector3(2665.566f, 6920.993f, 143.5116f, "None"),
		new Vector3(2666.655f, 6924.825f, 143.5117f, "None"),
		new Vector3(2668.131f, 6928.485f, 143.7283f, "None"),
		new Vector3(2669.597f, 6932.165f, 144.5805f, "None"),
		new Vector3(2668.974f, 6936.119f, 145.5143f, "None"),
		new Vector3(2666.859f, 6939.423f, 145.6277f, "None"),
		new Vector3(2664.386f, 6942.587f, 145.5309f, "None"),
		new Vector3(2662.92f, 6946.28f, 145.8168f, "None"),
		new Vector3(2661.597f, 6950.063f, 145.8679f, "None"),
		new Vector3(2660.366f, 6953.928f, 145.8833f, "None"),
	};
	public LostWisp()
	{
		Name = "Lost Wisp";
		QuestId.Add(44011);
		Step.Add(10);
	}
	static void Log(string text)
	{
		Logging.WriteDebug("[Lost Wisp] " + text);
	}
	WoWUnit Tree()
	{
		return ObjectManager.GetObjectWoWUnit().Where(u =&gt; u != null &amp;&amp; u.IsValid &amp;&amp; u.IsAlive &amp;&amp; (u.Entry == 111876 || u.Entry == 112247) &amp;&amp; u.GetDynamicFlags == 0).OrderBy(u =&gt; u.GetDistance).FirstOrDefault();
	}
	public override bool Pulse()
	{
		if (!ObjectManager.Me.PlayerUsingVehicle)
		{
			Log("need to mount wisp");
			wManager.wManagerSetting.ClearBlacklistOfCurrentProductSession();
			GoToTask.ToPosition(startPosition);
			return true;
		}

		var tree = Tree();
		if (tree != null &amp;&amp; tree.IsValid &amp;&amp; tree.GetDynamicFlags == 0) // flag = 256 - already used
		{
			if (tree.GetDistance2D &lt; 5)
			{
				Log("grow tree");
				MovementManager.StopMove();
				Thread.Sleep(Others.Random(300, 500));
				Questing.VehicleButton(1);
				Usefuls.WaitIsCasting();
				Thread.Sleep(Others.Random(1000, 2000));
				wManager.wManagerSetting.AddBlackList(tree.Guid, 3 * 60 * 1000);
				return true;
			}
			if (tree.GetDistance2D &lt; 10)
			{
				Log("try to reach tree");
				Questing.ClickMove(tree.Position, 5f);
				Thread.Sleep(Others.Random(1000, 2000));
				return true;
			}
			Log("move close to tree");
			var movePath = Questing.PathClampDirected(path, ObjectManager.Me.Position, tree.Position);
			Questing.PathFromNear(movePath, true, () =&gt; ObjectManager.Me.PlayerUsingVehicle);
			return true;
		}
		Log("move to end");
		Questing.PathFromNear(path, true, () =&gt; {
			var t = Tree();
			if (t != null &amp;&amp; t.IsValid)
			{
				Log("found better tree");
			}
			return true;
		});
		return true;
	}
	public override bool IsComplete()
	{
		return WorldQuest.Complete(this);
	}
	public override bool IsCompleted()
	{
		return false;
	}
	public override bool HasQuest()
	{
		return true;
	}
	bool PulseOLD()
	{
		var startPosition = new Vector3(2554.091, 6969.736, 151.2936, "None");
		if (!ObjectManager.Me.PlayerUsingVehicle)
		{
			//Logging.Write("need to get in area");
			wManager.wManagerSetting.ClearBlacklistOfCurrentProductSession();
			GoToTask.ToPosition(startPosition);
			return true;
		}
		var treeId = 112247;
		var mobEntry = ObjectManager.GetNearestWoWUnit(ObjectManager.GetWoWUnitByEntry(treeId));
		if (mobEntry != null &amp;&amp; mobEntry.IsAlive &amp;&amp; mobEntry.IsValid)
		{
			//Logging.Write("found tree. getting closer");
			GoToTask.ToPosition(mobEntry.Position);
			MovementManager.StopMove();
			Thread.Sleep(1 * 1000);
			//Logging.Write("cast Grow Tree");
			wManager.Wow.Helpers.Lua.RunMacroText("/click [overridebar][vehicleui][possessbar,@vehicle,exists]OverrideActionBarButton1");
			Usefuls.WaitIsCasting();
			Thread.Sleep(2000 + Usefuls.Latency);
			wManager.wManagerSetting.AddBlackList(mobEntry.Guid, 1000 * 1 * 60);
		}
		//Logging.Write("no tree found");
		return true;
	}
}</Code>
      </QuestClass>
      <ObjectiveCount1>10</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(44011);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(44011);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Nez'val (Invasion Group)</Name>
      <QuestId>
        <int>45925</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(2931.802, 7067.286, 39.38195, "None");
		var mobs = new List&lt;int&gt;() {
			117069, // http://www.wowhead.com/npc=117069/nezval
		};
		WorldQuest.TryKillElite(campPosition, mobs);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.CompleteInvasionGroup(this);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Purge of the Nightmare</Name>
      <QuestId>
        <int>43336</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="3147.745" Y="6159.41" Z="238.4144" />
          <Vector3 X="3220.892" Y="6116.326" Z="247.3061" />
          <Vector3 X="3158.046" Y="6181.627" Z="243.4008" />
          <Vector3 X="3171.979" Y="6173.351" Z="240.5631" />
          <Vector3 X="3097.945" Y="6094.512" Z="243.7778" />
          <Vector3 X="3129.004" Y="6093.798" Z="243.1488" />
          <Vector3 X="3253.337" Y="6065.672" Z="241.8946" />
          <Vector3 X="3193.362" Y="6050.009" Z="242.1954" />
        </HotSpots>
        <EntryIdObjects>
          <int>251766</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>17</ObjectiveCount3>
      <ObjectiveCount4>17</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(43336);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(43336);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Supplies Needed: Dreamleaf (Herbalism)</Name>
      <QuestId>
        <int>41293</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="2189.09" Y="6592.465" Z="125.8165" />
          <Vector3 X="2257.919" Y="6449.115" Z="144.1064" />
          <Vector3 X="2266.848" Y="6343.818" Z="143.8933" />
          <Vector3 X="2236.798" Y="6302.647" Z="133.1525" />
          <Vector3 X="2161.883" Y="6248.809" Z="127.0196" />
          <Vector3 X="2085.58" Y="6248.883" Z="126.129" />
          <Vector3 X="2036.567" Y="6302.276" Z="98.0404" />
          <Vector3 X="1992" Y="6383.905" Z="94.20088" />
          <Vector3 X="1928.424" Y="6392.403" Z="86.68057" />
          <Vector3 X="1874.576" Y="6430.427" Z="89.03474" />
          <Vector3 X="1776.931" Y="6435.066" Z="69.22683" />
          <Vector3 X="1727.546" Y="6469.977" Z="68.29572" />
          <Vector3 X="1715.603" Y="6537.99" Z="77.24824" />
          <Vector3 X="1868.527" Y="6657.523" Z="79.1826" />
          <Vector3 X="1983.019" Y="6753.124" Z="79.68142" />
          <Vector3 X="2025.556" Y="6777.861" Z="96.31859" />
          <Vector3 X="2109.208" Y="6833.332" Z="95.82102" />
          <Vector3 X="2210.03" Y="6830.048" Z="112.107" />
          <Vector3 X="2284.571" Y="6785.326" Z="134.4246" />
          <Vector3 X="2334.173" Y="6724.088" Z="133.2096" />
          <Vector3 X="2364.05" Y="6673.038" Z="142.4145" />
          <Vector3 X="2448.414" Y="6612.387" Z="136.3962" />
          <Vector3 X="2409.996" Y="6531.359" Z="150.0666" />
          <Vector3 X="2353.102" Y="6466.627" Z="146.968" />
        </HotSpots>
        <EntryIdObjects>
          <int>244775</int>
          <int>244776</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>40</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.CompleteHerbalism(41293, 1);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Supplies Needed: Dreamleaf (Herbalism) (Turn In)</Name>
      <QuestId>
        <int>41293</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public class SuppliesNeededDreamleafHerbalismTurnIn : QuestClass
{
	int _questID = 41293;
	public SuppliesNeededDreamleafHerbalismTurnIn()
	{
		Name = "Supplies Needed: Dreamleaf (Herbalism) (Turn In)";
		QuestId.Add(_questID);
		Step.AddRange(new[] { 40 });
	}
	public override bool CanConditions()
	{
		return WorldQuest.CompleteHerbalism(_questID, 1);
	}
	public override bool HasQuest()
	{
		return CanConditions();
	}
	public override bool IsComplete()
	{
		return WorldQuest.CompleteHerbalism(_questID);
	}
	public override bool IsCompleted()
	{
		return !CanConditions();
	}

	public override bool Pulse()
	{
		return TurnIn();
	}
}
</Code>
      </QuestClass>
      <ObjectiveCount1>40</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Temple Defense 1</Name>
      <QuestId>
        <int>41980</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="2901.977" Y="6474.251" Z="208.7325" />
          <Vector3 X="2850.456" Y="6452.769" Z="212.1585" />
          <Vector3 X="2852.03" Y="6455.676" Z="211.8899" />
        </HotSpots>
        <EntryTarget>
          <int>92788</int>
          <int>92789</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(41980);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(41980, 1);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Temple Defense 2</Name>
      <QuestId>
        <int>41980</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="2910.814" Y="6494.659" Z="206.6593" />
        </HotSpots>
        <EntryTarget>
          <int>92792</int>
          <int>92794</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(41980);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(41980, 2);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Temple Defense 3</Name>
      <QuestId>
        <int>41980</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="2887.139" Y="6431.172" Z="213.8566" />
        </HotSpots>
        <EntryTarget>
          <int>110896</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.Can(41980);</CanCondition>
      <IsCompleteCondition>return WorldQuest.Complete(41980, 3);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Thal'xur (Invasion Group)</Name>
      <QuestId>
        <int>45921</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(2345.208, 6841.496, 125.6605, "None");
		var mobs = new List&lt;int&gt;() {
			118016, // http://www.wowhead.com/npc=118016/thalxur
		};
		WorldQuest.TryKillElite(campPosition, mobs);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.CompleteInvasionGroup(this);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>WANTED: Thondrax</Name>
      <QuestId>
        <int>43633</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(3162.052, 6168.35, 242.7849, "None");
		var mobs = new List&lt;int&gt;() { 93205 };
		WorldQuest.TryKillElite(campPosition, mobs);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.CanGroup(43633);</CanCondition>
      <IsCompleteCondition>return WorldQuest.CompleteGroup(43633);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>WANTED: Thondrax 2</Name>
      <QuestId>
        <int>43459</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var campPosition = new Vector3(3162.052, 6168.35, 242.7849, "None");
		var mobs = new List&lt;int&gt;() { 93205 };
		WorldQuest.TryKillElite(campPosition, mobs);
		return true;
</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return WorldQuest.CanGroup(43459);</CanCondition>
      <IsCompleteCondition>return WorldQuest.CompleteGroup(43459);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Work Order: Dreamleaf (Herbalism)</Name>
      <QuestId>
        <int>41292</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="2189.09" Y="6592.465" Z="125.8165" />
          <Vector3 X="2257.919" Y="6449.115" Z="144.1064" />
          <Vector3 X="2266.848" Y="6343.818" Z="143.8933" />
          <Vector3 X="2236.798" Y="6302.647" Z="133.1525" />
          <Vector3 X="2161.883" Y="6248.809" Z="127.0196" />
          <Vector3 X="2085.58" Y="6248.883" Z="126.129" />
          <Vector3 X="2036.567" Y="6302.276" Z="98.0404" />
          <Vector3 X="1992" Y="6383.905" Z="94.20088" />
          <Vector3 X="1928.424" Y="6392.403" Z="86.68057" />
          <Vector3 X="1874.576" Y="6430.427" Z="89.03474" />
          <Vector3 X="1776.931" Y="6435.066" Z="69.22683" />
          <Vector3 X="1727.546" Y="6469.977" Z="68.29572" />
          <Vector3 X="1715.603" Y="6537.99" Z="77.24824" />
          <Vector3 X="1868.527" Y="6657.523" Z="79.1826" />
          <Vector3 X="1983.019" Y="6753.124" Z="79.68142" />
          <Vector3 X="2025.556" Y="6777.861" Z="96.31859" />
          <Vector3 X="2109.208" Y="6833.332" Z="95.82102" />
          <Vector3 X="2210.03" Y="6830.048" Z="112.107" />
          <Vector3 X="2284.571" Y="6785.326" Z="134.4246" />
          <Vector3 X="2334.173" Y="6724.088" Z="133.2096" />
          <Vector3 X="2364.05" Y="6673.038" Z="142.4145" />
          <Vector3 X="2448.414" Y="6612.387" Z="136.3962" />
          <Vector3 X="2409.996" Y="6531.359" Z="150.0666" />
          <Vector3 X="2353.102" Y="6466.627" Z="146.968" />
        </HotSpots>
        <EntryIdObjects>
          <int>244775</int>
          <int>244776</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>40</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return WorldQuest.CompleteHerbalism(41292, 1);</IsCompleteCondition>
      <RepeatableQuest>true</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Work Order: Dreamleaf (Herbalism) (Turn In)</Name>
      <QuestId>
        <int>41292</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public class WorkOrderDreamleafHerbalismTurnIn : QuestClass
{
	int _questID = 41292;
	public WorkOrderDreamleafHerbalismTurnIn()
	{
		Name = "Work Order: Dreamleaf (Herbalism) (Turn In)";
		QuestId.Add(_questID);
		Step.AddRange(new[] { 40 });
	}
	public override bool CanConditions()
	{
		return WorldQuest.CompleteHerbalism(_questID, 1);
	}
	public override bool HasQuest()
	{
		return CanConditions();
	}
	public override bool IsComplete()
	{
		return WorldQuest.CompleteHerbalism(_questID);
	}
	public override bool IsCompleted()
	{
		return !CanConditions();
	}

	public override bool Pulse()
	{
		return TurnIn();
	}
}</Code>
      </QuestClass>
      <ObjectiveCount1>40</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
  </EasyQuests>
  <Script>camelot10\Libs\WorldQuest.cs
camelot10\Libs\Questing.cs</Script>
  <OffMeshConnections>
    <OffMeshConnection>
      <Path>
        <Vector3 X="1722.931" Y="6854.026" Z="-0.09320737" />
        <Vector3 X="1716.381" Y="6847.469" Z="-1.707255" />
      </Path>
      <ContinentId>1220</ContinentId>
      <Name>Sleeper's Barrow (in)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="1716.381" Y="6847.469" Z="-1.707255" />
        <Vector3 X="1722.048" Y="6853.142" Z="-0.1692697" />
      </Path>
      <ContinentId>1220</ContinentId>
      <Name>Sleeper's Barrow (out)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="2556.617" Y="7485.923" Z="20.51338" />
        <Vector3 X="2569.469" Y="7486.891" Z="28.06614" />
      </Path>
      <ContinentId>1220</ContinentId>
      <Name>Heathrow house (out)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="2567.785" Y="7486.483" Z="28.04049" />
        <Vector3 X="2557.221" Y="7486.397" Z="20.51031" />
      </Path>
      <ContinentId>1220</ContinentId>
      <Name>Heathrow house (in)</Name>
    </OffMeshConnection>
  </OffMeshConnections>
</EasyQuestProfile>