<?xml version="1.0" encoding="utf-16"?>
<EasyQuestProfile xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <QuestsSorted>
    <QuestsSorted Action="WriteLog" NameClass="--- Start Death Knight starting area ---" />
    <QuestsSorted Action="If" NameClass="WoWClass.DeathKnight != ObjectManager.Me.WowClass" />
    <QuestsSorted Action="GoToStep" NameClass="Next" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="RunCode" NameClass="/* FOOD */ wManager.wManagerSetting.CurrentSetting.FoodName = ItemsManager.GetNameById(41751);" />
    <QuestsSorted Action="PulseAllInOne" NameClass="InServiceOfTheLichKing" />
    <QuestsSorted Action="PickUp" NameClass="TheEmblazonedRuneblade" />
    <QuestsSorted Action="Pulse" NameClass="TheEmblazonedRuneblade" />
    <QuestsSorted Action="Pulse" NameClass="TheEmblazonedRuneblade2" />
    <QuestsSorted Action="TurnIn" NameClass="TheEmblazonedRuneblade2" />
    <QuestsSorted Action="RunCode" NameClass="/* WEAPON */ Questing.Equip(38707, 142320);" />
    <QuestsSorted Action="PulseAllInOne" NameClass="RuneforgingPreparationForBattle" />
    <QuestsSorted Action="PulseAllInOne" NameClass="TheEndlessHunger" />
    <QuestsSorted Action="PulseAllInOne" NameClass="TheEyeOfAcherus" />
    <QuestsSorted Action="PulseAllInOne" NameClass="DeathComesFromOnHigh" />
    <QuestsSorted Action="PulseAllInOne" NameClass="TheMightOfTheScourge" />
    <QuestsSorted Action="RunCode" NameClass="/* AMULET */ Questing.Equip(38662);" />
    <QuestsSorted Action="Pulse" NameClass="ThePowerOfBloodFrostAndUnholy" />
    <QuestsSorted Action="PulseAllInOne" NameClass="ReportToScourgeCommanderThalanor" />
    <QuestsSorted Action="PulseAllInOne" NameClass="TheScarletHarvest" />
    <QuestsSorted Action="PickUp" NameClass="IfChaosDrivesLetSufferingHoldTheReins" />
    <QuestsSorted Action="PickUp" NameClass="TonightWeDineInHavenshire" />
    <QuestsSorted Action="PickUp" NameClass="GrandTheftPalomino" />
    <QuestsSorted Action="PulseAllInOne" NameClass="DeathsChallenge" />
    <QuestsSorted Action="RunCode" NameClass="Avoiding.StartAvoid(28683);" />
    <QuestsSorted Action="Pulse" NameClass="GrandTheftPalomino" />
    <QuestsSorted Action="RunCode" NameClass="Questing.ResetSettings();" />
    <QuestsSorted Action="TurnIn" NameClass="GrandTheftPalomino" />
    <QuestsSorted Action="PulseAllInOne" NameClass="IntotheRealmofShadows" />
    <QuestsSorted Action="RunCode" NameClass="Avoiding.StopAvoid();" />
    <QuestsSorted Action="RunCode" NameClass="/* MOUNT */ wManager.wManagerSetting.CurrentSetting.GroundMountName = SpellListManager.SpellNameInGameById(48778);" />
    <QuestsSorted Action="RunCode" NameClass="Questing.ResetSettings();" />
    <QuestsSorted Action="Pulse" NameClass="TonightWeDineInHavenshire" />
    <QuestsSorted Action="Pulse" NameClass="IfChaosDrivesLetSufferingHoldTheReins2" />
    <QuestsSorted Action="Pulse" NameClass="IfChaosDrivesLetSufferingHoldTheReins" />
    <QuestsSorted Action="TurnIn" NameClass="IfChaosDrivesLetSufferingHoldTheReins" />
    <QuestsSorted Action="RunCode" NameClass="/* RING 1 */ Lua.RunMacroText(&quot;/equipslot 12 &quot; + ItemsManager.GetNameById(38671));" />
    <QuestsSorted Action="TurnIn" NameClass="TonightWeDineInHavenshire" />
    <QuestsSorted Action="RunCode" NameClass="/* BACK */ Questing.Equip(39320);" />
    <QuestsSorted Action="PulseAllInOne" NameClass="GothiktheHarvester" />
    <QuestsSorted Action="PulseAllInOne" NameClass="TheGiftThatKeepsOnGiving" />
    <QuestsSorted Action="RunCode" NameClass="/* TRINKET 2 */ Lua.RunMacroText(&quot;/equipslot 14 &quot; + ItemsManager.GetNameById(38675));" />
    <QuestsSorted Action="PulseAllInOne" NameClass="AnAttackOfOpportunity" />
    <QuestsSorted Action="PulseAllInOne" NameClass="MassacreAtLightsPoint" />
    <QuestsSorted Action="RunCode" NameClass="Questing.ResetSettings();" />
    <QuestsSorted Action="RunCode" NameClass="/* BRACERS */ Questing.Equip(38666);" />
    <QuestsSorted Action="PulseAllInOne" NameClass="VictoryAtDeathsBreach" />
    <QuestsSorted Action="RunCode" NameClass="/* LEGS */ Questing.Equip(38669);" />
    <QuestsSorted Action="PulseAllInOne" NameClass="TheWillOfTheLichKing" />
    <QuestsSorted Action="PulseAllInOne" NameClass="TheCryptofRemembrance" />
    <QuestsSorted Action="PickUp" NameClass="NowhereToRunAndNowhereToHide" />
    <QuestsSorted Action="PickUp" NameClass="LambsToTheSlaughter" />
    <QuestsSorted Action="PickUp" NameClass="ThePlaguebringersRequest" />
    <QuestsSorted Action="Pulse" NameClass="ThePlaguebringersRequest" />
    <QuestsSorted Action="Pulse" NameClass="ThePlaguebringersRequest2" />
    <QuestsSorted Action="Pulse" NameClass="ThePlaguebringersRequest3" />
    <QuestsSorted Action="Pulse" NameClass="NowhereToRunAndNowhereToHide" />
    <QuestsSorted Action="Pulse" NameClass="NowhereToRunAndNowhereToHide2" />
    <QuestsSorted Action="Pulse" NameClass="LambsToTheSlaughter" />
    <QuestsSorted Action="Pulse" NameClass="LambsToTheSlaughter2" />
    <QuestsSorted Action="TurnIn" NameClass="NowhereToRunAndNowhereToHide" />
    <QuestsSorted Action="PickUp" NameClass="HowToWinFriendsAndInfluenceEnemies" />
    <QuestsSorted Action="TurnIn" NameClass="LambsToTheSlaughter" />
    <QuestsSorted Action="RunCode" NameClass="/* BOOTS */ Questing.Equip(38670);" />
    <QuestsSorted Action="TurnIn" NameClass="ThePlaguebringersRequest" />
    <QuestsSorted Action="RunCode" NameClass="/* BELT */ Questing.Equip(38668);" />
    <QuestsSorted Action="PickUp" NameClass="NothsSpecialBrew" />
    <QuestsSorted Action="Pulse" NameClass="NothsSpecialBrewTurnIn" />
    <QuestsSorted Action="Pulse" NameClass="HowToWinFriendsAndInfluenceEnemies" />
    <QuestsSorted Action="RunCode" NameClass="/* WEAPON */ Questing.Equip(38707, 142320);" />
    <QuestsSorted Action="RunCode" NameClass="Questing.ResetSettings();&#xD;&#xA;Lua.RunMacroText(&quot;/petassist&quot;);" />
    <QuestsSorted Action="TurnIn" NameClass="HowToWinFriendsAndInfluenceEnemies" />
    <QuestsSorted Action="RunCode" NameClass="/* RING 2 */ Lua.RunMacroText(&quot;/equipslot 11 &quot; + ItemsManager.GetNameById(38672));" />
    <QuestsSorted Action="PulseAllInOne" NameClass="BehindScarletLines" />
    <QuestsSorted Action="PickUp" NameClass="ThePathOfTheRighteousCrusader" />
    <QuestsSorted Action="PulseAllInOne" NameClass="BrothersInDeath" />
    <QuestsSorted Action="PickUp" NameClass="BloodyBreakout" />
    <QuestsSorted Action="Pulse" NameClass="BloodyBreakout" />
    <QuestsSorted Action="Pulse" NameClass="ThePathOfTheRighteousCrusader" />
    <QuestsSorted Action="TurnIn" NameClass="ThePathOfTheRighteousCrusader" />
    <QuestsSorted Action="RunCode" NameClass="/* GLOVES */ Questing.Equip(38667);" />
    <QuestsSorted Action="TurnIn" NameClass="BloodyBreakout" />
    <QuestsSorted Action="RunCode" NameClass="/* CHEST */ Questing.Equip(38665);" />
    <QuestsSorted Action="PulseAllInOne" NameClass="ACryForVengeance" />
    <QuestsSorted Action="PulseAllInOne" NameClass="ASpecialSurprise" />
    <QuestsSorted Action="PulseAllInOne" NameClass="ASortOfHomecoming" />
    <QuestsSorted Action="RunCode" NameClass="/* TRINKET 1 */ Lua.RunMacroText(&quot;/equipslot 13 &quot; + ItemsManager.GetNameById(38674));" />
    <QuestsSorted Action="PulseAllInOne" NameClass="AmbushAtTheOverlook" />
    <QuestsSorted Action="PulseAllInOne" NameClass="AMeetingWithFate" />
    <QuestsSorted Action="PulseAllInOne" NameClass="TheScarletOnslaughtEmerges" />
    <QuestsSorted Action="PulseAllInOne" NameClass="ScarletArmiesApproach" />
    <QuestsSorted Action="RunCode" NameClass="/* SHOULDERS */ Questing.Equip(38663);" />
    <QuestsSorted Action="PulseAllInOne" NameClass="TheScarletApocalypse" />
    <QuestsSorted Action="PulseAllInOne" NameClass="AnEndToAllThings" />
    <QuestsSorted Action="RunCode" NameClass="/* HELM */ Questing.Equip(38661);" />
    <QuestsSorted Action="PulseAllInOne" NameClass="TheLichKingsCommand" />
    <QuestsSorted Action="PulseAllInOne" NameClass="TheLightofDawn" />
    <QuestsSorted Action="RunCode" NameClass="/* WEAPON2 */ Questing.Equip(142321, 38632, 38633);" />
    <QuestsSorted Action="PulseAllInOne" NameClass="TakingBackAcherus" />
    <QuestsSorted Action="PulseAllInOne" NameClass="TheBattleForTheEbonHold" />
    <QuestsSorted Action="PulseAllInOne" NameClass="WhereKingsWalkA" />
    <QuestsSorted Action="PulseAllInOne" NameClass="SaurfangsBlessingH" />
    <QuestsSorted Action="StepName" NameClass="Next" />
    <QuestsSorted Action="WriteLog" NameClass="--- Complete Death Knight starting area ---" />
  </QuestsSorted>
  <NpcQuest>
    <NPCQuest Id="25462" Name="The Lich King" GameObject="false">
      <PickUpQuests>
        <int>12593</int>
        <int>12641</int>
        <int>12657</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>12636</int>
        <int>12641</int>
      </TurnInQuests>
      <Position X="2345.299" Y="-5671.679" Z="426.0303" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="28357" Name="Instructor Razuvious" GameObject="false">
      <PickUpQuests>
        <int>12619</int>
        <int>12842</int>
        <int>12848</int>
        <int>12636</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>12593</int>
        <int>12619</int>
        <int>12842</int>
        <int>12848</int>
      </TurnInQuests>
      <Position X="2510.445" Y="-5592.713" Z="420.6437" />
    </NPCQuest>
    <NPCQuest Id="28444" Name="Highlord Darion Mograine" GameObject="false">
      <PickUpQuests>
        <int>12850</int>
        <int>12714</int>
        <int>12778</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>12657</int>
        <int>12706</int>
        <int>12757</int>
      </TurnInQuests>
      <Position X="2460.503" Y="-5593.47" Z="367.3926" />
    </NPCQuest>
    <NPCQuest Id="28510" Name="Scourge Commander Thalanor" GameObject="false">
      <PickUpQuests>
        <int>12670</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>12850</int>
      </TurnInQuests>
      <Position X="2349.928" Y="-5665.939" Z="382.2424" />
    </NPCQuest>
    <NPCQuest Id="28377" Name="Prince Valanar" GameObject="false">
      <PickUpQuests>
        <int>12678</int>
        <int>12697</int>
        <int>12701</int>
        <int>12706</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>12670</int>
        <int>12678</int>
        <int>12700</int>
        <int>12701</int>
      </TurnInQuests>
      <Position X="2371.366" Y="-5701.044" Z="153.9223" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="29047" Name="Olrun the Battlecaller" GameObject="false">
      <PickUpQuests>
        <int>12733</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>12733</int>
      </TurnInQuests>
      <Position X="2370.361" Y="-5787.548" Z="153.6099" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="28647" Name="Orithos the Sky Darkener" GameObject="false">
      <PickUpQuests>
        <int>12679</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>12679</int>
      </TurnInQuests>
      <Position X="2286.628" Y="-5703.103" Z="153.9365" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="28653" Name="Salanar the Horseman" GameObject="false">
      <PickUpQuests>
        <int>12680</int>
        <int>12687</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>12680</int>
        <int>12687</int>
      </TurnInQuests>
      <Position X="2354.57" Y="-5703.927" Z="153.9222" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="28658" Name="Gothik the Harvester" GameObject="false">
      <PickUpQuests>
        <int>12698</int>
        <int>12700</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>12697</int>
        <int>12698</int>
      </TurnInQuests>
      <Position X="2348.769" Y="-5758.279" Z="153.9219" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="28907" Name="Prince Valanar" GameObject="false">
      <PickUpQuests>
        <int>12715</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>12714</int>
      </TurnInQuests>
      <Position X="2316.648" Y="-5738.609" Z="155.9813" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="28919" Name="Noth the Plaguebringer" GameObject="false">
      <PickUpQuests>
        <int>12716</int>
        <int>12717</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>12716</int>
      </TurnInQuests>
      <Position X="1982.74" Y="-5815.542" Z="100.8911" />
    </NPCQuest>
    <NPCQuest Id="28911" Name="Prince Keleseth" GameObject="false">
      <PickUpQuests>
        <int>12719</int>
        <int>12720</int>
        <int>12723</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>12715</int>
        <int>12719</int>
        <int>12720</int>
      </TurnInQuests>
      <Position X="1879.399" Y="-5765.102" Z="83.77534" />
    </NPCQuest>
    <NPCQuest Id="28910" Name="Baron Rivendare" GameObject="false">
      <PickUpQuests>
        <int>12722</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>12722</int>
      </TurnInQuests>
      <Position X="1879.399" Y="-5765.102" Z="83.77534" />
    </NPCQuest>
    <NPCQuest Id="190936" Name="Plague Cauldron" GameObject="true">
      <PickUpQuests />
      <TurnInQuests>
        <int>12717</int>
      </TurnInQuests>
      <Position X="1982.74" Y="-5815.542" Z="100.8911" />
    </NPCQuest>
    <NPCQuest Id="28914" Name="Orbaz Bloodbane" GameObject="false">
      <PickUpQuests>
        <int>12724</int>
        <int>12754</int>
        <int>12755</int>
        <int>12757</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>12723</int>
        <int>12724</int>
        <int>12754</int>
        <int>12756</int>
      </TurnInQuests>
      <Position X="1403.938" Y="-5826.62" Z="137.1911" />
    </NPCQuest>
    <NPCQuest Id="28913" Name="Thassarian" GameObject="false">
      <PickUpQuests>
        <int>12725</int>
        <int>12738</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>12727</int>
        <int>12751</int>
      </TurnInQuests>
      <Position X="1397.508" Y="-5827.419" Z="137.1876" />
    </NPCQuest>
    <NPCQuest Id="28912" Name="Koltira Deathweaver" GameObject="false">
      <PickUpQuests>
        <int>12727</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>12725</int>
      </TurnInQuests>
      <Position X="1655.967" Y="-6038.763" Z="128.6401" />
    </NPCQuest>
    <NPCQuest Id="29053" Name="Knight Commander Plaguefist" GameObject="false">
      <PickUpQuests>
        <int>12742</int>
        <int>12743</int>
        <int>12744</int>
        <int>12745</int>
        <int>12746</int>
        <int>28649</int>
        <int>12747</int>
        <int>12748</int>
        <int>12749</int>
        <int>12750</int>
        <int>12739</int>
        <int>28650</int>
        <int>12751</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>12738</int>
        <int>12742</int>
        <int>12743</int>
        <int>12744</int>
        <int>12745</int>
        <int>12746</int>
        <int>28649</int>
        <int>12747</int>
        <int>12748</int>
        <int>12749</int>
        <int>12750</int>
        <int>12739</int>
        <int>28650</int>
      </TurnInQuests>
      <Position X="1377.379" Y="-5714.412" Z="136.5589" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="29077" Name="High General Abbendis" GameObject="false">
      <PickUpQuests>
        <int>12756</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>12755</int>
      </TurnInQuests>
      <Position X="1320.415" Y="-6124.408" Z="14.6738" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="29110" Name="The Lich King" GameObject="false">
      <PickUpQuests>
        <int>12779</int>
        <int>12800</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>12778</int>
        <int>12779</int>
      </TurnInQuests>
      <Position X="2310.267" Y="-5742.212" Z="161.2074" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="31082" Name="Scourge Commander Thalanor" GameObject="false">
      <PickUpQuests>
        <int>12801</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>12800</int>
      </TurnInQuests>
      <Position X="2448.219" Y="-5126.31" Z="78.60871" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="29173" Name="Highlord Darion Mograine" GameObject="false">
      <PickUpQuests>
        <int>13165</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>12801</int>
      </TurnInQuests>
      <Position X="2261.529" Y="-5284.931" Z="81.80493" />
    </NPCQuest>
    <NPCQuest Id="31084" Name="Highlord Darion Mograine" GameObject="false">
      <PickUpQuests>
        <int>13166</int>
        <int>13188</int>
        <int>13189</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>13165</int>
        <int>13166</int>
      </TurnInQuests>
      <Position X="2375.382" Y="-5650.722" Z="382.4391" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="107574" Name="King Anduin Wrynn" GameObject="false">
      <PickUpQuests />
      <TurnInQuests>
        <int>13188</int>
      </TurnInQuests>
      <Position X="-8363.06" Y="232.236" Z="156.9907" />
    </NPCQuest>
    <NPCQuest Id="14720" Name="High Overlord Saurfang" GameObject="false">
      <PickUpQuests />
      <TurnInQuests>
        <int>13189</int>
      </TurnInQuests>
      <Position X="1669.178" Y="-4343.229" Z="28.36206" />
    </NPCQuest>
  </NpcQuest>
  <Npc />
  <Blackspots />
  <BlackGuids />
  <EasyQuests>
    <EasyQuest>
      <Name>In Service Of The Lich King</Name>
      <QuestId>
        <int>12593</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Emblazoned Runeblade</Name>
      <QuestId>
        <int>12619</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="2504.16" Y="-5566.881" Z="420.6445" />
          <Vector3 X="2482.81" Y="-5521.749" Z="420.5811" />
        </HotSpots>
        <EntryIdObjects>
          <int>190584</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return ItemsManager.HasItemById(38607);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Emblazoned Runeblade 2</Name>
      <QuestId>
        <int>12619</int>
      </QuestId>
      <QuestType>UseItemOn</QuestType>
      <QuestClass xsi:type="UseItemOnEasyQuestClass">
        <HotSpots>
          <Vector3 X="2506.988" Y="-5561.975" Z="420.6483" />
        </HotSpots>
        <EntryIdTarget />
        <ItemId>38607</ItemId>
        <Range>4.5</Range>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Runeforging: Preparation For Battle</Name>
      <QuestId>
        <int>12842</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var p = new Vector3(2507.175, -5562.086, 420.6472, "None");
		if (GoToTask.ToPosition(p))
		{
			if (!Lua.LuaDoString&lt;bool&gt;("return TradeSkillFrame:IsVisible()"))
			{
				uint spellRuneforgingId = 53428;
				SpellManager.CastSpellByIdLUA(spellRuneforgingId);
				Thread.Sleep(Others.Random(200, 300));
			}
			if (Lua.LuaDoString&lt;bool&gt;("return TradeSkillFrame:IsVisible()"))
			{
				var spellRuneOfRazoriceId = 53343;
				Lua.LuaDoString("C_TradeSkillUI.CraftRecipe("+ spellRuneOfRazoriceId+")");
				Thread.Sleep(Others.Random(200, 300));

				uint itemRunedSoulbladeId = 38707;
				ItemsManager.UseItem(itemRunedSoulbladeId);
				Thread.Sleep(Others.Random(200, 300));
				if (Lua.LuaDoString&lt;bool&gt;("return StaticPopup1Button1:IsVisible()"))
				{
					Lua.LuaDoString("StaticPopup1Button1:Click()");
					Thread.Sleep(Others.Random(200, 300));
				}
				Usefuls.WaitIsCasting();
			}
		}
		Thread.Sleep(Others.Random(2000, 3000));
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return Questing.ObjectiveComplete(this);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Endless Hunger</Name>
      <QuestId>
        <int>12848</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="2475.312" Y="-5578.021" Z="415.3677" />
          <Vector3 X="2480.666" Y="-5585.127" Z="415.6642" />
          <Vector3 X="2468.321" Y="-5574.257" Z="415.2884" />
        </HotSpots>
        <EntryIdObjects>
          <int>191583</int>
          <int>191577</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Eye Of Acherus</Name>
      <QuestId>
        <int>12636</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Death Comes From On High</Name>
      <QuestId>
        <int>12641</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public sealed class DeathComesFromOnHigh : QuestClass
{
	uint _spellTheEyeOfAcherus = 51852;
	float _hoverHeight = 20;
	uint _spellSiphon = 51859; //1
	uint _spellSummonGhouls = 51904; //2
	uint _spellShroud = 52006; //3
	uint _spellRecallEye = 52694; //5

	public DeathComesFromOnHigh()
	{
		Name = "Death Comes From On High";
		QuestId.Add(12641);
		Step.AddRange(new[] { 1, 1, 1, 1, 0 });
	}

	void Log(string text)
	{
		Logging.Write("[Akerus Eye] " + text);
	}

	public override bool IsComplete()
	{
		var r = base.IsComplete();
		if (r)
			RestoreSettings();

		return r;
	}

	void ChangeSettings()
	{
		if (Conditions.ForceIgnoreIsAttacked)
			return;

		Log("change settings");
		wManager.wManagerSetting.CurrentSetting.UseMount = false;
		Conditions.ForceIgnoreIsAttacked = true;
	}

	void RestoreSettings()
	{
		Log("restore settings");
		wManager.wManagerSetting.CurrentSetting.UseMount = true;
		Conditions.ForceIgnoreIsAttacked = false;
		Questing.PossedButton(2);
		//SpellManager.CastSpellByIdLUA(_spellRecallEye);

	}

	public override bool Pulse()
	{
		LongMove.StopLongMove();
		MovementManager.StopMove();
		Fight.StopFight();
		ChangeSettings();
		if (NeedSummonEyeOfAcherus())
			return true;

		var p1 = new Vector3(1807.817, -5986.497, 116.0477, "None");
		var p2 = new Vector3(1594.337, -5738.95, 120.3268, "None");
		var p3 = new Vector3(1651.21, -5996.087, 133.5013, "None");
		var p4 = new Vector3(1389.167, -5704.277, 136.4924, "None");

		if (!Questing.ObjectiveComplete(this, 1))
			return WorkPosition(p1);

		if (!Questing.ObjectiveComplete(this, 2))
			return WorkPosition(p2);

		if (!Questing.ObjectiveComplete(this, 3))
			return WorkPosition(p3);

		if (!Questing.ObjectiveComplete(this, 4))
			return WorkPosition(p4);

		RestoreSettings();
		return true;
	}

	bool NeedSummonEyeOfAcherus()
	{
		//pet
		//CreatedBySpell = 51852
		//Entry = 28511
		if (ObjectManager.Me.HaveBuff(_spellTheEyeOfAcherus))
			return false;


		var posMechanism = new Vector3(2322.501, -5661.275, 426.0295, "None");
		var eyeOfAcherusControlMechanism = 191609;
		Log("need summon eye");
		if (GoToTask.ToPositionAndIntecractWithGameObject(posMechanism, eyeOfAcherusControlMechanism))
		{
			Log("used control. wait till flying");
			Thread.Sleep(20 * 1000);//20sec out of control
		}
		return true;
	}

	bool WorkPosition(Vector3 p)
	{
		if (!ObjectManager.Pet.PlayerControlled)
		{
			Log("cant control eye. wait");
			Thread.Sleep(1 * 1000);
			return true;
		}
		if (ObjectManager.Pet.IsCast)
		{
			Log("wait eye cast");
			return true;
		}

		var pHover = p;
		pHover.Z += _hoverHeight;
		if (ObjectManager.Pet.Position.DistanceTo(pHover) &gt; 3.5f)
		{
			if (!ObjectManager.Pet.InCombat &amp;&amp; !ObjectManager.Pet.HaveBuff(_spellShroud))
			{
				Log("cast shroud");
				SpellManager.CastSpellByIdLUA(_spellShroud);
			}
			else
			{
				MovementManager.MoveTo(pHover);
				Log("flying to " + pHover);
			}
			Thread.Sleep(300);
			return true;
		}

		Log("im on hover p. cast ghouls");
		SpellManager.CastSpellByIdLUA(_spellSummonGhouls);
		Thread.Sleep(Usefuls.Latency);
		ClickOnTerrain.Pulse(p);

		Questing.WaitIsCasting(ObjectManager.Pet);


		Log("cast siphon");
		SpellManager.CastSpellByIdLUA(_spellSiphon);
		Questing.WaitIsCasting(ObjectManager.Pet);
		return true;
	}

}</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Might Of The Scourge</Name>
      <QuestId>
        <int>12657</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public class TheMightOfTheScourge : QuestClass
{

	Vector3 _teleportPosition = new Vector3(2382.931, -5645.1, 421.6207, "None");

	public TheMightOfTheScourge()
	{
		Name = "The Might Of The Scourge";
		QuestId.Add(12657);
		Step.AddRange(new[] { 0, 0, 0, 0, 0 });
	}
	public override bool IsComplete()
	{
		return ObjectManager.Me.Position.DistanceZ(_teleportPosition) &gt; 10;
	}

	public override bool Pulse()
	{
		GoToTask.ToPosition(_teleportPosition, 3.5f);
		return true;
	}
}
</Code>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Report To Scourge Commander Thalanor</Name>
      <QuestId>
        <int>12850</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Power Of Blood, Frost And Unholy</Name>
      <QuestId>
        <int>12849</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public class ThePowerOfBloodFrostAndUnholy : QuestClass
{
	public ThePowerOfBloodFrostAndUnholy()
	{
		Name = "The Power Of Blood, Frost And Unholy";
		QuestId.Add(12849);
		Step.AddRange(new[] { 0, 0, 0, 0, 0 });
	}
	public override bool Pulse()
	{
		var p = new Vector3(2525.28, -5550.926, 377.0394, "None");
		if (GoToTask.ToPositionAndIntecractWithNpc(p, 28472, 0))
		{
			Thread.Sleep(Others.Random(1000, 2000));
			Quest.SelectGossipAvailableQuest(1);
			Thread.Sleep(Others.Random(1000, 2000));
			Quest.CompleteQuest(1);
			Thread.Sleep(Others.Random(1000, 2000));
		}
		return true;
	}
	public override bool IsComplete()
	{
		return IsCompleted();
	}
	public override bool HasQuest()
	{
		return Questing.NotComplete(this);
	}
}
</Code>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Scarlet Harvest</Name>
      <QuestId>
        <int>12670</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public class TheScarletHarvest : QuestClass
{
	Vector3 _npcPos = new Vector3(2348.741, -5694.941, 384.0876, "None");
	public TheScarletHarvest()
	{
		Name = "The Scarlet Harvest";
		QuestId.Add(12670);
		Step.AddRange(new[] { 0, 0, 0, 0, 0 });
	}
	public override bool IsComplete()
	{
		return ObjectManager.Me.Position.DistanceZ(_npcPos) &gt; 30;
	}
	public override bool Pulse()
	{
		if (GoToTask.ToPositionAndIntecractWithNpc(_npcPos, 29488))
			Thread.Sleep(10 * 1000);
		return true;
	}
}
</Code>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Death's Challenge</Name>
      <QuestId>
        <int>12733</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var center = new Vector3(2371.366, -5701.044, 153.9222, "None");
		var npc = ObjectManager.GetNearestWoWUnit(ObjectManager.GetWoWUnitByEntry(28406));
		if (npc != null &amp;&amp; npc.IsValid)
		{
			if (npc.Position.DistanceTo2D(center) &gt; 100)
			{
				wManager.wManagerSetting.AddBlackList(npc.Guid, 5 * 60 * 1000, true);
			}
			else if (GoToTask.ToPositionAndIntecractWithNpc(npc.Position, npc.Entry, 1))
			{
				MountTask.DismountMount();
				Thread.Sleep(10 * 1000);
				Interact.InteractGameObject(npc.GetBaseAddress);
				Fight.StartFight(npc.Guid);
			}
		}
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>5</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Tonight We Dine In Havenshire</Name>
      <QuestId>
        <int>12679</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="2009.027" Y="-5756.811" Z="100.8045" />
          <Vector3 X="2001.281" Y="-5805.58" Z="100.5681" />
          <Vector3 X="1958.698" Y="-5795.994" Z="100.5867" />
          <Vector3 X="1966.368" Y="-5754.514" Z="101.2102" />
          <Vector3 X="2037.177" Y="-5844.796" Z="100.3531" />
          <Vector3 X="1972.486" Y="-5851.431" Z="100.5999" />
        </HotSpots>
        <EntryIdObjects>
          <int>190691</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>15</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Grand Theft Palomino</Name>
      <QuestId>
        <int>12680</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public class GrandTheftPalomino : QuestClass
{
	public GrandTheftPalomino()
	{
		Name = "Grand Theft Palomino";
		QuestId.Add(12680);
		Step.AddRange(new[] { 1, 0, 0, 0, 0 });
	}
	public override bool Pulse()
	{
		var start = new Vector3(2198.479, -5807.423, 101.3356, "None");
		var end = new Vector3(2347.104, -5695.789, 155.9568);
		// new Vector3(2232.95, -5814.65, 101.28);

		if (ObjectManager.Me.PlayerUsingVehicle)
		{
			Conditions.ForceIgnoreIsAttacked = true;
			var salanar = Salanar();
			if (salanar != null &amp;&amp; salanar.IsValid)
			{
				if (GoToTask.ToPosition(salanar.Position, 4))
				{
					Lua.RunMacroText("/click OverrideActionBarButton1");
				}
			}
			else
			{
				GoToTask.ToPosition(end);
			}
			return true;
		}
		var horse = Horse();
		if (horse != null &amp;&amp; horse.IsValid)
		{
			Conditions.ForceIgnoreIsAttacked = true;
			GoToTask.ToPositionAndIntecractWithNpc(horse.Position, horse.Entry);
		}
		else
		{
			Conditions.ForceIgnoreIsAttacked = false;
			GoToTask.ToPosition(start, 10, false, (c) =&gt; {
				var h = Horse();
				if (h != null &amp;&amp; h.IsValid)
					return false;

				return true;
			});
		}
		return true;
	}

	WoWUnit Salanar()
	{
		var horse = new List&lt;int&gt;() {
			28653,
		};
		return ObjectManager.GetNearestWoWUnit(ObjectManager.GetWoWUnitByEntry(horse));
	}

	WoWUnit Horse()
	{
		var horse = new List&lt;int&gt;() {
			28605,
			28606,
			28607,
		};
		return ObjectManager.GetNearestWoWUnit(ObjectManager.GetWoWUnitByEntry(horse));
	}

}
</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>If Chaos Drives, Let Suffering Hold The Reins</Name>
      <QuestId>
        <int>12678</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="2050.634" Y="-5756.534" Z="98.25777" />
          <Vector3 X="2147.717" Y="-5722.73" Z="101.0126" />
          <Vector3 X="2182.464" Y="-5725.103" Z="105.8581" />
          <Vector3 X="2244.753" Y="-5757.317" Z="101.4023" />
          <Vector3 X="2192.457" Y="-5733.819" Z="102.4042" />
          <Vector3 X="2126.488" Y="-5732.708" Z="99.95966" />
        </HotSpots>
        <EntryTarget>
          <int>28609</int>
          <int>28611</int>
          <int>28557</int>
          <int>28608</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>10</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>If Chaos Drives, Let Suffering Hold The Reins 2</Name>
      <QuestId>
        <int>12678</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="2182.464" Y="-5725.103" Z="105.8581" />
          <Vector3 X="2126.488" Y="-5732.708" Z="99.95966" />
          <Vector3 X="2055.612" Y="-5756.168" Z="98.10672" />
          <Vector3 X="2146.332" Y="-5670.971" Z="110.5979" />
        </HotSpots>
        <EntryTarget>
          <int>28576</int>
          <int>28577</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>10</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Into the Realm of Shadows</Name>
      <QuestId>
        <int>12687</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public class IntotheRealmofShadows : QuestClass
{
	public IntotheRealmofShadows()
	{
		Name = "Into the Realm of Shadows";
		QuestId.Add(12687);
		Step.AddRange(new[] { 1, 0, 0, 0, 0 });
	}

	public override bool Pulse()
	{
		var start = new Vector3(2362.728, -5711.357, 153.9225, "None");
		var end = new Vector3(2216.172, -5642.602, 129.9064, "None");
		if (!ObjectManager.Me.HaveBuff(52693))
		{
			GoToTask.ToPositionAndIntecractWithNpc(start, 28653, 1);
			return true;
		}
		if (ObjectManager.Me.PlayerUsingVehicle)
		{
			if (GoToTask.ToPosition(end))
				Lua.RunMacroText("/click OverrideActionBarButton1");
			return true;
		}
		var horse = Horse();
		if (horse != null &amp;&amp; horse.IsValid)
		{
			GoToTask.ToPositionAndIntecractWithNpc(horse.Position, horse.Entry);
			return true;
		}

		var horseman = Horseman();
		if (horseman != null &amp;&amp; horseman.IsValid &amp;&amp; horse.IsAlive &amp;&amp; horseman.IsAttackable)
		{
			Interact.InteractGameObject(horseman.GetBaseAddress);
			Fight.StartFight(horseman.Guid);
			return true;
		}
		var p = new Vector3(2161.553, -5808.613, 101.4263, "None");
		GoToTask.ToPosition(p);
		return true;
	}

	WoWUnit Horseman()
	{
		var ids = new List&lt;int&gt;() {
			28782,
		};
		return ObjectManager.GetNearestWoWUnit(ObjectManager.GetWoWUnitByEntry(ids));
	}

	WoWUnit Horse()
	{
		var ids = new List&lt;int&gt;() {
			28782,
		};
		return ObjectManager.GetNearestWoWUnit(ObjectManager.GetWoWUnitByEntry(ids));
	}

	public override bool IsComplete()
	{
		return Questing.ObjectiveComplete(this, 1);
	}
}
</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Gothik the Harvester</Name>
      <QuestId>
        <int>12697</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Gift That Keeps On Giving (OLD)</Name>
      <QuestId>
        <int>12698</int>
      </QuestId>
      <QuestType>UseItemOn</QuestType>
      <QuestClass xsi:type="UseItemOnEasyQuestClass">
        <HotSpots>
          <Vector3 X="2436.31" Y="-5912.188" Z="103.6842" />
          <Vector3 X="2433.576" Y="-5890.261" Z="105.2592" />
          <Vector3 X="2445.576" Y="-5922.189" Z="100.0602" />
        </HotSpots>
        <EntryIdTarget>
          <int>28819</int>
        </EntryIdTarget>
        <ItemId>39253</ItemId>
        <Range>18</Range>
      </QuestClass>
      <ObjectiveCount1>5</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return ObjectManager.Me.BuffStack(52500) &gt;= 5;</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Gift That Keeps On Giving</Name>
      <QuestId>
        <int>12698</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public class TheGiftThatKeepsOnGiving : QuestClass
{
	public TheGiftThatKeepsOnGiving()
	{
		Name = "The Gift That Keeps On Giving";
		QuestId.Add(12698);
		Step.AddRange(new[] { 0, 0, 0, 0, 0 });
	}
	public override bool Pulse()
	{
		var p = new Vector3(2436.31, -5912.188, 103.6842);
		uint item = 39253;

		var miner = Miner();
		if (miner != null &amp;&amp; miner.IsValid)
		{
			if (miner.GetDistance &gt; 20)
			{
				GoToTask.ToPosition(miner.Position, 18);
				return true;
			}
			if (TraceLine.TraceLineGo(miner.Position))
			{
				wManager.wManagerSetting.AddBlackList(miner.Guid, 60 * 1000, true);
				return true;
			}
			ItemsManager.UseItem(item);
			Thread.Sleep(Usefuls.Latency * 2);
			ClickOnTerrain.Pulse(miner.Position);
			Thread.Sleep(5 * 1000);
			return true;
		}
		GoToTask.ToPosition(p);
		return true;
	}

	WoWUnit Miner()
	{
		return ObjectManager.GetNearestWoWUnit(ObjectManager.GetWoWUnitByEntry(28819));
	}

	public override bool IsComplete()
	{
		return ObjectManager.Me.BuffStack(52500) &gt;= 5; ;
	}
}
</Code>
      </QuestClass>
      <ObjectiveCount1>5</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>An Attack Of Opportunity</Name>
      <QuestId>
        <int>12700</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Massacre At Light's Point</Name>
      <QuestId>
        <int>12701</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public class MassacreAtLightsPoint : QuestClass
{
	public MassacreAtLightsPoint()
	{
		Name = "Massacre At Light's Point";
		QuestId.Add(12701);
		Step.AddRange(new[] { 100, 0, 0, 0, 0 });
	}
	public override bool IsComplete()
	{
		if (ObjectManager.Me.PlayerUsingVehicle)
			return false;

		return base.IsComplete();
	}

	public override bool Pulse()
	{

		Conditions.ForceIgnoreIsAttacked = true;
		if (ObjectManager.Me.HaveBuff(46598))
		{
			Thread.Sleep(5 * 1000);
			return true;
		}
		if (ObjectManager.Me.PlayerUsingVehicle)
		{
			if (Questing.ObjectiveComplete(this, 1))
			{
				Conditions.ForceIgnoreIsAttacked = false;
				Lua.RunMacroText("/click OverrideActionBarButton5");
				Thread.Sleep(10 * 1000);
				return true;
			}
			var mobs = new List&lt;int&gt;() {
				28834,
				28856,
				28850,
			};
			var mob = ObjectManager.GetNearestWoWUnit(ObjectManager.GetWoWUnitByEntry(mobs));
			if (mob != null &amp;&amp; mob.IsValid &amp;&amp; mob.IsAlive)
			{
				MovementManager.Face(mob);
				Lua.RunMacroText("/click OverrideActionBarButton1");
				Usefuls.WaitIsCasting();

				Lua.RunMacroText("/click OverrideActionBarButton2");
				Usefuls.WaitIsCasting();
				wManager.wManagerSetting.AddBlackList(mob.Guid, 3 * 60 * 1000, true);
				return true;
			}
			return true;
		}
		var cannon = ObjectManager.GetNearestWoWUnit(ObjectManager.GetWoWUnitByEntry(28833));
		if (cannon != null &amp;&amp; cannon.IsValid)
		{
			GoToTask.ToPositionAndIntecractWithNpc(cannon.Position, cannon.Entry);
			return true;
		}
		var p = new Vector3(2391.104, -5900.058, 109.1245);
		GoToTask.ToPositionAndIntecractWithGameObject(p, 190767);
		return true;
	}
}
</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Victory At Death's Breach!</Name>
      <QuestId>
        <int>12706</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public class VictoryAtDeathsBreach : QuestClass
{
	Vector3 _npcPos = new Vector3(2402.865, -5727.03, 154.007, "None");

	public VictoryAtDeathsBreach()
	{
		Name = "Victory At Death's Breach!";
		QuestId.Add(12706);
		Step.AddRange(new[] { 0, 0, 0, 0, 0 });
	}
	public override bool IsComplete()
	{
		return ObjectManager.Me.Position.DistanceZ(_npcPos) &gt; 30;
	}
	public override bool Pulse()
	{
		if (GoToTask.ToPositionAndIntecractWithNpc(_npcPos, 29501))
			Thread.Sleep(10 * 1000);
		return true;
	}

}
</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Will Of The Lich King</Name>
      <QuestId>
        <int>12714</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public class TheWillOfTheLichKing : QuestClass
{
	Vector3 _npcPos = new Vector3(2348.741, -5694.941, 384.0876, "None");

	public TheWillOfTheLichKing()
	{
		Name = "The Will Of The Lich King";
		QuestId.Add(12714);
		Step.AddRange(new[] { 0, 0, 0, 0, 0 });
	}
	public override bool IsComplete()
	{
		return ObjectManager.Me.Position.DistanceZ(_npcPos) &gt; 30;
	}
	public override bool Pulse()
	{
		if (GoToTask.ToPositionAndIntecractWithNpc(_npcPos, 29488))
			Thread.Sleep(10 * 1000);
		return true;
	}
}
</Code>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Crypt of Remembrance</Name>
      <QuestId>
        <int>12715</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Nowhere To Run And Nowhere To Hide</Name>
      <QuestId>
        <int>12719</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="1574.478" Y="-5711.678" Z="121.6821" />
        </HotSpots>
        <EntryTarget>
          <int>28945</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return Questing.ObjectiveComplete(this, 1);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Nowhere To Run And Nowhere To Hide 2</Name>
      <QuestId>
        <int>12719</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var p = new Vector3(1589.537, -5704.926, 123.0411, "None");
		Questing.Gather(p, 190947);
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return Questing.ObjectiveComplete(this, 2);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Lambs To The Slaughter</Name>
      <QuestId>
        <int>12722</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="1698.136" Y="-5877.312" Z="116.1353" />
          <Vector3 X="1705.268" Y="-5913.437" Z="117.8177" />
          <Vector3 X="1685.991" Y="-5829.249" Z="116.13" />
          <Vector3 X="1712.503" Y="-5820.267" Z="116.1224" />
          <Vector3 X="1644.189" Y="-5779.68" Z="116.1523" />
          <Vector3 X="1692.195" Y="-5790.083" Z="114.9992" />
        </HotSpots>
        <EntryTarget>
          <int>28984</int>
          <int>28986</int>
          <int>29001</int>
          <int>28610</int>
          <int>28939</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return Questing.ObjectiveComplete(this, 1);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Lambs To The Slaughter 2</Name>
      <QuestId>
        <int>12722</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="1698.136" Y="-5877.312" Z="116.1353" />
          <Vector3 X="1705.268" Y="-5913.437" Z="117.8177" />
          <Vector3 X="1685.991" Y="-5829.249" Z="116.13" />
          <Vector3 X="1712.503" Y="-5820.267" Z="116.1224" />
          <Vector3 X="1644.189" Y="-5779.68" Z="116.1523" />
          <Vector3 X="1692.195" Y="-5790.083" Z="114.9992" />
        </HotSpots>
        <EntryTarget>
          <int>28942</int>
          <int>28941</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return Questing.ObjectiveComplete(this, 2);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Plaguebringer's Request</Name>
      <QuestId>
        <int>12716</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="1741.413" Y="-5876.555" Z="116.664" />
        </HotSpots>
        <EntryIdObjects>
          <int>190937</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>10</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return Questing.ObjectiveComplete(this, 1);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Plaguebringer's Request 2</Name>
      <QuestId>
        <int>12716</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="1804.234" Y="-5985.392" Z="116.044" />
        </HotSpots>
        <EntryIdObjects>
          <int>190938</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>10</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return Questing.ObjectiveComplete(this, 2);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Plaguebringer's Request 3</Name>
      <QuestId>
        <int>12716</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="1743.249" Y="-5823.276" Z="116.1226" />
          <Vector3 X="1692.201" Y="-5834.495" Z="116.1347" />
          <Vector3 X="1718.306" Y="-5862.065" Z="116.296" />
          <Vector3 X="1716.125" Y="-5926.396" Z="118.8266" />
          <Vector3 X="1653.918" Y="-5877.893" Z="117.1391" />
          <Vector3 X="1698.136" Y="-5877.312" Z="116.1353" />
        </HotSpots>
        <EntryTarget>
          <int>28941</int>
          <int>28939</int>
          <int>28936</int>
          <int>28610</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>10</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return Questing.ObjectiveComplete(this, 3);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>How To Win Friends And Influence Enemies</Name>
      <QuestId>
        <int>12720</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public class HowToWinFriendsAndInfluenceEnemies : QuestClass
{
	public HowToWinFriendsAndInfluenceEnemies()
	{
		Name = "How To Win Friends And Influence Enemies";
		QuestId.Add(12720);
		Step.AddRange(new[] { 1, 0, 0, 0, 0 });
	}
	public override bool IsComplete()
	{
		return Questing.ObjectiveComplete(this, 1);
	}
	public override bool Pulse()
	{
		Conditions.ForceIgnoreIsAttacked = true;
		if (ItemsManager.HasItemById(39418))
		{
			ItemsManager.UseItem(39418);
			Thread.Sleep(Others.Random(2000, 3000));
			Lua.LuaDoString("for i=1,GetNumLootItems() do LootSlot(i) end");
			Thread.Sleep(Others.Random(2000, 3000));
		}
		var persuader = EquippedItems.GetEquippedItems().FirstOrDefault(i =&gt; i.Entry == 142274);
		if (persuader == null || !persuader.IsValid)
		{
			Questing.Equip(142274);
		}

		var mob = Mob();
		if (mob != null &amp;&amp; mob.IsValid)
		{
			Lua.RunMacroText("/petpassive");
			if (mob.GetDistance &gt; 5)
			{
				GoToTask.ToPositionAndIntecractWithNpc(mob.Position, mob.Entry);
				return true;
			}
			Interact.InteractGameObject(mob.GetBaseAddress);
			//Fight.StartFight(mob.Guid);
			return true;
		}
		var hotspots = new List&lt;Vector3&gt;()
		{
			new Vector3(1697.1, -5744.021, 109.0088),
			new Vector3(1613.914, -5792.916, 116.4324),
			new Vector3(1492.711, -5851.354, 131.2149),
		};
		GoToTask.ToPosition(hotspots[Others.Random(0, hotspots.Count - 1)], 10, false, (c) =&gt; {
			var m = Mob();
			if (m != null &amp;&amp; m.IsValid)
				return false;

			return true;
		});
		return true;
	}

	List&lt;int&gt; _mobs = new List&lt;int&gt;() {
		28610,
		28936,
		28939,
	};
	WoWUnit Mob()
	{
		return ObjectManager.GetNearestWoWUnit(ObjectManager.GetWoWUnitByEntry(_mobs));
	}


}
</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Noth's Special Brew</Name>
      <QuestId>
        <int>12717</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Noth's Special Brew (Turn In)</Name>
      <QuestId>
        <int>12717</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public class NothsSpecialBrewTurnIn : QuestClass
{
	public NothsSpecialBrewTurnIn()
	{
		Name = "Noth's Special Brew (Turn In)";
		QuestId.Add(12717);
		Step.AddRange(new[] { 0, 0, 0, 0, 0 });
	}
	public override bool Pulse()
	{
		var p = new Vector3(1989.325, -5822.718, 102.8694, "None");
		//if (Questing.TurnIn)
		if (Questing.Gather(p, 190936, 7.5f))
		{
			Quest.CompleteQuest(1);
		}
		return true;
	}
	public override bool IsComplete()
	{
		return Questing.Complete(this);
	}
}
</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Behind Scarlet Lines</Name>
      <QuestId>
        <int>12723</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Path Of The Righteous Crusader</Name>
      <QuestId>
        <int>12724</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var p = new Vector3(1647.648, -6037.715, 149.9566, "None");
		Questing.Gather(p, 191084);
		return true;
</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Brothers In Death</Name>
      <QuestId>
        <int>12725</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Bloody Breakout</Name>
      <QuestId>
        <int>12727</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="1650.231" Y="-6036.192" Z="127.5851" />
        </HotSpots>
        <EntryIdObjects>
          <int>191092</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>A Cry For Vengeance!</Name>
      <QuestId>
        <int>12738</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>A Special Surprise</Name>
      <QuestId>
        <int>12742</int>
        <int>12743</int>
        <int>12744</int>
        <int>12745</int>
        <int>12746</int>
        <int>28649</int>
        <int>12747</int>
        <int>12748</int>
        <int>12749</int>
        <int>12750</int>
        <int>12739</int>
        <int>28650</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public class ASpecialSurprise : QuestClass
{
	public ASpecialSurprise()
	{
		Name = "A Special Surprise";
		QuestId.Add(12742);
		QuestId.Add(12743);
		QuestId.Add(12744);
		QuestId.Add(12745);
		QuestId.Add(12746);
		QuestId.Add(28649);
		QuestId.Add(12747);
		QuestId.Add(12748);
		QuestId.Add(12749);
		QuestId.Add(12750);
		QuestId.Add(12739);
		QuestId.Add(28650);
		Step.AddRange(new[] { 1, 0, 0, 0, 0 });
	}

	public override bool Pulse()
	{
		var p = new Vector3(1326.98, -5764.499, 137.8199, "None");
		var npcID = NpcID();
		var npc = ObjectManager.GetObjectWoWUnit().FirstOrDefault(u =&gt; u != null &amp;&amp; u.IsValid &amp;&amp; u.IsAlive &amp;&amp; u.Entry == npcID);
		if (npc != null)
		{
			if (npc.IsAttackable)
			{
				Interact.InteractGameObject(npc.GetBaseAddress);
				Fight.StartFight(npc.Guid);
			}
			else if (GoToTask.ToPosition(npc.Position))
			{
				Questing.ClickMove(npc.Position);
				Thread.Sleep(Others.Random(1000, 2000));
			}
		}
		else
		{
			GoToTask.ToPosition(p);
		}
		return true;
	}

	int NpcID()
	{
		switch (ObjectManager.Me.PlayerRace)
		{
			case PlayerFactions.NightElf:
				return 29065;
			case PlayerFactions.Dwarf:
				return 29067;
			case PlayerFactions.Gnome:
				return 29068;
			case PlayerFactions.Draenei:
				return 29070;
			case PlayerFactions.Worgen:
				return 49355;
			case PlayerFactions.BloodElf:
				return 29074;
			case PlayerFactions.Orc:
				return 29072;
			case PlayerFactions.Troll:
				return 29073;
			case PlayerFactions.Undead:
				return 29071;
			case PlayerFactions.Tauren:
				return 29032;
			case PlayerFactions.Goblin:
				return 49356;
			case PlayerFactions.Human:
			default:
				return 29061;
		}
	}

}
</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return Questing.ObjectiveComplete(this, 1);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>A Sort Of Homecoming</Name>
      <QuestId>
        <int>12751</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Ambush At The Overlook</Name>
      <QuestId>
        <int>12754</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>		var p = new Vector3(1459.745, -5969.16, 119.4294, "None");
		uint itemID = 39645;
		if (GoToTask.ToPosition(p))
		{
			if (!ObjectManager.Me.HaveBuff(53061))
			{
				ItemsManager.UseItem(itemID);
			}
		}
		return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>A Meeting With Fate</Name>
      <QuestId>
        <int>12755</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Scarlet Onslaught Emerges</Name>
      <QuestId>
        <int>12756</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots />
        <EntryTarget />
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Scarlet Armies Approach...</Name>
      <QuestId>
        <int>12757</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public class ScarletArmiesApproach : QuestClass
{
	public ScarletArmiesApproach()
	{
		Name = "Scarlet Armies Approach...";
		QuestId.Add(12757);
		Step.AddRange(new[] { 0, 0, 0, 0, 0 });
	}
	public override bool IsComplete()
	{
		var darion = ObjectManager.GetObjectWoWUnit().FirstOrDefault(u =&gt; u != null &amp;&amp; u.IsValid &amp;&amp; u.IsAlive &amp;&amp; u.Entry == 28444);
		var result = darion != null;
		return result;
	}
	public override bool Pulse()
	{
		var port = ObjectManager.GetNearestWoWGameObject(ObjectManager.GetWoWGameObjectByEntry(191155));
		if (port != null &amp;&amp; port.IsValid &amp;&amp; port.GetDistance &lt; 50)
		{
			GoToTask.ToPositionAndIntecractWithGameObject(port.Position, port.Entry);
		}
		else
		{
			var p = new Vector3(1398.309, -5824.564, 137.187, "None");
			GoToTask.ToPositionAndIntecractWithNpc(p, 28914, 1);
		}
		return true;
	}
}
</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition>return ObjectManager.GetObjectWoWUnit().FirstOrDefault(u =&gt; u != null &amp;&amp; u.IsValid &amp;&amp; u.IsAlive &amp;&amp; u.Entry = 28444);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Scarlet Apocalypse</Name>
      <QuestId>
        <int>12778</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public class TheScarletApocalypse : QuestClass
{
	Vector3 _taxi = new Vector3(2348.741, -5694.941, 384.0876, "None");
	Vector3 _start = new Vector3(2322.179, -5731.134, 153.9199, "None");
	Vector3 _end = new Vector3(2311.307, -5740.898, 160.8796, "None");
	public TheScarletApocalypse()
	{
		Name = "The Scarlet Apocalypse";
		QuestId.Add(12778);
		Step.AddRange(new[] { 0, 0, 0, 0, 0 });
	}
	public override bool IsComplete()
	{
		return ObjectManager.Me.Position.DistanceTo(_end) &lt; 5;
	}
	public override bool Pulse()
	{
		var myPos = ObjectManager.Me.Position;
		if (myPos.DistanceZ(_taxi) &lt; 30)
		{
			if (GoToTask.ToPositionAndIntecractWithNpc(_taxi, 29488))
			{
				Thread.Sleep(15 * 1000);
			}
			return true;
		}
		if (GoToTask.ToPosition(_start))
		{
			if (GoToTask.ToPosition(_end))
			{

			}
		}
		return true;
	}
}
</Code>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>An End To All Things...</Name>
      <QuestId>
        <int>12779</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public class AnEndToAllThings : QuestClass
{
	uint hornID = 39700;
	List&lt;int&gt; _mobs1 = new List&lt;int&gt;() {
		29102,
		29103,
	};
	List&lt;int&gt; _mobs2 = new List&lt;int&gt;() {
		29104,
	};
	//Vector3 _safeSpot = new Vector3(2312.736, -5740.467, 169.9093, "Flying");
	Vector3 _safeSpot = new Vector3(2330.405, -5723.773, 169.7132, "Flying");
	Vector3 _endSpot = new Vector3(2324.73, -5729.882, 153.9199, "None");
	// new Vector3(2262.596, -5649.705, 160.8502, "Flying");// new Vector3(1978.199, -5816.977, 105.0143, "None");
	List&lt;Vector3&gt; _hotspots = new List&lt;Vector3&gt;()
	{
		new Vector3(1760.304f, -5813.95f, 185.7857f, "None"),
		new Vector3(1720.478f, -5802.029f, 186.664f, "None"),
		new Vector3(1686.54f, -5791.31f, 187.5138f, "None"),
		new Vector3(1651.945f, -5782.63f, 186.0213f, "None"),
		new Vector3(1616.954f, -5775.974f, 186.7899f, "None"),
		new Vector3(1581.76f, -5771.152f, 188.3408f, "None"),
		new Vector3(1546.357f, -5769.87f, 188.1616f, "None"),
		new Vector3(1518.384f, -5789.091f, 187.4943f, "None"),
		new Vector3(1509.293f, -5823.416f, 187.9689f, "None"),
		new Vector3(1520.269f, -5856.526f, 189.0811f, "None"),
		new Vector3(1546.654f, -5880.152f, 187.3205f, "None"),
		new Vector3(1574.685f, -5902.087f, 183.7643f, "None"),
		new Vector3(1609.05f, -5908.018f, 181.7404f, "None"),
		new Vector3(1644.768f, -5904.485f, 181.2636f, "None"),
		new Vector3(1678.795f, -5895.87f, 182.0125f, "None"),
		new Vector3(1713.193f, -5885.437f, 180.5251f, "None"),
		new Vector3(1741.257f, -5864.352f, 179.5802f, "None"),
		new Vector3(1759.878f, -5833.864f, 178.0917f, "None"),
	};
	public AnEndToAllThings()
	{
		Name = "An End To All Things...";
		QuestId.Add(12779);
		Step.AddRange(new[] { 150, 10, 0, 0, 0 });
	}
	public override bool IsComplete()
	{
		if (Questing.ObjectiveComplete(this, 1) &amp;&amp; Questing.ObjectiveComplete(this, 2))
		{
			if (ObjectManager.Me.Position.DistanceTo2D(_safeSpot) &gt; 10)
				return false;

			if (ObjectManager.Me.PlayerUsingVehicle)
				Usefuls.EjectVehicle();

			return GoToTask.ToPosition(_endSpot);
		}
		return false;
	}
	public override bool Pulse()
	{
		if (!ObjectManager.Me.PlayerUsingVehicle)
		{
			Conditions.ForceIgnoreIsAttacked = true;
			wManager.wManagerSetting.CurrentSetting.UseMount = false;
			ItemsManager.UseItem(hornID);
			Thread.Sleep(Others.Random(2000, 3000));
			return true;
		}
		Conditions.ForceIgnoreIsAttacked = true;
		wManager.wManagerSetting.CurrentSetting.UseMount = false;
		if (ObjectManager.Pet.HealthPercent &lt; 50 || ObjectManager.Pet.ManaPercentage &lt; 10 || (Questing.ObjectiveComplete(this, 1) &amp;&amp; Questing.ObjectiveComplete(this, 2)) )
		{
			if (ObjectManager.Me.Position.DistanceTo2D(_safeSpot) &lt; 5)
			{
				MovementManager.StopMove();
				Thread.Sleep(Usefuls.Latency);
				Usefuls.EjectVehicle();
			}
			else
			{
				Questing.ClickMove(_safeSpot);
			}
			return true;
		}
		var mob = Mob();
		if (mob != null &amp;&amp; mob.IsValid &amp;&amp; mob.IsAlive &amp;&amp; mob.IsAttackable &amp;&amp; mob.GetDistance &lt; 200)
		{
			MovementManager.StopMove();
			Thread.Sleep(Usefuls.Latency);
			MovementManager.Face(mob);
			Thread.Sleep(Usefuls.Latency);
			Lua.RunMacroText("/click OverrideActionBarButton1");
			Usefuls.WaitIsCasting();
		}
		var p = _hotspots[Others.Random(0, _hotspots.Count - 1)];
		Questing.ClickMove(p);
		Thread.Sleep(Others.Random(1000, 2000));
		return true;
	}

	WoWUnit Mob()
	{
		var mobs = Questing.ObjectiveComplete(this, 2) ? _mobs1 : _mobs2;
		return ObjectManager.GetNearestWoWUnit(ObjectManager.GetWoWUnitByEntry(mobs));
	}
}
</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Lich King's Command</Name>
      <QuestId>
        <int>12800</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Light of Dawn</Name>
      <QuestId>
        <int>12801</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public class TheLightofDawn : QuestClass
{
	bool _isStarted = false;
	public TheLightofDawn()
	{
		Name = "The Light of Dawn";
		QuestId.Add(12801);
		Step.AddRange(new[] { 1, 0, 0, 0, 0 });
	}
	public override bool Pulse()
	{
		if (!_isStarted)
		{
			var p = new Vector3(2431.67, -5137.021, 83.84145, "None");
			if (GoToTask.ToPositionAndIntecractWithNpc(p, 29173, 1))
			{
				_isStarted = true;
			}
			return true;
		}
		var npcEscort = 29173;
		var posStart = new Vector3(2322.951, -5220.709, 84.31853, "None");// new Vector3(2312.474, -5229.167, 84.61755, "None");
		var attackRange = 30;
		var escortRange = 10;
		//execute
		var npc = ObjectManager.GetNearestWoWUnit(ObjectManager.GetWoWUnitByEntry(npcEscort));
		if (npc != null &amp;&amp; npc.IsValid)
		{
			if (npc.InCombat)
			{
				var mob = ObjectManager.GetNearestWoWUnit(ObjectManager.GetWoWUnitAttackables(attackRange));
				if (mob != null &amp;&amp; mob.IsValid &amp;&amp; mob.IsAlive &amp;&amp; mob.IsAttackable)
				{
					Interact.InteractGameObject(mob.GetBaseAddress);
					Fight.StartFight(mob.Guid);
					return true;
				}
			}
			GoToTask.ToPosition(npc.Position, escortRange);
			return true;
		}
		else if (GoToTask.ToPosition(posStart))
		{
			wManager.Wow.Bot.States.AntiAfk.Pulse();
		}
		return true;
	}
}
</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Taking Back Acherus</Name>
      <QuestId>
        <int>13165</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public class TakingBackAcherus : QuestClass
{
	public TakingBackAcherus()
	{
		Name = "Taking Back Acherus";
		QuestId.Add(13165);
		Step.AddRange(new[] { 1, 0, 0, 0, 0 });
	}

	public override bool IsComplete()
	{
		return Usefuls.AreaId == 139;// Akerus
	}

	public override bool Pulse()
	{
		SpellManager.CastSpellByIdLUA(50977);
		Usefuls.WaitIsCasting();
		Thread.Sleep(Others.Random(1000, 2000));
		var gate = ObjectManager.GetNearestWoWGameObject(ObjectManager.GetWoWGameObjectByEntry(190942));
		if (gate != null &amp;&amp; gate.IsValid &amp;&amp; gate.CreatedBy == ObjectManager.Me.Guid)
		{
			GoToTask.ToPositionAndIntecractWithGameObject(gate.Position, gate.Entry); //Death Gate
		}
		return true;
	}
}
</Code>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Battle For The Ebon Hold</Name>
      <QuestId>
        <int>13166</int>
      </QuestId>
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>#if VISUAL_STUDIO
using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Class;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using wManager.Wow.Enums;
#endif

public class TheBattleForTheEbonHold : QuestClass
{
	Vector3 _bottomTeleport = new Vector3(2390.11, -5640.988, 378.1047, "None");
	Vector3 _topTeleport = new Vector3(2383.363, -5644.801, 421.68, "None");
	Vector3 _hotspot = new Vector3(2408.285, -5627.606, 420.6619, "None");
	List&lt;int&gt; _mobs1 = new List&lt;int&gt;() {
		31099,
	};
	List&lt;int&gt; _mobs2 = new List&lt;int&gt;() {
		31095,
		31096,
		31098,
	};
	public TheBattleForTheEbonHold()
	{
		Name = "The Battle For The Ebon Hold";
		QuestId.Add(13166);
		Step.AddRange(new[] { 0, 0, 0, 0, 0 });
	}
	public override bool IsComplete()
	{
		if (Questing.ObjectiveComplete(this, 1) &amp;&amp; Questing.ObjectiveComplete(this, 2))
		{
			return ObjectManager.Me.Position.DistanceZ(_bottomTeleport) &lt; 30;
		}
		return false;
	}
	public override bool Pulse()
	{
		if (Questing.ObjectiveComplete(this, 1) &amp;&amp; Questing.ObjectiveComplete(this, 2))
		{
			GoToTask.ToPosition(_topTeleport);
			return true;
		}
		var myPos = ObjectManager.Me.Position;
		if (myPos.DistanceZ(_topTeleport) &gt; 30)
		{
			GoToTask.ToPosition(_bottomTeleport);
			return true;
		}
		var mob = Mob();
		if (mob != null &amp;&amp; mob.IsValid &amp;&amp; mob.IsAlive &amp;&amp; mob.IsAttackable)
		{
			Interact.InteractGameObject(mob.GetBaseAddress);
			Fight.StartFight(mob.Guid);
			return true;
		}
		GoToTask.ToPosition(_hotspot);
		return true;
	}
	WoWUnit Mob()
	{
		var mobs = Questing.ObjectiveComplete(this, 1) ? _mobs2 : _mobs1;
		return ObjectManager.GetNearestWoWUnit(ObjectManager.GetWoWUnitByEntry(mobs));
	}


}
</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>1</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Where Kings Walk (A)</Name>
      <QuestId>
        <int>13188</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="2328.51" Y="-5659.394" Z="382.242" />
        </HotSpots>
        <EntryIdObjects>
          <int>193053</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return ObjectManager.Me.IsAlliance;</CanCondition>
      <IsCompleteCondition>return Usefuls.AreaId != 139;// Akerus</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Saurfang's Blessing (H)</Name>
      <QuestId>
        <int>13189</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="2350.378" Y="-5691.066" Z="382.242" />
        </HotSpots>
        <EntryIdObjects>
          <int>193052</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <ObjectiveCount6>0</ObjectiveCount6>
      <ObjectiveCount7>0</ObjectiveCount7>
      <ObjectiveCount8>0</ObjectiveCount8>
      <ObjectiveCount9>0</ObjectiveCount9>
      <ObjectiveCount10>0</ObjectiveCount10>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <AutoDetectObjectiveCount6>false</AutoDetectObjectiveCount6>
      <AutoDetectObjectiveCount7>false</AutoDetectObjectiveCount7>
      <AutoDetectObjectiveCount8>false</AutoDetectObjectiveCount8>
      <AutoDetectObjectiveCount9>false</AutoDetectObjectiveCount9>
      <AutoDetectObjectiveCount10>false</AutoDetectObjectiveCount10>
      <CanCondition>return ObjectManager.Me.IsHorde;</CanCondition>
      <IsCompleteCondition>return Usefuls.AreaId != 139;// Akerus</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
  </EasyQuests>
  <Script>include\qhelper.cs
include\dmghelper.cs</Script>
  <OffMeshConnections>
    <OffMeshConnection>
      <Path>
        <Vector3 X="1568.161" Y="-5718.97" Z="121.6816" />
        <Vector3 X="1573.043" Y="-5726.016" Z="120.7787" />
        <Vector3 X="1584.631" Y="-5720.939" Z="121.6795" />
      </Path>
      <ContinentId>609</ContinentId>
      <Name>City Hall (out)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="1584.631" Y="-5720.939" Z="121.6795" />
        <Vector3 X="1572.585" Y="-5725.357" Z="120.779" />
        <Vector3 X="1567.854" Y="-5719.125" Z="121.6818" />
      </Path>
      <ContinentId>609</ContinentId>
      <Name>City Hall (in)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="1572.492" Y="-5726.591" Z="120.7792" />
        <Vector3 X="1568.745" Y="-5719.225" Z="121.6809" />
      </Path>
      <ContinentId>609</ContinentId>
      <Name>City Hall (in2)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="1568.745" Y="-5719.225" Z="121.6809" />
        <Vector3 X="1572.253" Y="-5726.612" Z="120.7788" />
      </Path>
      <ContinentId>609</ContinentId>
      <Name>City Hall (out2)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="1576.384" Y="-5724.559" Z="120.7788" />
        <Vector3 X="1583.971" Y="-5720.939" Z="121.6786" />
      </Path>
      <ContinentId>609</ContinentId>
      <Name>City Hall (out3)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="1583.971" Y="-5720.939" Z="121.6786" />
        <Vector3 X="1576.097" Y="-5725.075" Z="120.7794" />
      </Path>
      <ContinentId>609</ContinentId>
      <Name>City Hall (in3)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="1404.232" Y="-5819.821" Z="131.2112" />
        <Vector3 X="1396.76" Y="-5831.076" Z="132.4299" />
        <Vector3 X="1405.867" Y="-5840.647" Z="132.4301" />
        <Vector3 X="1410.367" Y="-5834.663" Z="132.4301" />
        <Vector3 X="1401.596" Y="-5825.75" Z="137.1889" />
      </Path>
      <ContinentId>609</ContinentId>
      <Name>Scarlet Tavern (up)</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="1401.596" Y="-5825.75" Z="137.1889" />
        <Vector3 X="1410.111" Y="-5835.419" Z="132.4296" />
        <Vector3 X="1404.564" Y="-5840.003" Z="132.4296" />
        <Vector3 X="1397.088" Y="-5830.699" Z="132.4296" />
        <Vector3 X="1404.397" Y="-5820.052" Z="131.21" />
      </Path>
      <ContinentId>609</ContinentId>
      <Name>Scarlet Tavern (down)</Name>
    </OffMeshConnection>
  </OffMeshConnections>
</EasyQuestProfile>