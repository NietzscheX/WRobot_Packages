<?xml version="1.0" encoding="utf-8"?>
<EasyQuestProfile xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <QuestsSorted>
    <QuestsSorted Action="RunCode" NameClass="AllianceWOTLKSkinningAuthSettings.Load();&#xD;&#xA;        if (AllianceWOTLKSkinningAuthSettings.CurrentSetting.TransactionId == null)&#xD;&#xA;        {&#xD;&#xA;            AllianceWOTLKSkinningAuthSettings.CurrentSetting.ToForm();&#xD;&#xA;        }&#xD;&#xA;        AllianceWOTLKSkinningAuthSettings.CurrentSetting.Save();&#xD;&#xA;        new Authentication(AllianceWOTLKSkinningAuthSettings.CurrentSetting.TransactionId, &quot;c042092e9145&quot;);&#xD;&#xA;        ControlAuthentication.SetControl(5);" />
    <QuestsSorted Action="Pulse" NameClass="AutoUpdate" />
    <QuestsSorted Action="RunLuaCode" NameClass="if not InfoPanel then&#xD;&#xA;    InfoPanelText = &quot;Updating...&quot;&#xD;&#xA;    InfoPanel = CreateFrame(&quot;Frame&quot;)&#xD;&#xA;    InfoPanel:ClearAllPoints()&#xD;&#xA;    InfoPanel:SetBackdrop({bgFile = &quot;Interface/Buttons/WHITE8X8&quot;,})&#xD;&#xA;    InfoPanel:SetBackdropColor(0,0,0,.4)&#xD;&#xA;    InfoPanel:SetHeight(40)&#xD;&#xA;    InfoPanel:SetWidth(150)&#xD;&#xA;&#xD;&#xA;    InfoPanel.text = InfoPanel:CreateFontString(nil, &quot;BACKGROUND&quot;, &quot;GameFontNormal&quot;)&#xD;&#xA;    InfoPanel.text:SetAllPoints()&#xD;&#xA;    InfoPanel.text:SetText(InfoPanelText)&#xD;&#xA;    InfoPanel.text:SetTextColor(1, 1, 0, 1)&#xD;&#xA;    InfoPanel:SetPoint(&quot;RIGHT&quot;, -50, -100)&#xD;&#xA;&#xD;&#xA;    InfoPanel:SetMovable(true)&#xD;&#xA;    InfoPanel:EnableMouse(true)&#xD;&#xA;    InfoPanel:SetScript(&quot;OnMouseDown&quot;,function() InfoPanel:StartMoving() end)&#xD;&#xA;    InfoPanel:SetScript(&quot;OnMouseUp&quot;,function() InfoPanel:StopMovingOrSizing() end)&#xD;&#xA;    &#xD;&#xA;    InfoPanel.Close = CreateFrame(&quot;BUTTON&quot;, nil, InfoPanel, &quot;UIPanelCloseButton&quot;)&#xD;&#xA;    InfoPanel.Close:SetWidth(20)&#xD;&#xA;    InfoPanel.Close:SetHeight(20)&#xD;&#xA;    InfoPanel.Close:SetPoint(&quot;TOPRIGHT&quot;, InfoPanel, 3, 3)&#xD;&#xA;    InfoPanel.Close:SetScript(&quot;OnClick&quot;, function()&#xD;&#xA;        InfoPanel:Hide()&#xD;&#xA;        DEFAULT_CHAT_FRAME:AddMessage(&quot;Info Panel |cffC41F3Bclosed |cffFFFFFFWrite /InfoPanel to enable again.&quot;)     &#xD;&#xA;    end)&#xD;&#xA;    &#xD;&#xA;    SLASH_WHATEVERYOURFRAMESARECALLED1=&quot;/InfoPanel&quot;&#xD;&#xA;    SlashCmdList.WHATEVERYOURFRAMESARECALLED = function()&#xD;&#xA;        if InfoPanel:IsShown() then&#xD;&#xA;            InfoPanel:Hide()&#xD;&#xA;        else&#xD;&#xA;            InfoPanel:Show()&#xD;&#xA;        end&#xD;&#xA;    end&#xD;&#xA;end" />
    <QuestsSorted Action="RunCode" NameClass="Lua.LuaDoString(&quot;InfoPanelText = 'Bambos Wotlk Skinning Alliance - v1.0.0'&quot;);&#xD;&#xA;Lua.LuaDoString(&quot;InfoPanel.text:SetText(InfoPanelText)&quot;);" />
    <QuestsSorted Action="RunLuaCode" NameClass="function DoTradeSkillByName(SkillName, ItemName, Quantity)&#xD;&#xA;    if (TradeSkillFrame:IsVisible() ) then&#xD;&#xA;        TradeSkillFrame:Hide();&#xD;&#xA;    end&#xD;&#xA;    if not TradeSkillFrame then&#xD;&#xA;        CastSpellByName(SkillName)&#xD;&#xA;    end&#xD;&#xA;    if TradeSkillFrame:IsVisible() == nil then&#xD;&#xA;        CastSpellByName(SkillName)&#xD;&#xA;    end &#xD;&#xA;    for i=1,GetNumTradeSkills() do&#xD;&#xA;        local name, _, _, _ = GetTradeSkillInfo(i)&#xD;&#xA;        if (name == ItemName) then&#xD;&#xA;            DoTradeSkill(i, Quantity)&#xD;&#xA;        end&#xD;&#xA;    end&#xD;&#xA;    if (TradeSkillFrame:IsVisible() and Quantity &lt; 2) then&#xD;&#xA;        TradeSkillFrame:Hide();&#xD;&#xA;    end&#xD;&#xA;end" />
    <QuestsSorted Action="RunLuaCode" NameClass="function DoTradeSkillByName(SkillName, ItemName, Quantity)&#xD;&#xA;    if not TradeSkillFrame then&#xD;&#xA;        CastSpellByName(SkillName)&#xD;&#xA;    end&#xD;&#xA;    if TradeSkillFrame:IsVisible() == nil then&#xD;&#xA;        CastSpellByName(SkillName)&#xD;&#xA;    end &#xD;&#xA;    for i=1,GetNumTradeSkills() do&#xD;&#xA;        local name, _, _, _ = GetTradeSkillInfo(i)&#xD;&#xA;        if (name == ItemName) then&#xD;&#xA;            DoTradeSkill(i, Quantity)&#xD;&#xA;        end&#xD;&#xA;    end&#xD;&#xA;    if (TradeSkillFrame:IsVisible() and Quantity &lt; 2) then&#xD;&#xA;        TradeSkillFrame:Hide();&#xD;&#xA;    end&#xD;&#xA;end&#xD;&#xA;&#xD;&#xA;function BuyTrainerSkill(SkillName)&#xD;&#xA;    for i=1,GetNumTrainerServices() do&#xD;&#xA;        local name, _, _, _ = GetTrainerServiceInfo(i)&#xD;&#xA;        if (name == SkillName) then&#xD;&#xA;            BuyTrainerService(i)&#xD;&#xA;        end&#xD;&#xA;    end&#xD;&#xA;end" />
    <QuestsSorted Action="RunCode" NameClass="wManager.wManagerSetting.CurrentSetting.DoNotSellList.Add(&quot;Skinning Knife&quot;);" />
    <QuestsSorted Action="RunCode" NameClass="wManager.wManagerSetting.CurrentSetting.SkinMobs = true;&#xD;&#xA;wManager.wManagerSetting.CurrentSetting.Selling = true;&#xD;&#xA;wManager.wManagerSetting.CurrentSetting.SellGray = true;&#xD;&#xA;wManager.wManagerSetting.CurrentSetting.SellWhite = true;&#xD;&#xA;wManager.wManagerSetting.CurrentSetting.SellGreen = true;&#xD;&#xA;wManager.wManagerSetting.CurrentSetting.NpcScanVendor = true;&#xD;&#xA;wManager.wManagerSetting.CurrentSetting.AddToNpcDb = true;&#xD;&#xA;wManager.wManagerSetting.CurrentSetting.LootInCombat = true;&#xD;&#xA;wManager.wManagerSetting.CurrentSetting.HarvestMinerals = false;&#xD;&#xA;wManager.wManagerSetting.CurrentSetting.HarvestHerbs = false;" />
    <QuestsSorted Action="While" NameClass="!Skill.Has(SkillLine.Skinning)" />
    <QuestsSorted Action="RunLuaCode" NameClass="DEFAULT_CHAT_FRAME:AddMessage(&quot;|cFFFFCE2ESkinningBot|r Learn Apprentice Skinner&quot;)" />
    <QuestsSorted Action="RunCode" NameClass="wManager.Wow.Bot.Tasks.GoToTask.ToPositionAndIntecractWithNpc(new Vector3(-4740.69, -1028.76, 504.4318), 6291, 1, false);" />
    <QuestsSorted Action="RunLuaCode" NameClass="BuyTrainerSkill(&quot;Apprentice Skinner&quot;)" />
    <QuestsSorted Action="RunCode" NameClass="SpellManager.UpdateSpellBook();" />
    <QuestsSorted Action="EndWhile" NameClass="" />
    <QuestsSorted Action="If" NameClass="!ItemsManager.HasItemById(7005)" />
    <QuestsSorted Action="RunLuaCode" NameClass="DEFAULT_CHAT_FRAME:AddMessage(&quot;|cFFFFCE2ESkinningBot|r Buy Skinning Knife&quot;)" />
    <QuestsSorted Action="Pulse" NameClass="BuySkinningKnife" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="If" NameClass="Skill.GetValue(SkillLine.Skinning) &lt; 50" />
    <QuestsSorted Action="RunLuaCode" NameClass="DEFAULT_CHAT_FRAME:AddMessage(&quot;|cFFFFCE2ESkinningBot|r Skin to 50&quot;)" />
    <QuestsSorted Action="Pulse" NameClass="Skinto50" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="If" NameClass="wManager.Wow.Helpers.SpellManager.KnowSpell(50305)" />
    <QuestsSorted Action="GoToStep" NameClass="40" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="If" NameClass="wManager.Wow.Helpers.SpellManager.KnowSpell(32678)" />
    <QuestsSorted Action="GoToStep" NameClass="40" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="If" NameClass="wManager.Wow.Helpers.SpellManager.KnowSpell(10768)" />
    <QuestsSorted Action="GoToStep" NameClass="40" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="If" NameClass="wManager.Wow.Helpers.SpellManager.KnowSpell(8618)" />
    <QuestsSorted Action="GoToStep" NameClass="40" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="While" NameClass="!wManager.Wow.Helpers.SpellManager.KnowSpell(8617)" />
    <QuestsSorted Action="RunLuaCode" NameClass="DEFAULT_CHAT_FRAME:AddMessage(&quot;|cFFFFCE2ESkinningBot|r Learn Journeyman Skinner&quot;)" />
    <QuestsSorted Action="RunCode" NameClass="wManager.Wow.Bot.Tasks.GoToTask.ToPositionAndIntecractWithNpc(new Vector3(-4740.69, -1028.76, 504.4318), 6291, 1, false);" />
    <QuestsSorted Action="RunLuaCode" NameClass="BuyTrainerSkill(&quot;Journeyman Skinner&quot;)" />
    <QuestsSorted Action="RunCode" NameClass="SpellManager.UpdateSpellBook();" />
    <QuestsSorted Action="EndWhile" NameClass="" />
    <QuestsSorted Action="If" NameClass="Skill.GetValue(SkillLine.Skinning) &lt; 100" />
    <QuestsSorted Action="RunLuaCode" NameClass="DEFAULT_CHAT_FRAME:AddMessage(&quot;|cFFFFCE2ESkinningBot|r Skin to 100&quot;)" />
    <QuestsSorted Action="Pulse" NameClass="Skinto100" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="If" NameClass="Skill.GetValue(SkillLine.Skinning) &lt; 120" />
    <QuestsSorted Action="RunLuaCode" NameClass="DEFAULT_CHAT_FRAME:AddMessage(&quot;|cFFFFCE2ESkinningBot|r Skin to 120&quot;)" />
    <QuestsSorted Action="Pulse" NameClass="Skinto120" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="If" NameClass="Skill.GetValue(SkillLine.Skinning) &lt; 150" />
    <QuestsSorted Action="RunLuaCode" NameClass="DEFAULT_CHAT_FRAME:AddMessage(&quot;|cFFFFCE2ESkinningBot|r Skin to 120&quot;)" />
    <QuestsSorted Action="Pulse" NameClass="Skinto150" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="If" NameClass="wManager.Wow.Helpers.SpellManager.KnowSpell(50305)" />
    <QuestsSorted Action="GoToStep" NameClass="67" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="If" NameClass="wManager.Wow.Helpers.SpellManager.KnowSpell(32678)" />
    <QuestsSorted Action="GoToStep" NameClass="67" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="If" NameClass="wManager.Wow.Helpers.SpellManager.KnowSpell(10768)" />
    <QuestsSorted Action="GoToStep" NameClass="67" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="While" NameClass="!wManager.Wow.Helpers.SpellManager.KnowSpell(8618)" />
    <QuestsSorted Action="RunLuaCode" NameClass="DEFAULT_CHAT_FRAME:AddMessage(&quot;|cFFFFCE2ESkinningBot|r Learn Expert Skinner&quot;)" />
    <QuestsSorted Action="RunCode" NameClass="wManager.Wow.Bot.Tasks.GoToTask.ToPositionAndIntecractWithNpc(new Vector3(-4740.69, -1028.76, 504.4318), 6291, 1, false);" />
    <QuestsSorted Action="RunLuaCode" NameClass="BuyTrainerSkill(&quot;Expert Skinner&quot;)" />
    <QuestsSorted Action="RunCode" NameClass="SpellManager.UpdateSpellBook();" />
    <QuestsSorted Action="EndWhile" NameClass="" />
    <QuestsSorted Action="If" NameClass="Skill.GetValue(SkillLine.Skinning) &lt; 190" />
    <QuestsSorted Action="RunLuaCode" NameClass="DEFAULT_CHAT_FRAME:AddMessage(&quot;|cFFFFCE2ESkinningBot|r Skin to 190&quot;)" />
    <QuestsSorted Action="Pulse" NameClass="Skinto190" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="If" NameClass="Skill.GetValue(SkillLine.Skinning) &lt; 205" />
    <QuestsSorted Action="RunLuaCode" NameClass="DEFAULT_CHAT_FRAME:AddMessage(&quot;|cFFFFCE2ESkinningBot|r Skin to 205&quot;)" />
    <QuestsSorted Action="Pulse" NameClass="Skinto205" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="If" NameClass="Skill.GetValue(SkillLine.Skinning) &lt; 225" />
    <QuestsSorted Action="RunLuaCode" NameClass="DEFAULT_CHAT_FRAME:AddMessage(&quot;|cFFFFCE2ESkinningBot|r Skin to 225&quot;)" />
    <QuestsSorted Action="Pulse" NameClass="Skinto225" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="If" NameClass="wManager.Wow.Helpers.SpellManager.KnowSpell(50305)" />
    <QuestsSorted Action="GoToStep" NameClass="91" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="If" NameClass="wManager.Wow.Helpers.SpellManager.KnowSpell(32678)" />
    <QuestsSorted Action="GoToStep" NameClass="91" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="While" NameClass="!wManager.Wow.Helpers.SpellManager.KnowSpell(10768)" />
    <QuestsSorted Action="RunLuaCode" NameClass="DEFAULT_CHAT_FRAME:AddMessage(&quot;|cFFFFCE2ESkinningBot|r Learn Artisan Skinner&quot;)" />
    <QuestsSorted Action="RunCode" NameClass="wManager.Wow.Bot.Tasks.GoToTask.ToPositionAndIntecractWithNpc(new Vector3(-4740.69, -1028.76, 504.4318), 6291, 1, false);" />
    <QuestsSorted Action="RunLuaCode" NameClass="BuyTrainerSkill(&quot;Artisan Skinner&quot;)" />
    <QuestsSorted Action="RunCode" NameClass="SpellManager.UpdateSpellBook();" />
    <QuestsSorted Action="EndWhile" NameClass="" />
    <QuestsSorted Action="If" NameClass="Skill.GetValue(SkillLine.Skinning) &lt; 250" />
    <QuestsSorted Action="RunLuaCode" NameClass="DEFAULT_CHAT_FRAME:AddMessage(&quot;|cFFFFCE2ESkinningBot|r Skin to 250&quot;)" />
    <QuestsSorted Action="Pulse" NameClass="Skinto250" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="If" NameClass="Skill.GetValue(SkillLine.Skinning) &lt; 280" />
    <QuestsSorted Action="RunLuaCode" NameClass="DEFAULT_CHAT_FRAME:AddMessage(&quot;|cFFFFCE2ESkinningBot|r Skin to 280&quot;)" />
    <QuestsSorted Action="Pulse" NameClass="Skinto280" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="If" NameClass="Skill.GetValue(SkillLine.Skinning) &lt; 300" />
    <QuestsSorted Action="RunLuaCode" NameClass="DEFAULT_CHAT_FRAME:AddMessage(&quot;|cFFFFCE2ESkinningBot|r Skin to 300&quot;)" />
    <QuestsSorted Action="Pulse" NameClass="Skinto300" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="If" NameClass="Skill.GetValue(SkillLine.Skinning) &gt;= 350" />
    <QuestsSorted Action="GoToStep" NameClass="130" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="If" NameClass="wManager.Wow.Helpers.Usefuls.ContinentId == (int)wManager.Wow.Enums.ContinentId.Azeroth &amp;&amp; Skill.GetValue(SkillLine.Skinning) &lt; 350" />
    <QuestsSorted Action="RunLuaCode" NameClass="DEFAULT_CHAT_FRAME:AddMessage(&quot;|cFFFFCE2ESkinningBot|r Portal to Outlands&quot;)" />
    <QuestsSorted Action="RunCode" NameClass="wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = false;" />
    <QuestsSorted Action="Pulse" NameClass="DarkPortal" />
    <QuestsSorted Action="RunCode" NameClass="// Enter Portal &gt; &#xD;&#xA;&#xD;&#xA;Logging.Write(&quot;[Quester] Will enter the Portal in 1 second&quot;);&#xD;&#xA;Thread.Sleep(50);{ wManager.Wow.Helpers.Move.Forward(Move.MoveAction.PressKey, 1500); }" />
    <QuestsSorted Action="RunCode" NameClass="wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = true;" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="If" NameClass="wManager.Wow.Helpers.SpellManager.KnowSpell(50305)" />
    <QuestsSorted Action="GoToStep" NameClass="122" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="While" NameClass="!wManager.Wow.Helpers.SpellManager.KnowSpell(32678)" />
    <QuestsSorted Action="RunLuaCode" NameClass="DEFAULT_CHAT_FRAME:AddMessage(&quot;|cFFFFCE2ESkinningBot|r Learn Master Skinner&quot;)" />
    <QuestsSorted Action="RunCode" NameClass="wManager.Wow.Bot.Tasks.GoToTask.ToPositionAndIntecractWithNpc(new Vector3(-693.831, 2724.7, 94.11079), 18777, 1, false);" />
    <QuestsSorted Action="RunLuaCode" NameClass="BuyTrainerSkill(&quot;Master Skinner&quot;)" />
    <QuestsSorted Action="RunCode" NameClass="SpellManager.UpdateSpellBook();" />
    <QuestsSorted Action="EndWhile" NameClass="" />
    <QuestsSorted Action="If" NameClass="Skill.GetValue(SkillLine.Skinning) &lt; 330" />
    <QuestsSorted Action="RunLuaCode" NameClass="DEFAULT_CHAT_FRAME:AddMessage(&quot;|cFFFFCE2ESkinningBot|r Skin to 330&quot;)" />
    <QuestsSorted Action="Pulse" NameClass="Skinto330" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="If" NameClass="Skill.GetValue(SkillLine.Skinning) &lt; 350" />
    <QuestsSorted Action="RunLuaCode" NameClass="DEFAULT_CHAT_FRAME:AddMessage(&quot;|cFFFFCE2ESkinningBot|r Skin to 350&quot;)" />
    <QuestsSorted Action="Pulse" NameClass="Skinto350" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="If" NameClass="wManager.Wow.Helpers.Usefuls.ContinentId == (int)wManager.Wow.Enums.ContinentId.Expansion01" />
    <QuestsSorted Action="RunLuaCode" NameClass="DEFAULT_CHAT_FRAME:AddMessage(&quot;|cFFFFCE2ESkinningBot|r Portal to Ironforge&quot;)" />
    <QuestsSorted Action="RunCode" NameClass="wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = false;" />
    <QuestsSorted Action="Pulse" NameClass="PortaltoIronforge" />
    <QuestsSorted Action="RunCode" NameClass="wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = true;" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="If" NameClass="Skill.GetValue(SkillLine.Skinning) &gt;= 450" />
    <QuestsSorted Action="GoToStep" NameClass="157" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="If" NameClass="wManager.Wow.Helpers.Usefuls.ContinentId == (int)wManager.Wow.Enums.ContinentId.Azeroth &amp;&amp; Skill.GetValue(SkillLine.Skinning) &lt; 450" />
    <QuestsSorted Action="RunLuaCode" NameClass="DEFAULT_CHAT_FRAME:AddMessage(&quot;|cFFFFCE2ESkinningBot|r Ship to Borean Tundra&quot;)" />
    <QuestsSorted Action="Pulse" NameClass="CatchShiptoBoreanTundra" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="While" NameClass="!wManager.Wow.Helpers.SpellManager.KnowSpell(50305)" />
    <QuestsSorted Action="RunLuaCode" NameClass="DEFAULT_CHAT_FRAME:AddMessage(&quot;|cFFFFCE2ESkinningBot|r Learn Grand Master Skinner&quot;)" />
    <QuestsSorted Action="RunCode" NameClass="wManager.Wow.Bot.Tasks.GoToTask.ToPositionAndIntecractWithNpc(new Vector3(2136.1, 5255.88, 19.44827), 27000, 1, false);" />
    <QuestsSorted Action="RunLuaCode" NameClass="BuyTrainerSkill(&quot;Grand Master Skinner&quot;)" />
    <QuestsSorted Action="RunCode" NameClass="SpellManager.UpdateSpellBook();" />
    <QuestsSorted Action="EndWhile" NameClass="" />
    <QuestsSorted Action="If" NameClass="Skill.GetValue(SkillLine.Skinning) &lt; 395" />
    <QuestsSorted Action="RunLuaCode" NameClass="DEFAULT_CHAT_FRAME:AddMessage(&quot;|cFFFFCE2ESkinningBot|r Skin to 395&quot;)" />
    <QuestsSorted Action="Pulse" NameClass="Skinto395" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="If" NameClass="Skill.GetValue(SkillLine.Skinning) &lt; 450" />
    <QuestsSorted Action="RunLuaCode" NameClass="DEFAULT_CHAT_FRAME:AddMessage(&quot;|cFFFFCE2ESkinningBot|r Skin to 450&quot;)" />
    <QuestsSorted Action="Pulse" NameClass="Skinto450" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="RunLuaCode" NameClass="DEFAULT_CHAT_FRAME:AddMessage(&quot;|cFFFFCE2ESkinningBot|r Skinning 1-450 finished&quot;)" />
  </QuestsSorted>
  <NpcQuest>
    <NPCQuest Id="1855" Name="Tirion Fordring" GameObject="false">
      <PickUpQuests>
        <int>5542</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>5542</int>
      </TurnInQuests>
      <Position X="2672.048" Y="-2478.247" Z="72.62856" />
    </NPCQuest>
  </NpcQuest>
  <Npc />
  <EasyQuests>
    <EasyQuest>
      <Name>AutoUpdate</Name>
      <QuestId />
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>
public sealed class AutoUpdate : QuestClass
{
    public AutoUpdate() // Don't forget to use good classe name
    {
		Name = "AutoUpdate";
	
try
{
    string onlineFile = "http://bambo.myds.me/wotlk/BambosWotlkSkinningAlliance.xml";
    Quester.Bot.QuesterSetting.Load();
    string currentFile = System.Windows.Forms.Application.StartupPath + @"\Profiles\Quester\" + Quester.Bot.QuesterSetting.CurrentSetting.ProfileName;

    var currentFileContent = System.IO.File.ReadAllText(currentFile, System.Text.Encoding.UTF8);
    var onlineFileContent = new System.Net.WebClient { Encoding = System.Text.Encoding.UTF8 }.DownloadString(onlineFile);

    if (!string.IsNullOrWhiteSpace(currentFileContent) &amp;&amp; !string.IsNullOrWhiteSpace(onlineFileContent))
    {
        if (currentFileContent.Length == 39 &amp;&amp; onlineFileContent.Length == 39) // 39 is size of encrypted files with option "Short file"
        {
            if (currentFileContent != onlineFileContent) // if new update
            {
                robotManager.Helpful.Logging.Write("[Bambo_WotlkSkinning_Alliance]: New version found, try to update.");
                System.IO.File.WriteAllText(currentFile, onlineFileContent,
                System.Text.Encoding.UTF8); // replace user file by online file 
                new System.Threading.Thread(() =&gt; robotManager.Products.Products.ProductRestart()).Start(); // reload product (profile)
            }
            if (currentFileContent == onlineFileContent)
                robotManager.Helpful.Logging.Write("[Bambo_WotlkSkinning_Alliance]: The version on your pc is the latest updated version.");
        }
        else
            robotManager.Helpful.Logging.Write("[Bambo_WotlkSkinning_Alliance]: Your currently running version is not encrypted.");
    }
}
catch (System.Exception e)
{
    robotManager.Helpful.Logging.WriteError("Auto update: " + e);
}

        Lua.LuaDoString("DungeonFrameWorkLoaded = true");
    }
}
// More info here: http://wrobot.eu/topic/374-how-to-create-quest-profile/ (please don't add using and add only one quest)
</Code>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return Lua.LuaDoString&lt;bool&gt;("return UpdateFrameWorkLoaded");</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Buy Skinning Knife</Name>
      <QuestId />
      <QuestType>InteractWithNpc</QuestType>
      <QuestClass xsi:type="InteractWithNpcEasyQuestClass">
        <HotSpots>
          <Vector3 X="-4751.19" Y="-1026.82" Z="504.4316" />
        </HotSpots>
        <GossipOptionNpcInteractWith>1</GossipOptionNpcInteractWith>
        <Macro>BuyMerchantItem(13,1)</Macro>
        <IgnoreIfDead>false</IgnoreIfDead>
        <EntryIdTarget>
          <int>5128</int>
        </EntryIdTarget>
        <Range>4.5</Range>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return ItemsManager.GetItemCountById(7005) &gt;=1;</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Skin to 50</Name>
      <QuestId />
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-5495.478" Y="-436.0031" Z="406.4035" />
          <Vector3 X="-5421.959" Y="-329.1352" Z="401.2335" />
          <Vector3 X="-5275.066" Y="-430.239" Z="391.8841" />
          <Vector3 X="-5245.475" Y="-431.222" Z="386.8463" />
          <Vector3 X="-5730.671" Y="-319.3047" Z="363.7343" />
        </HotSpots>
        <EntryTarget>
          <int>1128</int>
          <int>1125</int>
          <int>1131</int>
          <int>1138</int>
          <int>1127</int>
          <int>1126</int>
          <int>1199</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return wManager.Wow.Helpers.Skill.GetValue(wManager.Wow.Enums.SkillLine.Skinning) &gt;= 50;</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Skin to 100</Name>
      <QuestId />
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-5589.238" Y="-3731.105" Z="316.2693" />
          <Vector3 X="-5393.303" Y="-3866.841" Z="332.8992" />
          <Vector3 X="-5286.277" Y="-3716.479" Z="302.7492" />
          <Vector3 X="-5241.553" Y="-3688.321" Z="304.5388" />
          <Vector3 X="-5229.479" Y="-3841.751" Z="323.985" />
          <Vector3 X="-5135.879" Y="-4008.111" Z="328.5774" />
          <Vector3 X="-5251.528" Y="-4148.762" Z="335.6288" />
        </HotSpots>
        <EntryTarget>
          <int>1191</int>
          <int>1188</int>
          <int>1192</int>
          <int>1189</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return wManager.Wow.Helpers.Skill.GetValue(wManager.Wow.Enums.SkillLine.Skinning) &gt;= 100;</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Skin to 120</Name>
      <QuestId />
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-5251.217" Y="-3887.978" Z="329.4051" />
          <Vector3 X="-5188.59" Y="-3925.957" Z="331.9129" />
          <Vector3 X="-5262.685" Y="-4108.762" Z="330.1544" />
        </HotSpots>
        <EntryTarget>
          <int>1189</int>
          <int>1192</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return wManager.Wow.Helpers.Skill.GetValue(wManager.Wow.Enums.SkillLine.Skinning) &gt;= 120;</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Skin to 150</Name>
      <QuestId />
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-3596.107" Y="-1203.64" Z="11.14073" />
          <Vector3 X="-3678.765" Y="-1342.502" Z="12.73207" />
          <Vector3 X="-3540.725" Y="-1329.995" Z="9.682442" />
          <Vector3 X="-3434.861" Y="-1400.025" Z="10.4552" />
          <Vector3 X="-3434.861" Y="-1400.025" Z="10.4552" />
        </HotSpots>
        <EntryTarget>
          <int>1020</int>
          <int>1021</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return wManager.Wow.Helpers.Skill.GetValue(wManager.Wow.Enums.SkillLine.Skinning) &gt;= 150;</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Skin to 190</Name>
      <QuestId />
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-3230.566" Y="-3362.385" Z="64.42333" />
          <Vector3 X="-3135.621" Y="-3200.215" Z="64.37431" />
          <Vector3 X="-3050.736" Y="-3281.808" Z="68.4313" />
        </HotSpots>
        <EntryTarget>
          <int>1018</int>
          <int>1019</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return wManager.Wow.Helpers.Skill.GetValue(wManager.Wow.Enums.SkillLine.Skinning) &gt;= 190;</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Skin to 205</Name>
      <QuestId />
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-1405.006" Y="-2551.568" Z="73.00591" />
          <Vector3 X="-1383.209" Y="-2646.404" Z="70.98798" />
          <Vector3 X="-1482.307" Y="-2588.268" Z="62.70298" />
          <Vector3 X="-1520.898" Y="-2813.707" Z="38.70478" />
          <Vector3 X="-1551.268" Y="-2882.799" Z="25.5566" />
          <Vector3 X="-1341.24" Y="-3170.1" Z="36.84433" />
          <Vector3 X="-1221.32" Y="-3144.387" Z="40.71471" />
          <Vector3 X="-1043.213" Y="-3234.224" Z="41.06159" />
          <Vector3 X="-1313.342" Y="-3345.029" Z="42.4806" />
        </HotSpots>
        <EntryTarget>
          <int>2559</int>
          <int>2560</int>
          <int>2565</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return wManager.Wow.Helpers.Skill.GetValue(wManager.Wow.Enums.SkillLine.Skinning) &gt;= 205;</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Skin to 225</Name>
      <QuestId />
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-1671.436" Y="-2672.232" Z="42.67013" />
          <Vector3 X="-1689.305" Y="-2812.254" Z="39.97084" />
          <Vector3 X="-1789.17" Y="-2918.191" Z="53.69549" />
          <Vector3 X="-2022.961" Y="-2553.355" Z="70.40359" />
        </HotSpots>
        <EntryTarget>
          <int>2561</int>
          <int>2565</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return wManager.Wow.Helpers.Skill.GetValue(wManager.Wow.Enums.SkillLine.Skinning) &gt;= 225;</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Skin to 250</Name>
      <QuestId />
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="78.02982" Y="-2205.406" Z="101.3227" />
          <Vector3 X="116.3633" Y="-2272.646" Z="103.5839" />
          <Vector3 X="145.588" Y="-2333.971" Z="113.4909" />
          <Vector3 X="57.0332" Y="-2421.842" Z="123.4046" />
          <Vector3 X="-22.25992" Y="-2606.146" Z="118.9362" />
          <Vector3 X="-110.1328" Y="-2649.705" Z="121.3548" />
        </HotSpots>
        <EntryTarget>
          <int>2923</int>
          <int>2924</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return wManager.Wow.Helpers.Skill.GetValue(wManager.Wow.Enums.SkillLine.Skinning) &gt;= 250;</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Skin to 280</Name>
      <QuestId />
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="92.83541" Y="-3233.299" Z="119.8016" />
          <Vector3 X="52.20703" Y="-3150.693" Z="128.252" />
          <Vector3 X="-59.58398" Y="-3377.836" Z="119.7946" />
          <Vector3 X="-12.39273" Y="-3488.043" Z="119.851" />
          <Vector3 X="-77.9707" Y="-3571.59" Z="120.4715" />
          <Vector3 X="424.9241" Y="-3541.063" Z="120.8887" />
          <Vector3 X="282.6328" Y="-3174.572" Z="120.9288" />
          <Vector3 X="169.4758" Y="-3108.433" Z="124.0006" />
        </HotSpots>
        <EntryTarget>
          <int>2925</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return wManager.Wow.Helpers.Skill.GetValue(wManager.Wow.Enums.SkillLine.Skinning) &gt;= 280;</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Skin to 300</Name>
      <QuestId />
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="1895.405" Y="-2123.017" Z="72.34498" />
          <Vector3 X="2000.965" Y="-2448.305" Z="62.91642" />
          <Vector3 X="1911.485" Y="-2017.869" Z="78.65672" />
          <Vector3 X="2023.807" Y="-1814.977" Z="66.258" />
        </HotSpots>
        <EntryTarget>
          <int>1816</int>
          <int>1817</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return wManager.Wow.Helpers.Skill.GetValue(wManager.Wow.Enums.SkillLine.Skinning) &gt;= 300;</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Skin to 330</Name>
      <QuestId />
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-788.8934" Y="2482.246" Z="35.65395" />
          <Vector3 X="-1031.724" Y="2447.664" Z="14.08969" />
          <Vector3 X="-1237.166" Y="2353.487" Z="57.85522" />
          <Vector3 X="-904.8295" Y="2237.502" Z="6.222017" />
          <Vector3 X="-749.3181" Y="1989.253" Z="44.58574" />
          <Vector3 X="-849.1126" Y="1882.426" Z="66.71394" />
        </HotSpots>
        <EntryTarget>
          <int>16879</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return wManager.Wow.Helpers.Skill.GetValue(wManager.Wow.Enums.SkillLine.Skinning) &gt;= 330;</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Skin to 350</Name>
      <QuestId />
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-1631.938" Y="6292.461" Z="57.09345" />
          <Vector3 X="-1804.63" Y="6647.224" Z="-18.65742" />
          <Vector3 X="-1918.813" Y="6779.112" Z="-72.19057" />
          <Vector3 X="-1808.203" Y="6928.116" Z="-38.65906" />
          <Vector3 X="-1715.599" Y="6751.092" Z="-15.70506" />
          <Vector3 X="-1574.367" Y="7018.667" Z="1.649379" />
        </HotSpots>
        <EntryTarget>
          <int>17130</int>
          <int>18205</int>
          <int>18226</int>
          <int>17131</int>
          <int>18334</int>
          <int>17132</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return wManager.Wow.Helpers.Skill.GetValue(wManager.Wow.Enums.SkillLine.Skinning) &gt;= 350;</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Skin to 395</Name>
      <QuestId />
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="2120.75" Y="5730.652" Z="54.22694" />
          <Vector3 X="2053.89" Y="5883.257" Z="45.88188" />
          <Vector3 X="2200.011" Y="5746.997" Z="61.85801" />
          <Vector3 X="2213.477" Y="5962.984" Z="62.58472" />
          <Vector3 X="2039.657" Y="6155.917" Z="40.27014" />
          <Vector3 X="2165.859" Y="6191.4" Z="54.4677" />
          <Vector3 X="2202.018" Y="6355.812" Z="46.67764" />
          <Vector3 X="2282.924" Y="6284.044" Z="52.25847" />
        </HotSpots>
        <EntryTarget>
          <int>25489</int>
          <int>25488</int>
          <int>25675</int>
          <int>25487</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return wManager.Wow.Helpers.Skill.GetValue(wManager.Wow.Enums.SkillLine.Skinning) &gt;= 395;</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Skin to 450</Name>
      <QuestId />
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="5296.374" Y="4011.494" Z="-71.15774" />
          <Vector3 X="5209.32" Y="4185.85" Z="-92.5162" />
          <Vector3 X="5246" Y="4286.2" Z="-96.2777" />
          <Vector3 X="5020.188" Y="4458.548" Z="-86.70808" />
          <Vector3 X="5156.22" Y="4469.42" Z="-97.03956" />
          <Vector3 X="5250.21" Y="4287.5" Z="-96.0905" />
        </HotSpots>
        <EntryTarget>
          <int>28098</int>
          <int>28096</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return wManager.Wow.Helpers.Skill.GetValue(wManager.Wow.Enums.SkillLine.Skinning) &gt;= 450;</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Catch Ship to Ratchet</Name>
      <QuestId />
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>// Sample of how to use Zeppelin/Ship
// In this sample, WRobot catch Zeppelin from Kalimdor (Ogrimmard) to Northrend (Borean Tundra (Warsong Hold))

/* Quest settings:
    * Can condition: "return Usefuls.ContinentId == (int) ContinentId.Azeroth;"
    * Is complete condition: "return Usefuls.ContinentId == (int) ContinentId.Kalimdor &amp;&amp; !ObjectManager.Me.InTransport;"
    * Not required in quest log: "True"
    * Quest type: "OverridePulseCSharpCode"
*/

// You can get zeppelin/ship/player positions and entry ID in tab "Tools" &gt; "Development Tools" &gt; "Dump all informations" (or "Memory information").

// Settings:
var zeppelinEntryId = 20808; // Zeppelin/Ship EntryId
// From
var fromZeppelinWaitPosition = new Vector3(-14277.75, 582.8661, 0); // Position where Zeppelin/Ship waits players (from)
var fromPlayerWaitPosition = new Vector3(-14282.5, 562.4498, 8.078089); // Position where the player waits Zeppelin/Ship (from)
var fromPlayerInZeppelinPosition = new Vector3(-14275.47, 577.903, 6.110038); // Position where the player waits in the Zeppelin/Ship (from)
// To
var toZeppelinWaitPosition = new Vector3(-1005.613, -3841.648, 0); // Position where Zeppelin/Ship waits players (to)
var toPlayerLeavePosition = new Vector3(-993.3602, -3821.989, 5.616833); // Position to go out the Zeppelin/Ship (to)

// Change WRobot settings:
wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = false;

// Code:
if (!Conditions.InGameAndConnectedAndProductStartedNotInPause)
    return true;

if (Usefuls.ContinentId == (int)ContinentId.Azeroth)
{
    if (!ObjectManager.Me.InTransport)
    {
        if (GoToTask.ToPosition(fromPlayerWaitPosition))
        {
            var zeppelin = ObjectManager.GetWoWGameObjectByEntry(zeppelinEntryId).OrderBy(o =&gt; o.GetDistance).FirstOrDefault();
            if (zeppelin != null &amp;&amp; zeppelin.Position.DistanceTo(fromZeppelinWaitPosition) &lt; 1)
            {
                GoToTask.ToPosition(fromPlayerInZeppelinPosition);
            }
        }
    }
}
else if (Usefuls.ContinentId == (int)ContinentId.Kalimdor)
{
    if (ObjectManager.Me.InTransport)
    {
        var zeppelin = ObjectManager.GetWoWGameObjectByEntry(zeppelinEntryId).OrderBy(o =&gt; o.GetDistance).FirstOrDefault();
        if (zeppelin != null &amp;&amp; zeppelin.Position.DistanceTo(toZeppelinWaitPosition) &lt; 1)
        {
            GoToTask.ToPosition(toPlayerLeavePosition);
        }
    }
}
return true;</Code>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition>return Usefuls.ContinentId == (int) ContinentId.Azeroth;</CanCondition>
      <IsCompleteCondition>return Usefuls.ContinentId == (int) ContinentId.Kalimdor &amp;&amp; !ObjectManager.Me.InTransport;</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Catch Ship to Booty Bay</Name>
      <QuestId />
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>// Sample of how to use Zeppelin/Ship
// In this sample, WRobot catch Zeppelin from Kalimdor (Ogrimmard) to Northrend (Borean Tundra (Warsong Hold))

/* Quest settings:
    * Can condition: "return Usefuls.ContinentId == (int) ContinentId.Kalimdor;"
    * Is complete condition: "return Usefuls.ContinentId == (int) ContinentId.Azeroth &amp;&amp; !ObjectManager.Me.InTransport;"
    * Not required in quest log: "True"
    * Quest type: "OverridePulseCSharpCode"
*/

// You can get zeppelin/ship/player positions and entry ID in tab "Tools" &gt; "Development Tools" &gt; "Dump all informations" (or "Memory information").

// Settings:
var zeppelinEntryId = 20808; // Zeppelin/Ship EntryId
// From
var fromZeppelinWaitPosition = new Vector3(-1005.613, -3841.648, 0); // Position where Zeppelin/Ship waits players (from)
var fromPlayerWaitPosition = new Vector3(-994.4711, -3827.313, 5.64916); // Position where the player waits Zeppelin/Ship (from)
var fromPlayerInZeppelinPosition = new Vector3(-998.0479, -3835.698, 6.191599); // Position where the player waits in the Zeppelin/Ship (from)
// To
var toZeppelinWaitPosition = new Vector3(-14277.75, 582.8661, 0); // Position where Zeppelin/Ship waits players (to)
var toPlayerLeavePosition = new Vector3(-14282.22, 563.0416, 7.915); // Position to go out the Zeppelin/Ship (to)

// Change WRobot settings:
wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = false;

// Code:
if (!Conditions.InGameAndConnectedAndProductStartedNotInPause)
    return true;

if (Usefuls.ContinentId == (int)ContinentId.Kalimdor)
{
    if (!ObjectManager.Me.InTransport)
    {
        if (GoToTask.ToPosition(fromPlayerWaitPosition))
        {
            var zeppelin = ObjectManager.GetWoWGameObjectByEntry(zeppelinEntryId).OrderBy(o =&gt; o.GetDistance).FirstOrDefault();
            if (zeppelin != null &amp;&amp; zeppelin.Position.DistanceTo(fromZeppelinWaitPosition) &lt; 1)
            {
                GoToTask.ToPosition(fromPlayerInZeppelinPosition);
            }
        }
    }
}
else if (Usefuls.ContinentId == (int)ContinentId.Azeroth)
{
    if (ObjectManager.Me.InTransport)
    {
        var zeppelin = ObjectManager.GetWoWGameObjectByEntry(zeppelinEntryId).OrderBy(o =&gt; o.GetDistance).FirstOrDefault();
        if (zeppelin != null &amp;&amp; zeppelin.Position.DistanceTo(toZeppelinWaitPosition) &lt; 1)
        {
            GoToTask.ToPosition(toPlayerLeavePosition);
        }
    }
}
return true;</Code>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition>return Usefuls.ContinentId == (int) ContinentId.Kalimdor;</CanCondition>
      <IsCompleteCondition>return Usefuls.ContinentId == (int) ContinentId.Azeroth &amp;&amp; !ObjectManager.Me.InTransport;</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Catch Ship to Borean Tundra</Name>
      <QuestId />
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>// Sample of how to use Zeppelin/Ship
// In this sample, WRobot catch Zeppelin from Kalimdor (Ogrimmard) to Northrend (Borean Tundra (Warsong Hold))

/* Quest settings:
    * Can condition: "return Usefuls.ContinentId == (int) ContinentId.Azeroth;"
    * Is complete condition: "return Usefuls.ContinentId == (int) ContinentId.Northrend &amp;&amp; !ObjectManager.Me.InTransport;"
    * Not required in quest log: "True"
    * Quest type: "OverridePulseCSharpCode"
*/

// You can get zeppelin/ship/player positions and entry ID in tab "Tools" &gt; "Development Tools" &gt; "Dump all informations" (or "Memory information").

// Settings:
var zeppelinEntryId = 190536; // Zeppelin/Ship EntryId
// From
var fromZeppelinWaitPosition = new Vector3(-8288.816, 1424.703, 0); // Position where Zeppelin/Ship waits players (from)
var fromPlayerWaitPosition = new Vector3(-8294.977, 1406.772, 4.37381); // Position where the player waits Zeppelin/Ship (from)
var fromPlayerInZeppelinPosition = new Vector3(-8295.361, 1425.049, 9.624383); // Position where the player waits in the Zeppelin/Ship (from)
// To
var toZeppelinWaitPosition = new Vector3(2218.391, 5119.588, 0); // Position where Zeppelin/Ship waits players (to)
var toPlayerLeavePosition = new Vector3(2230.869, 5133.548, 5.34315); // Position to go out the Zeppelin/Ship (to)

// Change WRobot settings:
wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = false;

// Code:
if (!Conditions.InGameAndConnectedAndProductStartedNotInPause)
    return true;

if (Usefuls.ContinentId == (int)ContinentId.Azeroth)
{
    if (!ObjectManager.Me.InTransport)
    {
        if (GoToTask.ToPosition(fromPlayerWaitPosition))
        {
            var zeppelin = ObjectManager.GetWoWGameObjectByEntry(zeppelinEntryId).OrderBy(o =&gt; o.GetDistance).FirstOrDefault();
            if (zeppelin != null &amp;&amp; zeppelin.Position.DistanceTo(fromZeppelinWaitPosition) &lt; 1)
            {
                GoToTask.ToPosition(fromPlayerInZeppelinPosition);
            }
        }
    }
}
else if (Usefuls.ContinentId == (int)ContinentId.Northrend)
{
    if (ObjectManager.Me.InTransport)
    {
        var zeppelin = ObjectManager.GetWoWGameObjectByEntry(zeppelinEntryId).OrderBy(o =&gt; o.GetDistance).FirstOrDefault();
        if (zeppelin != null &amp;&amp; zeppelin.Position.DistanceTo(toZeppelinWaitPosition) &lt; 1)
        {
            GoToTask.ToPosition(toPlayerLeavePosition);
        }
    }
}
return true;</Code>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition>return Usefuls.ContinentId == (int) ContinentId.Azeroth;</CanCondition>
      <IsCompleteCondition>return Usefuls.ContinentId == (int) ContinentId.Northrend &amp;&amp; !ObjectManager.Me.InTransport;</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Dark Portal</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-11898.36" Y="-3207.459" Z="-14.70771" />
          <Vector3 X="-11903.21" Y="-3208.192" Z="-14.81858" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>true</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Portal to Ironforge</Name>
      <QuestId />
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="-1794.156" Y="5406.947" Z="-12.428" />
        </HotSpots>
        <EntryIdObjects>
          <int>183322</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition>return Usefuls.ContinentId == (int) ContinentId.Expansion01;</CanCondition>
      <IsCompleteCondition>return Usefuls.ContinentId == (int) ContinentId.Azeroth;</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
  </EasyQuests>
  <Script>
using System;
using System.ComponentModel;
using System.Configuration;
using System.IO;
using System.Net;
using System.Threading;
using System.Windows.Forms;
using robotManager.Helpful;
using robotManager.Products;
  
  
  
  public class QuestHelper
{

    public static void AbandonQuest(string name)
    {
        string luaExecute = @"
            for logId=1,GetNumQuestLogEntries() do
                local questTitle, level, questTag, suggestedGroup, isHeader, isCollapsed, isComplete = GetQuestLogTitle(logId);
                if ( questTitle == ""{0}"" ) then
                    SelectQuestLogEntry(logId);
                    SetAbandonQuest();
                    AbandonQuest();
                    return;
                end
            end
        ";

        Lua.LuaDoString(string.Format(luaExecute, name));
    }

    public static void LoadStep(string stepName)
    {
        var p = wManager.Wow.Helpers.Quest.QuesterCurrentContext.Profile as Quester.Profile.QuesterProfile;
        if (p != null)
        {
            for (int i = 0; i &lt; p.QuestsSorted.Count; i++)
            {
                if (p.QuestsSorted[i].NameClass == stepName)
                {
                    wManager.Wow.Helpers.Quest.QuesterCurrentContext.CurrentStep = i - 1;
                    break;
                }
            }
        }
    }

   public static void LoadOneStepBefore(string stepName)
    {
        var p = wManager.Wow.Helpers.Quest.QuesterCurrentContext.Profile as Quester.Profile.QuesterProfile;
        if (p != null)
        {
            for (int i = 0; i &lt; p.QuestsSorted.Count; i++)
            {
                if ( p.QuestsSorted[i].NameClass == stepName)
                {
                    wManager.Wow.Helpers.Quest.QuesterCurrentContext.CurrentStep = i - 3;
                    break;
                }
            }
        }
    }
}

public class Authentication
{
    private readonly string orderId;
    private readonly string productId;
    private readonly string wRobotAuthKey;

    private readonly BackgroundWorker _validationThread = new BackgroundWorker();
    private bool _isRunning = false;
    private string authUrl;

    public Authentication(string orderId, string productId)
    {
        if (orderId == null)
        {
            MessageBox.Show("You need to enter your transaction id (from your Rocketr email) into the plugin settings to use this!");
        }

        this.orderId = orderId;
        this.productId = productId;

        System.Text.RegularExpressions.Match matcher = System.Text.RegularExpressions.Regex.Match(authManager.LoginServer.GetSubcriptionInfoThread(), "(Key: )(.*)(\\.\\.\\.)(.*)");
        if (matcher.Success) 
        {
		    wRobotAuthKey = matcher.Groups[2].Value;
        }

        _isRunning = true;
        authUrl = "http://h2884491.stratoserver.net:8080/authenticate?orderId=" + orderId.Trim() + "&amp;productId=" + productId + "&amp;wRobotAuthKey=" + wRobotAuthKey;
        _validationThread.DoWork += CheckValidiation;
        _validationThread.RunWorkerAsync();
    }
    
    ~Authentication()
    {
        _isRunning = false;
        _validationThread.DoWork -= CheckValidiation;
        _validationThread.Dispose();
    }

    private void CheckValidiation(object sender, DoWorkEventArgs e)
    {
        while (Products.IsStarted &amp;&amp; _isRunning)
        {
            try
            {
                bool timedOut = false;
                HttpWebResponse content = null;
                try
                {
                    var request = (HttpWebRequest)WebRequest.Create(authUrl);
                    request.Timeout = 30000;
                    request.ReadWriteTimeout = 30000;
                    content = (HttpWebResponse)request.GetResponse();
                }
                catch (Exception ex)
                {
                    timedOut = true;
                }
                
                //give it another try
                if ((content != null &amp;&amp; content.StatusCode != HttpStatusCode.OK) || timedOut)
                {
                    Thread.Sleep(3* 60 * 1000);
                    try
                    {
                        var request = (HttpWebRequest)WebRequest.Create(authUrl);
                        request.Timeout = 30000;
                        request.ReadWriteTimeout = 30000;
                        content = (HttpWebResponse)request.GetResponse();
                        timedOut = false;
                    }
                    catch (Exception ex)
                    {
                        timedOut = true;
                    }
                }

                string result = content != null ? new StreamReader(content.GetResponseStream()).ReadToEnd() : "false";

                if (!bool.Parse(result) || (content != null &amp;&amp; content.StatusCode != HttpStatusCode.OK) || timedOut)
                {
                    Products.ProductStop();
                    _isRunning = false;
                    _validationThread.DoWork -= CheckValidiation;
                    _validationThread.Dispose();
                    MessageBox.Show(@"You are trying to use a transaction id for a different product or another IP is already using this transaction id.
                    
If you changed your IP (one on wRobot session), wait 30 minutes.

This error was produced by the WOTLK alliance skinning profile of bambo.

                    ");
                    return;
                }

                Thread.Sleep(60 * 1000);
            }
            catch (Exception exp)
            {
                Logging.WriteError("" + exp);
            }
        }
    }
}

public class ControlAuthentication
{
    private static volatile int _controlVariable = 0;
    private static int _timeout = 0;
    private static bool _isRunning = true;
    private static bool disposeAuthThread = false;
    private static string profileName = "";

    public static void SetControl(int control)
    {
        _controlVariable = control;
    }

    static ControlAuthentication()
    {
        new Thread(() =&gt;
        {
            profileName = wManager.Wow.Helpers.Quest.QuesterCurrentContext.ProfileName;

            while(_isRunning &amp;&amp; !disposeAuthThread &amp;&amp; (wManager.Wow.Helpers.Conditions.ProductIsStarted || wManager.Wow.Helpers.Conditions.ProductInPause))
            {
                if(!wManager.Wow.Helpers.Quest.QuesterCurrentContext.ProfileName.Equals(profileName))
                {
                    disposeAuthThread = true;
                    break;
                }

                if(!wManager.Wow.Helpers.Conditions.ProductIsStarted)
                {
                    disposeAuthThread = true;
                    break;
                }

                while(wManager.Wow.Helpers.Quest.QuesterCurrentContext.CurrentStep &lt; 2)
                {
                    Thread.Sleep(500);

                    if(_controlVariable == 5 || !wManager.Wow.Helpers.Conditions.ProductIsStarted)
                        break;

                    _timeout += 500;

                    if(_timeout &gt;= 910000)
                    {
                        Products.ProductStop();
                        MessageBox.Show("[BambosWOTLKSkinningAlliance]: Timeout error. Unable to authenticate for more than 15 minutes. \n\nBot name: " + ObjectManager.Me.Name);
                        break;
                    }
                }

                _isRunning = false;

                if(wManager.Wow.Helpers.Conditions.ProductIsStarted || wManager.Wow.Helpers.Conditions.ProductInPause)
                {
                    Thread.Sleep(60000);

                    if(_controlVariable != 5)
                    {
                        Products.ProductStop();
                        MessageBox.Show("[BambosWOTLKSkinningAlliance]: Please enter your ID faster or make sure the authentication step is enabled. \nRestart the Bot now. \n\nBot name: " + ObjectManager.Me.Name);
                    }
                    _timeout = 0;
                    _isRunning = true;
                }
            }

        }).Start();
    }
    
}

[Serializable]
public class AllianceWOTLKSkinningAuthSettings : robotManager.Helpful.Settings
{
    [Setting]
    [Category("__IMPORTANT__")]
    [DisplayName("Rocketr ORDER ID")]
    [Description("You can find this ID at the top of the Email that you have received after your purchase.")]
    public string TransactionId { get; set; }

    public AllianceWOTLKSkinningAuthSettings()
    {
        TransactionId = null;
    }
    
    public static AllianceWOTLKSkinningAuthSettings CurrentSetting { get; set; }

    public bool Save()
    {
        try
        {
            return Save(AdviserFilePathAndName("AllianceWOTLKSkinningAuthSettings", "WOTLK"));
        }
        catch (Exception e)
        {
            robotManager.Helpful.Logging.Write("AllianceWOTLKSkinningAuthSettings &gt; Save(): " + e);
            return false;
        }
    }

    public static bool Load()
    {
        try
        {
            if (File.Exists(AdviserFilePathAndName("AllianceWOTLKSkinningAuthSettings", "WOTLK")))
            {
                CurrentSetting =
                    Load&lt;AllianceWOTLKSkinningAuthSettings&gt;(AdviserFilePathAndName("AllianceWOTLKSkinningAuthSettings", "WOTLK"));
                return true;
            }
            CurrentSetting = new AllianceWOTLKSkinningAuthSettings();
        }
        catch (Exception e)
        {
            robotManager.Helpful.Logging.Write("AllianceWOTLKSkinningAuthSettings &gt; Load(): " + e);
        }
        return false;
    }
}

</Script>
  <OffMeshConnections />
  <BlacklistNpc />
  <BlacklistNpcType />
  <Blackspots />
</EasyQuestProfile>